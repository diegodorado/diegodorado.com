{"version":3,"sources":["webpack:///./src/components/prettyTime.js","webpack:///./src/pages/music.js"],"names":["prettyTime","time","hours","Math","floor","mins","secs","substr","length","isNaN","audio","pageQuery","MusicIndex","data","location","tracks","allSoundcloudtrack","edges","map","t","node","useState","playing","setPlaying","index","setIndex","volume","setVolume","muted","setMuted","currentTime","setCurrentTime","play","playPromise","undefined","then","catch","error","console","log","pause","prev","i","next","seek","dir","readyState","delta","duration","onMuteClick","e","mut","audioTimeUpdate","_","useEffect","Audio","addEventListener","navigator","mediaSession","setActionHandler","removeEventListener","first_run","src","stream_url","metadata","MediaMetadata","title","artist","album","artwork","artwork_url","replace","window","onKeyPress","c","key","toLowerCase","preventDefault","className","i18nKey","components","href","target","rel","onClick","pageX","currentTarget","getBoundingClientRect","left","offsetWidth","aria-hidden","description","split","l","genre","tag_list","style","width","backgroundImage","waveform_url","alt","type","min","max","step","value","onChange","vol","parseInt"],"mappings":"oLAiBeA,EAjBI,SAACC,GAClB,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,MAC5BI,EAAO,IAAMF,KAAKC,MAAOH,EAAO,KAAQ,IACxCK,EAAO,IAAMH,KAAKC,MAAOH,EAAO,IAKpC,OAHAI,EAAOA,EAAKE,OAAOF,EAAKG,OAAS,GACjCF,EAAOA,EAAKC,OAAOD,EAAKE,OAAS,GAE5BC,MAAMH,GAMJ,QALDJ,EACQA,EAAV,IAAmBG,EAAnB,IAA2BC,EAEnBD,EAAV,IAAkBC,G,sDCKtB,IACII,EAAQ,KAuPCC,GAFEC,UAzOI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAGpBC,EAASF,EAAKG,mBAAmBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAHf,EAIXC,oBAAS,GAAhCC,EAJkC,KAIzBC,EAJyB,OAKfF,mBAAS,GAA5BG,EALkC,KAK3BC,EAL2B,OAMbJ,mBAAS,KAA9BK,EANkC,KAM1BC,EAN0B,OAOfN,oBAAS,GAA5BO,EAPkC,KAO3BC,EAP2B,OAQHR,mBAAS,GAAxCS,EARkC,KAQrBC,EARqB,KAUnCC,EAAO,WACX,IAAMC,EAAcvB,EAAMsB,YAGNE,IAAhBD,EACFV,GAAW,GAEXU,EACGE,MAAK,kBAAMZ,GAAW,MACtBa,OAAO,SAACC,GAAD,OAAYC,QAAQC,IAAIF,OAKhCG,EAAQ,WACZ9B,EAAM8B,QACNjB,GAAW,IAIPkB,EAAO,kBAAMhB,GAAU,SAAAiB,GAAC,OAAKA,EAAE,EAAIA,EAAE,EAAI3B,EAAOP,OAAO,MACvDmC,EAAO,kBAAMlB,GAAU,SAAAiB,GAAC,OAAKA,EAAE3B,EAAOP,OAAO,EAAIkC,EAAE,EAAG,MAItDE,EAAO,SAACC,GAEZ,GAAKvB,GAKL,GAAKZ,EAAMoC,WAAX,CAGA,IAAMC,EAAQhC,EAAOS,GAAOwB,SAAS,IAAK,GAC1CtC,EAAMoB,aAAeiB,EAAMF,QARzBb,KAsCEiB,EAAc,SAACC,GACnB,GAAKxC,EAAMoC,WAAX,CAGA,IAAMK,GAAQvB,EACdlB,EAAMkB,MAAQuB,EACdtB,EAASsB,KAGLC,EAAkB,SAAAC,GAAC,OAAItB,EAAerB,EAAMoB,cAElDwB,qBAAU,WAaR,OAZA5C,EAAQ,IAAI6C,OACNC,iBAAiB,QAASb,GAChCjC,EAAM8C,iBAAiB,aAAaJ,GAEhC,iBAAkBK,YACpBA,UAAUC,aAAaC,iBAAiB,gBAAiBlB,GACzDgB,UAAUC,aAAaC,iBAAiB,YAAahB,GACrDc,UAAUC,aAAaC,iBAAiB,OAAQ3B,GAChDyB,UAAUC,aAAaC,iBAAiB,QAASnB,IAI5C,WACD,iBAAkBiB,YACpBA,UAAUC,aAAaC,iBAAiB,gBAAiB,MACzDF,UAAUC,aAAaC,iBAAiB,YAAa,MACrDF,UAAUC,aAAaC,iBAAiB,OAAQ,MAChDF,UAAUC,aAAaC,iBAAiB,QAAS,OAGnDjD,EAAM8B,QACN9B,EAAMkD,oBAAoB,QAASjB,GACnCjC,EAAMkD,oBAAoB,aAAaR,GACvC1C,EAAQ,QAGV,IAEF4C,qBAAU,WACR,IAAMO,EAAyB,KAAZnD,EAAMoD,IACzBpD,EAAMoD,IAAS/C,EAAOS,GAAOuC,WAA7B,8CAEI,iBAAkBN,YAGpBA,UAAUC,aAAaM,SAAW,IAAIC,cAAc,CAClDC,MAAOnD,EAAOS,GAAO0C,MACrBC,OAAQ,eACRC,MAAO,QACPC,QAAS,CACP,CAAEP,IAAK/C,EAAOS,GAAO8C,YAAYC,QAAQ,YAAY,qBAKvDV,GACF7B,MAGF,CAACR,IAGH8B,qBAAU,WAIR,OAFAkB,OAAOhB,iBAAiB,UAAWiB,GAE5B,WACLD,OAAOZ,oBAAoB,UAAWa,MAIxC,CAACjD,EAAOF,IAIV,IAAMmD,EAAa,SAACvB,GAClB,IAAMwB,EAAIxB,EAAEyB,IAAIC,cAChB,GAAS,MAANF,GAAoB,UAANA,EA9HEpD,EAAUkB,IAAUR,SAgIlC,GAAS,cAAN0C,EACN9B,GAAM,QACH,GAAS,eAAN8B,EACN9B,EAAK,QACF,GAAS,YAAN8B,EACNjC,QACG,IAAS,cAANiC,EAGN,OAFA/B,IAIFO,EAAE2B,kBAIJ,OACE,kBAAC,IAAD,CAAQ/D,SAAUA,GAChB,kBAAC,IAAD,CAAKoD,MAAM,UACX,uBAAGY,UAAU,UACX,kBAAC,IAAD,CAAOC,QAAQ,aACbC,WAAY,CAAC,uBAAGC,KAAK,6CAA6CC,OAAO,SAASC,IAAI,uBAAzE,kBAEjB,yBAAKL,UAAU,kBA7LV,oLA+LL,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,UAAWM,QAtIV,SAAClC,GAEvB,GAAK5B,GAKL,GAAKZ,EAAMoC,WAAX,CAGA,IACM7C,GADQiD,EAAEmC,MAAQnC,EAAEoC,cAAcC,wBAAwBC,MAAQtC,EAAEoC,cAAcG,YACtE1E,EAAOS,GAAOwB,SAAS,IACzCtC,EAAMoB,YAAc7B,QATlB+B,KAmIwD0D,cAAY,QAC9D,yBAAKZ,UAAU,QACb,4BAAI,8BAAO/D,EAAOS,GAAO0C,QACzB,2BACGnD,EAAOS,GAAOmE,YAAYC,MAAM,QAAQ1E,KAAK,SAAC2E,EAAEnD,GAAH,OAC5C,0BAAMiC,IAAKjC,GAAKmD,EAAhB,IAAmB,iCAErB,4BAAK9E,EAAOS,GAAOsE,OAAW,4BAAK/E,EAAOS,GAAOuE,YAGrD,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,OAAOkB,MAAO,CAACC,MAAsB,IAAZnE,EAAiB,IAAIf,EAAOS,GAAOwB,SAAxC,OACnC,yBAAK8B,UAAU,WAAWkB,MAAO,CAACE,gBAAgB,OAAQnF,EAAOS,GAAO2E,aAAvB,SAGrD,yBAAKrB,UAAU,SACb,yBAAKsB,IAAI,UAAUtC,IAAK/C,EAAOS,GAAO8C,YAAYC,QAAQ,YAAY,oBAG1E,6BACE,kBAAC,IAAD,CAAgBa,QAAS3C,IACxBnB,EACC,kBAAC,IAAD,CAAS8D,QAAS5C,IACjB,kBAAC,IAAD,CAAQ4C,QAASpD,IACpB,kBAAC,IAAD,CAAeoD,QAASzC,IACvBf,EACE,kBAAC,IAAD,CAAakD,UAAU,OAAOM,QAASnC,IACrC,kBAAC,IAAD,CAAY6B,UAAU,OAAOM,QAASnC,IAC3C,yBAAK6B,UAAU,iBACb,2BAAOuB,KAAK,QAAQC,IAAI,IAAIC,IAAI,MAAMC,KAAK,IAAIC,MAAO7E,EAAO,EAAIF,EAAQgF,SApJ5D,SAACxD,GACtB,GAAKxC,EAAMoC,WAAX,CAGA,IAAM6D,EAAMC,SAAS1D,EAAEgC,OAAOuB,OACxBtD,EAAe,IAARwD,EACbjG,EAAMgB,OAAUiF,EAAM,IACtBjG,EAAMkB,MAAQuB,EACdxB,EAAUgF,GACV9E,EAASsB,QA6IH,0BAAM2B,UAAU,SAAhB,IAA0B9E,EAAW8B,KAEvC,4BACCf,EAAOG,KAAI,SAACC,EAAEuB,GACX,OACE,wBAAIiC,IAAKjC,EAAGoC,UAAWpC,IAAIlB,EAAM,SAAS,GAAI4D,QAAS,kBAAM3D,EAASiB,IAAIgD,cAAY,QAClF,0BAAMZ,UAAU,SAAS3D,EAAE+C,OAC3B,0BAAMY,UAAU,QAAQ9E,EAAWmB,EAAE6B,SAAW,cAc5C","file":"component---src-pages-music-js-6ab4ee0c040ab644c90e.js","sourcesContent":["const prettyTime = (time) => {\n  const hours = Math.floor(time / 3600)\n  let mins = '0' + Math.floor((time % 3600) / 60)\n  let secs = '0' + Math.floor((time % 60))\n\n  mins = mins.substr(mins.length - 2)\n  secs = secs.substr(secs.length - 2)\n\n  if (!isNaN(secs)) {\n    if (hours) {\n      return `${hours}:${mins}:${secs}`\n    }\n    return `${mins}:${secs}`\n  }\n  return '00:00'\n}\n\nexport default prettyTime\n","import React, {useState, useEffect} from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../layouts/main\"\nimport SEO from \"../components/seo\"\nimport { Trans } from 'react-i18next'\nimport prettyTime from '../components/prettyTime'\n\nimport { FaStepBackward,\n         FaStepForward,\n         FaPause,\n         FaPlay,\n         FaVolumeDown as FaVolumeOn,\n         FaVolumeMute as FaVolumeOff } from 'react-icons/fa/index.esm.js'\n\n//todo: make the player a widget for the site ... or not\n\n//todo: move to some env file\nconst clientId = '802921cdc630a9a0d66f25c665703b8c'\nlet audio = null\n\nconst ascii =  `\n                    ╔═╗    \n                    ║↑║    \n                    ╚═╝    \n╔═════════════╗  ╔═╗╔═╗╔═╗ \n║  SPACE BAR  ║  ║←║║↓║║→║ \n╚═════════════╝  ╚═╝╚═╝╚═╝ \n`\n\n\nconst MusicIndex = ({ data, location }) => {\n\n\n  const tracks = data.allSoundcloudtrack.edges.map(t => t.node)\n  const [playing, setPlaying] = useState(false)\n  const [index, setIndex] = useState(0)\n  const [volume, setVolume] = useState(100)\n  const [muted, setMuted] = useState(false)\n  const [currentTime, setCurrentTime] = useState(0)\n\n  const play = () => {\n    const playPromise = audio.play()\n    // In browsers that don’t yet support this functionality,\n    // playPromise won’t be defined.\n    if (playPromise === undefined) {\n      setPlaying(true)\n    }else{\n      playPromise\n        .then(() => setPlaying(true))\n        .catch( (error)  => console.log(error))\n    }\n\n  }\n\n  const pause = () => {\n    audio.pause()\n    setPlaying(false)\n  }\n\n  const toggle = () => playing ? pause() : play()\n  const prev = () => setIndex( i => (i>0 ? i-1 : tracks.length-1))\n  const next = () => setIndex( i => (i<tracks.length-1 ? i+1: 0))\n\n\n\n  const seek = (dir) =>{\n    //trigger play if not playing already\n    if (!playing){\n      play()\n      return\n    }\n\n    if (!audio.readyState)\n      return\n\n    const delta = tracks[index].duration/1000/10\n    audio.currentTime += delta*dir\n  }\n\n  const onProgressClick = (e) =>{\n    //trigger play if not playing already\n    if (!playing){\n      play()\n      return\n    }\n\n    if (!audio.readyState)\n      return\n\n    const xPos = (e.pageX - e.currentTarget.getBoundingClientRect().left) / e.currentTarget.offsetWidth\n    const time = xPos*tracks[index].duration/1000\n    audio.currentTime = time\n  }\n\n  const onVolumeChange = (e) =>{\n    if (!audio.readyState)\n      return\n\n    const vol = parseInt(e.target.value)\n    const mut = (vol === 0)\n    audio.volume = (vol / 100)\n    audio.muted = mut\n    setVolume(vol)\n    setMuted(mut)\n  }\n\n  const onMuteClick = (e) =>{\n    if (!audio.readyState)\n      return\n\n    const mut = (!muted)\n    audio.muted = mut\n    setMuted(mut)\n  }\n\n  const audioTimeUpdate = _ => setCurrentTime(audio.currentTime)\n\n  useEffect(()=>{\n    audio = new Audio()\n    audio.addEventListener('ended', next)\n    audio.addEventListener('timeupdate',audioTimeUpdate)\n\n    if ('mediaSession' in navigator) {\n      navigator.mediaSession.setActionHandler('previoustrack', prev)\n      navigator.mediaSession.setActionHandler('nexttrack', next)\n      navigator.mediaSession.setActionHandler('play', play)\n      navigator.mediaSession.setActionHandler('pause', pause)\n    }\n\n    //cleanup\n    return ()=>{\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.setActionHandler('previoustrack', null)\n        navigator.mediaSession.setActionHandler('nexttrack', null)\n        navigator.mediaSession.setActionHandler('play', null)\n        navigator.mediaSession.setActionHandler('pause', null)\n      }\n\n      audio.pause()\n      audio.removeEventListener('ended', next)\n      audio.removeEventListener('timeupdate',audioTimeUpdate)\n      audio = null\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  useEffect(()=>{\n    const first_run = (audio.src==='')\n    audio.src = `${tracks[index].stream_url}?client_id=${clientId}`\n\n    if ('mediaSession' in navigator) {\n      /*global MediaMetadata*/\n      /*eslint no-undef: \"error\"*/\n      navigator.mediaSession.metadata = new MediaMetadata({\n        title: tracks[index].title,\n        artist: 'Diego Dorado',\n        album: 'Music',\n        artwork: [\n          { src: tracks[index].artwork_url.replace('large.jpg','t500x500.jpg')}\n        ]\n      });\n    }\n\n    if(!first_run)\n      play()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[index])\n\n\n  useEffect(()=>{\n    //re-attach listener if left, right or error have changed\n    window.addEventListener('keydown', onKeyPress)\n    // Specify how to clean up after this effect:\n    return () => {\n      window.removeEventListener('keydown', onKeyPress)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[index, playing])\n\n\n\n  const onKeyPress = (e) => {\n    const c = e.key.toLowerCase()\n    if(c === ' '  || c === 'enter')\n      toggle()\n    else if(c === 'arrowleft')\n      seek(-1)\n    else if(c === 'arrowright')\n      seek(1)\n    else if(c === 'arrowup')\n      prev()\n    else if(c === 'arrowdown')\n      next()\n    else\n      return\n\n    e.preventDefault()\n  }\n\n\n  return (\n    <Layout location={location} >\n      <SEO title=\"music\" />\n      <p className=\"spacey\">\n        <Trans i18nKey=\"MusicIntro\"\n          components={[<a href=\"https://soundcloud.com/diego-dorado/tracks\" target=\"_blank\" rel=\"noopener noreferrer\">soundcloud</a>]} />\n      </p>\n      <pre className=\"ascii-keyboard\">{ascii}</pre>\n\n      <div className=\"playlist-player\">\n        <div className=\"track-details\">\n          <div className=\"details\"  onClick={onProgressClick} aria-hidden=\"true\">\n            <div className=\"text\">\n              <h3><span>{tracks[index].title}</span></h3>\n              <p>\n                {tracks[index].description.split('\\r\\n').map( (l,i) =>(\n                  <span key={i} >{l} <br/></span>\n                ))}\n                <em>{tracks[index].genre}</em><em>{tracks[index].tag_list}</em>\n              </p>\n            </div>\n            <div className=\"progress\">\n              <div className=\"fill\" style={{width: `${currentTime*1000*100/tracks[index].duration}%`}} />\n              <div className=\"waveform\" style={{backgroundImage: `url(${tracks[index].waveform_url})`}} />\n            </div>\n          </div>\n          <div className=\"image\">\n            <img alt=\"artwork\" src={tracks[index].artwork_url.replace('large.jpg','t500x500.jpg')} />\n          </div>\n        </div>\n        <nav>\n          <FaStepBackward onClick={prev}/>\n          {playing ?\n            <FaPause onClick={pause}/>\n            :<FaPlay onClick={play}/>}\n          <FaStepForward onClick={next}/>\n          {muted ?\n             <FaVolumeOff className=\"mute\" onClick={onMuteClick} />\n             : <FaVolumeOn className=\"mute\" onClick={onMuteClick} />}\n          <div className=\"volume-slider\" >\n            <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" value={muted? 0 : volume} onChange={onVolumeChange} />\n          </div>\n          <span className=\"timer\"> {prettyTime(currentTime)}</span>\n        </nav>\n        <ul>\n        {tracks.map((t,i) => {\n            return (\n              <li key={i} className={i===index?'active':''} onClick={() => setIndex(i)} aria-hidden=\"true\" >\n                  <span className=\"title\">{t.title}</span>\n                  <span className=\"time\">{prettyTime(t.duration / 1000)}</span>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n\n\n    </Layout>\n  )\n}\n\nexport default MusicIndex\n\nexport const pageQuery = graphql`\n  query {\n    allSoundcloudtrack(sort:{fields:created_at, order:DESC} ) {\n      edges {\n        node {\n          title\n          description\n          artwork_url\n          waveform_url\n          duration\n          genre\n          stream_url\n          created_at\n          tag_list\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}