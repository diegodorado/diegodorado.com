{"version":3,"sources":["webpack:///./src/layouts/cv2612.js","webpack:///./src/components/cv2612/utils/patches-utils.js","webpack:///./src/components/cv2612/context.js","webpack:///./src/components/cv2612/utils/obj_diff.js","webpack:///./src/components/cv2612/utils/ym2612.js","webpack:///./src/components/cv2612/emulator.js","webpack:///./src/components/cv2612/midi.js","webpack:///./src/components/cv2612/sequencer.js","webpack:///./src/components/cv2612/patches.js","webpack:///./src/components/cv2612/envelope.js","webpack:///./src/components/cv2612/slider.js","webpack:///./src/components/cv2612/operator.js","webpack:///./src/components/cv2612/channel.js","webpack:///./src/components/cv2612/utils/algorithmAscii.js","webpack:///./src/components/cv2612/channels.js","webpack:///./src/components/cv2612/device.js","webpack:///./src/pages/cv2612.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header/brand.js"],"names":["Layout","render","children","this","props","react_default","a","createElement","id","Helmet_default","bodyAttributes","class","brand","title","React","Component","dmp2patch","name","d","params","ch","op","o","replace","emptyParams","bitness","param","bits","_i","_groups","length","some","k","endsWith","console","log","emptyMapping","mapping","key","cc","CV2612Context","createContext","ctrlmap","Consumer","CV2612Provider","_this","_React$Component","call","handleCC","val","state","activeParameter","learning","Object","assign","setState","reactLocalStorage","setObject","_Object$entries","entries","_Object$entries$_i","m","step","Math","pow","v","floor","updateParam","toggleLearning","sendParameter","code","value","parts","split","parseInt","pId","indexOf","addr","midi","sendSysexSet","emulator","update","sendParameters","_i2","_Object$entries2","_Object$entries2$_i","setActiveParameter","updateParams","newParams","_i3","_Object$entries3","_Object$entries3$_i","filterChannel","filters","envelopes","soundOn","componentDidMount","savedMapping","getObject","keys","_i4","_Object$entries4","_Object$entries4$_i","componentWillUnmount","componentDidUpdate","prevProps","prevState","b","diff","reduce","_Object$assign","updateEnvelopesIfChanged","_this2","env_params","envs","acc","push","substring","filter","x","i","forEach","e","env","calculateEnvelopePoints","x1","round","ar","y1","tl","x2","d1","y2","sl","x3","d2","rr","map","p","join","Provider","YM2612","version","start","count","chip","Y","cfg","hq_fm","dac_bits","maxcalc","debug","debugLocal","debugArr","mode","strict","_YM","FREQ_SH","EG_SH","LFO_SH","TIMER_SH","FREQ_MASK","_ENV","BITS","MIN_ATT_INDEX","LEN","STEP","MAX_ATT_INDEX","_EG","ATT","DEC","SUS","REL","OFF","_DT","MASK","_SIN","SC","O","_TL","RES_LEN","TAB_LEN","tab","Array","QUIET","sin","db","RATE_STEPS","inc","rate_select","rate_shift","OPN","fktable","LFO","samples_per_step","ams_depth_shift","pm_output","pm_table","CHAN","N","SLOT","op_calc","_SLOT","FM_SLOT","_eg","d1r","d2r","init","DT","KSR","rate","ksr","mul","toString","phase","Incr","volume","vol_out","eg","sh","sel","ssg","ssgn","AMmask","reset","out","dt1mul","dt1","ksar","ks","amd1r","am","slrr","FM_CH","ALGO","FB","op1_out","connect","mem","pms","ams","fc","kcode","block_fnum","fn_h","outputs","m1","m2","c1","c2","canCSM","canDAC","muted","pan","s","FM_ST","c","r","address","status","timer_base","TA","TAL","TAC","TB","TBL","TBC","dt_tab","clock","FM_3SLOT","key_csm","FM_OPN","_timer","cnt","timer","timer_add","timer_overflow","ST","SL3","lfo","AM","PM","fn","table","max","YMX","CH","dacen","dacout","INTERNAL_TIMER_A","keyControlCSM","set_timers","keyOffCSM","advance_eg_channels","eg_cnt","advance_eg","bitmask","prototype","keyOn","csm","keyOff","keyOnCSM","setupConnection","Error","set_det_mul","set_tl","set_ar_ksr","old_ksr","q","set_dr","set_sr","set_sl_rr","j","update_ssg_eg","update_phase_lfo","off","blk","kc","update_phase_lfo_precalc","finc","refresh_fc_eg","calcVol","pm","fb","calculate","inp","asFB","eg_out","outs","WriteMode","WriteReg","S","SetPrescaler","ratio","scale","z","interval","ym","n","PI","LOG","POW","SIN","tmp","rl2","init_tables","num","reset_channels","write","read","len","lt","rt","dis_csm","buf","is_csm","didDac","_upd","CL","INTERNAL_TIMER_B","config","toggle","load","save","kb","AudioKeys","polyphony","rows","priority","Emulator","fm","noteOn","note","f","onKeyDown","frequency","noteOff","onKeyUp","notes","block","freq","splice","mask","size","shift","delay","mix","time","feedback","onToggleSoundClick","preventDefault","pause","startIfNeeded","play","context","down","up","Pizzicato","Sound","source","options","audioFunction","buffer","output","outputBuffer","getChannelData","bufferSize","Effects","Delay","stop","href","onClick","fa","contextType","Midi","midiInId","midiOutId","midiAccess","onChangeMidiIn","ev","setMidiIn","target","onChangeMidiOut","setMidiOut","sendSysex","data","sendMidi","msg","chksum","ma","midiOut","get","send","onMIDIStateChange","port","manufacturer","type","refreshMidiPorts","onMIDIMessage","from","lastMsg","JSON","stringify","onLearnClick","onPanicClick","onClearClick","toggleSound","midiIns","midiOuts","navigator","requestMIDIAccess","sysex","then","onstatechange","set","sendHandshake","midiIn","inputs","onmidimessage","values","includes","className","onChange","seqTimeOut","seqNote","seqNoteOn","Sequencer","sequencerOn","sequencerStop","clearTimeout","sequencerTick","sort","random","duration","setTimeout","Patches","addDmpPatch","patch","patches","onChangeHandler","_loop","_isArray","_iterator","_ref","next","done","fr","FileReader","onload","Int8Array","result","readAsArrayBuffer","files","isArray","Symbol","iterator","current","blur","onSave","onCreate","prompt","onDelete","onLoadDefaults","loadDefaultPatches","onLeftClick","onRightClick","onUploadClick","refs","file","click","XMLHttpRequest","onreadystatechange","readyState","_loop2","_isArray2","_iterator2","_ref2","responseType","response","open","encodeURI","responseText","style","display","ref","accept","multiple","Envelope","height","width","viewBox","xmlns","points","defaultProps","Slider","componentWillMount","mapped","min","Operator","slider","envelope","Channel","algorithm","algorithmAscii","operator","Channels","onFilterChannel","attributes","Fragment","channel","Device","sequencer","cv2612_patches","channels","CV2612Index","cv2612","location","seo","device","__webpack_require__","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","module","exports","require","default","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","swaps","Brand","getDiff","to","intervalId","setInterval","bind","clearInterval","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"gKAqBeA,4FAfbC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAlBF,SAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OACNH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,eAAgB,CAACC,MAAM,iBAC/BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,MAAM,kBAEfR,EAAAC,EAAAC,cAAA,YAAOL,QAXMY,IAAMC,oBCJdC,4DAAY,SAACC,EAAKC,GAE3B,GAAY,IAAPA,EAAE,IAAoB,IAAPA,EAAE,IAAoB,IAAPA,EAAE,IACrB,KAAPA,EAAE,IAAoB,IAAPA,EAAE,IAAoB,IAAPA,EAAE,GAAY,CAyB/C,IAFA,IAAMC,EAAS,CACfA,UAAoB,GACZC,EAAG,EAAEA,GAAI,EAAEA,IAAK,CAEtBD,EAAUC,EAAJ,UAAkBF,EAAE,GAC1BC,EAAUC,EAAJ,SAAiBF,EAAE,GACzBC,EAAUC,EAAJ,SAAiBF,EAAE,GACzBC,EAAUC,EAAJ,UAAkBF,EAAE,GAC1BC,EAAUC,EAAJ,SAAiB,EACvB,IAAI,IAAIC,EAAG,EAAEA,GAAI,EAAEA,IAAK,CAEtB,IAAMC,EAAkB,IAAR,IAALD,EAAO,EAAEA,GAAO,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,QAAsBH,EAAEI,EAAE,GAChCH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,GAC/BH,EAAUC,EAAJ,IAAUC,EAAV,QAAsBH,EAAEI,EAAE,GAChCH,EAAUC,EAAJ,IAAUC,EAAV,OAAqBH,EAAEI,EAAE,IAInC,MAAO,CAACL,KAAMA,EAAKM,QAAQ,OAAO,IAAKJ,OAAQA,GAGrD,OAAO,OAKEK,EAAc,WAMzB,IALA,IAAML,EAAS,CACfA,UAAoB,EACpBA,UAAoB,EACpBA,WAAqB,EACrBA,WAAqB,GACbC,EAAG,EAAEA,GAAI,EAAEA,IAAK,CAEtBD,EAAUC,EAAJ,UAAkB,EACxBD,EAAUC,EAAJ,SAAiB,EACvBD,EAAUC,EAAJ,SAAiB,EACvBD,EAAUC,EAAJ,UAAkB,EACxBD,EAAUC,EAAJ,SAAiB,EACvB,IAAI,IAAIC,EAAG,EAAEA,GAAI,EAAEA,IACjBF,EAAUC,EAAJ,IAAUC,EAAV,QAAsB,EAC5BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAC3BF,EAAUC,EAAJ,IAAUC,EAAV,QAAsB,EAC5BF,EAAUC,EAAJ,IAAUC,EAAV,OAAqB,EAG/B,OAAOF,GAIHM,EAAU,SAACC,GAYf,IAXA,IAUIC,EAAO,EACXC,EAAA,EAAAC,EAXe,CACb,CAAC,MACD,CAAC,KAAK,KAAK,OACX,CAAC,MAAM,KAAK,KAAK,MAAM,OACvB,CAAC,KAAK,KAAK,OACX,CAAC,KAAK,KAAK,MACX,GACA,CAAC,MACD,CAAC,MAAM,OAAO,SAGhBD,EAAAC,EAAAC,OAAAF,IAAwB,CACtB,GADWC,EAAAD,GACDG,KAAK,SAACC,GAAD,OAAON,EAAMO,SAASD,KACnC,OAAOL,EACTA,IAGF,OADAO,QAAQC,IAAI,gBAAgBT,GACrB,GAGIU,EAAe,WAC1B,IAAMC,EAAUb,IAChB,IAAK,IAAIc,KAAOD,EACdA,EAAQC,GAAO,CAACC,GAAG,KAAMnB,GAAG,KAAMO,KAAMF,EAAQa,IAElD,OAAOD,gBC9GIG,EAAgB1B,IAAM2B,gBAG7BC,GAFwBF,EAAcG,SAE5B,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,KAAK,QAoLjFC,cA/Kb,SAAAA,EAAYxC,GAAM,IAAAyC,EAAA,OAChBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MAqCF6C,SAAW,SAAC5B,EAAGmB,EAAIU,GACjB,IAAMjB,EAAIa,EAAKK,MAAMC,gBACrB,GAAGN,EAAKK,MAAMb,QAAQL,IAAMa,EAAKK,MAAME,SAAS,CAC9C,IAAIf,EAAOgB,OAAAC,OAAA,GAAOT,EAAKK,MAAMb,SAC1BA,EAAQL,GAAGZ,KAAOA,GAAMiB,EAAQL,GAAGO,KAAOA,IAC3CF,EAAQL,GAAGZ,GAAKA,EAChBiB,EAAQL,GAAGO,GAAKA,EAChBM,EAAKU,SAAS,CAAClB,QAASA,IACxBmB,oBAAkBC,UAAU,UAAUpB,IAI1C,QAAAT,EAAA,EAAA8B,EAAmBL,OAAOM,QAAQd,EAAKK,MAAMb,SAA7CT,EAAA8B,EAAA5B,OAAAF,IAAuD,KAAAgC,EAAAF,EAAA9B,GAA7CI,EAA6C4B,EAAA,GAA1CC,EAA0CD,EAAA,GACrD,GAAGC,EAAEtB,KAAOA,GAAMsB,EAAEzC,KAAOA,EAAG,CAC5B,IACM0C,EAAO,IADMC,KAAKC,IAAI,EAAEH,EAAElC,MAE1BsC,EAAIF,KAAKG,MAAMjB,EAAIa,GACzBjB,EAAKsB,YAAYnC,EAAEiC,MAvDPpB,EA6DlBuB,eAAiB,WACfvB,EAAKU,SAAS,CAACH,UAAWP,EAAKK,MAAME,YA9DrBP,EAiElBwB,cAAgB,SAACC,EAAMC,GACrB,IAAMC,EAAQF,EAAKG,MAAM,KACnBrD,EAAKsD,SAASF,EAAM,IACpBnD,EAAKqD,SAASF,EAAM,IACpB9C,EAAQ8C,EAAM,GACdG,EAAMjC,EAAQkC,QAAQlD,GAC5B,IAAU,IAAPiD,EAAS,CACV,IAAME,EAAO,CAACzD,EAAGC,EAAGsD,GACpB9B,EAAKK,MAAM4B,KAAKC,aAAaF,EAAKN,GAEpC1B,EAAKK,MAAM8B,SAASC,OAAO7D,EAAGC,EAAGK,EAAM6C,EAAM1B,EAAKK,MAAM/B,SA3ExC0B,EA+ElBqC,eAAiB,SAAC/D,GAChB,QAAAgE,EAAA,EAAAC,EAA0B/B,OAAOM,QAAQxC,GAAzCgE,EAAAC,EAAAtD,OAAAqD,IAAkD,KAAAE,EAAAD,EAAAD,GAAxCb,EAAwCe,EAAA,GAAlCd,EAAkCc,EAAA,GAChDxC,EAAKwB,cAAcC,EAAKC,KAjFV1B,EAuFlByC,mBAAqB,SAAC5D,GACpBmB,EAAKU,SAAS,CAACJ,gBAAiBzB,KAxFhBmB,EA2FlBsB,YAAc,SAACG,EAAKC,GAClB,IAAIpD,EAAMkC,OAAAC,OAAA,GAAOT,EAAKK,MAAM/B,QAC5BA,EAAOmD,GAAQC,EACf1B,EAAKU,SAAS,CAACpC,OAAQA,KA9FP0B,EAiGlB0C,aAAe,SAACC,GAEd,IADA,IAAIrE,EAAMkC,OAAAC,OAAA,GAAOT,EAAKK,MAAM/B,QAC5BsE,EAAA,EAAAC,EAA0BrC,OAAOM,QAAQ6B,GAAzCC,EAAAC,EAAA5D,OAAA2D,IAAqD,KAAAE,EAAAD,EAAAD,GAA3CnB,EAA2CqB,EAAA,GAArCpB,EAAqCoB,EAAA,GACnDxE,EAAOmD,GAAQC,EAEjB1B,EAAKU,SAAS,CAACpC,OAAQA,KAtGP0B,EAyGlB+C,cAAe,SAACxE,GACd,IAAIyE,EAAOxC,OAAAC,OAAA,GAAOT,EAAKK,MAAM2C,SAC7BA,EAAQzE,GAAKA,EACbyB,EAAKU,SAAS,CAACsC,aAzGfhD,EAAKK,MAAQ,CACX4B,KAAM,KACNE,SAAU,KACV5B,UAAU,EACVD,gBAAiB,KACjB2C,UAAW,GACX3E,OAAQK,IACRa,QAASD,IACTyD,QAAQ,CAACzE,GAAI,GACb2E,SAAS,EACTT,mBAAoBzC,EAAKyC,mBACzBnB,YAAatB,EAAKsB,YAClBoB,aAAc1C,EAAK0C,aACnBK,cAAe/C,EAAK+C,cACpBxB,eAAgBvB,EAAKuB,eACrBpB,SAAUH,EAAKG,SACfkC,eAAiBrC,EAAKqC,gBAnBRrC,sCAuBlBmD,kBAAA,WACE,IAAMC,EAAezC,oBAAkB0C,UAAU,UAAU,IAC3D,GAAG7C,OAAO8C,KAAKF,GAAcnE,OAAO,EAAE,CAEpC,IADA,IAAIO,EAAOgB,OAAAC,OAAA,GAAOnD,KAAK+C,MAAMb,SAC7B+D,EAAA,EAAAC,EAA0BhD,OAAOM,QAAQsC,GAAzCG,EAAAC,EAAAvE,OAAAsE,IAAwD,KAAAE,EAAAD,EAAAD,GAA9C9B,EAA8CgC,EAAA,GAAxC/B,EAAwC+B,EAAA,GACtDjE,EAAQiC,GAAQC,EAElBpE,KAAKoD,SAAS,CAAClB,QAAQA,QAI3BkE,qBAAA,eA8EAC,mBAAA,SAAmBC,EAAWC,GAE5B,IC/H6BpG,EAAEqG,ED+HzBC,GC/HuBtG,ED+HPoG,EAAUvF,OC/HDwF,ED+HSxG,KAAK+C,MAAM/B,OC9H9CkC,OAAO8C,KAAKQ,GAAGE,OAAO,SAACD,EAAMtE,GAAQ,IAAAwE,EAC1C,OAAIxG,EAAEgC,KAASqE,EAAErE,GAAasE,EAC9BvD,OAAAC,OAAA,GACKsD,IADLE,EAAA,IAEGxE,GAAMqE,EAAErE,GAFXwE,KAIC,KD0HD3G,KAAK+E,eAAe0B,GAEpBzG,KAAK4G,yBAAyBH,MAGhCG,yBAAA,SAAyBH,GAAK,IAAAI,EAAA7G,KAEtB8G,EAAa,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,MACvCC,EAAO7D,OAAO8C,KAAKS,GAAMC,OAAO,SAACM,EAAK7E,GAI1C,OAHI2E,EAAWlF,KAAK,SAACzB,GAAD,OAAOgC,EAAIL,SAAS3B,MAEtC6G,EAAIC,KAAK9E,EAAI+E,UAAU,EAAE,IACpBF,GACN,IACAG,OAAO,SAACC,EAAGC,EAAGlH,GAAP,OAAaA,EAAEsE,QAAQ2C,KAAOC,IAGxC,GAAGN,EAAKpF,OAAO,CACb,IAAIgE,EAASzC,OAAAC,OAAA,GAAOnD,KAAK+C,MAAM4C,WAC/BoB,EAAKO,QAAS,SAACC,GACb,IAAMC,EAAMV,EACTJ,OAAO,SAACM,EAAIK,GAAgD,OAA3CL,EAAG,GAAIK,GAAKR,EAAK9D,MAAM/B,OAAUuG,EAArB,IAA0BF,GAAYL,GAAK,IAC3ErB,EAAU4B,GAAKV,EAAKY,wBAAwBD,KAE9CxH,KAAKoD,SAAS,CAACuC,UAAWA,QAI9B8B,wBAAA,SAAwBD,GACtB,IAAME,EAAK9D,KAAK+D,OAAO,GAAGH,EAAII,IAAI,GAAG,KAC/BC,EAAKjE,KAAK+D,MAAMH,EAAIM,GAAG,IAAI,KAC3BC,EAAKnE,KAAK+D,MAAMD,GAAI,GAAGF,EAAIQ,IAAI,GAAG,KAClCC,EAAKrE,KAAK+D,MAAME,GAAI,IAAIA,IAAKL,EAAIU,GAAG,KACpCC,EAAKvE,KAAK+D,MAAMI,GAAI,GAAGP,EAAIY,IAAI,GAAG,GAAG,IAW3C,MAPe,CACX,CAAC,EAAE,KACH,CAACV,EAAGG,GACJ,CAACE,EAAGE,GACJ,CAACE,EAPMvE,KAAK+D,MAAMM,GAAI,IAAIA,IAAUT,EAAIY,GAAG,GAAZ,MAQ/B,CAPOxE,KAAK+D,MAAMQ,GAAI,GAAGX,EAAIa,IAAI,GAAG,KAOhC,MAEMC,IAAI,SAACC,GAAD,OAAKA,EAAEC,KAAK,OAAMA,KAAK,KAAKpH,QAAQ,OAAO,QAI/DtB,OAAA,WACE,OAGGI,EAAAC,EAAAC,cAACiC,EAAcoG,SAAf,CAAwBrE,MAAOpE,KAAK+C,OAClC/C,KAAKC,MAAMF,cA3KSY,IAAMC,sEEXpB,SAAS8H,IACvB,IAAK1I,gBAAgB0I,EAAQ,OAAO,IAAIA,EACxC1I,KAAK2I,QAAU,IACf3I,KAAK4I,MAAQ,EACb5I,KAAK6I,MAAQ,EACb7I,KAAK8I,KAAO,MAGb,SAAUC,GAGV,IAAIC,EAAM,CACTC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACRC,MAAM,EACNC,WAAW,EACXC,SAAS,GACTC,KAAK,EACLC,OAAO,GAIJC,EAAM,CACTC,QAAU,GACVC,MAAQ,GACRC,OAAS,GACTC,SAAW,IAEZJ,EAAIK,WAAa,GAAGL,EAAIC,SAAS,EAGjC,IAAIK,EAAO,CACVC,KAAO,GACPC,cAAgB,GAEjBF,EAAKG,IAAM,GAAGH,EAAKC,KACnBD,EAAKI,KAAO,IAAMJ,EAAKG,IACvBH,EAAKK,cAAgBL,EAAKG,IAAI,EAE9B,IAAIG,EAAM,CACTC,IAAM,EACNC,IAAM,EACNC,IAAM,EACNC,IAAM,EACNC,IAAM,GAIHC,EAAM,CACTX,KAAO,IAERW,EAAIT,IAAM,GAAGS,EAAIX,KACjBW,EAAIC,KAAOD,EAAIT,IAAI,EAGnB,IAAIW,EAAO,CACVb,KAAO,IAERa,EAAKX,IAAM,GAAGW,EAAKb,KACnBa,EAAKD,KAAOC,EAAKX,IAAI,EAErB,IAmBKY,EAqCAC,EAxDDC,EAAM,CACThB,KAAO,IAERgB,EAAIC,QAAU,IACdD,EAAIE,QAAU,GAAKF,EAAIC,QACvBD,EAAIG,IAAM,IAAIC,MAAMJ,EAAIE,SAExBnB,EAAKsB,MAAQL,EAAIE,SAAS,EAG1BzB,EAAI6B,IAAM,IAAIF,MAAMP,EAAKX,KAQzBT,EAAIvB,GAEI,EADH4C,EAAK,SAASS,GAAI,OAAW,EAAHA,EAAOxB,EAAKI,KAAM,IAE5C,GAAIW,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GACpDA,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,IAAKA,EAAG,IAAKA,EAAG,IAAKA,EAAG,IAAKA,EAAG,KAI3DT,EAAImB,WAAa,EACjBnB,EAAIoB,IAAM,CAGD,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAEjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAEjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAEjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EAEjB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,EACjB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GACrB,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAG1BpB,EAAIqB,YAEI,EADHX,EAAI,SAAS5K,GAAG,OAAQA,EAAEkK,EAAImB,WAAY,IAG3C,IAAIT,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAO5CA,EAAE,IAAIA,EAAE,IAAIA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAErBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAE,IAAIA,EAAE,IAGpBA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAGpBA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAGpBA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,KAO9CV,EAAIsB,WAAc,WACjB,IAAIZ,EAAI,SAAS5K,GAAG,OAAW,EAAHA,GAC5B,MAAO,CAQN4K,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAC5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAG5CA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IACpBA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IACpBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GACrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAGrBA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAC7CA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAC7CA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAC7CA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,GAAGA,EAAG,IA7C7B,GAiDlBJ,EAAIQ,IAAM,CAGT,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAE7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAE5C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC7C,EAAI,EAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAM9C,IAAIS,EAAM,CACTC,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAGtCC,EAAM,CAGTC,iBAAmB,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAkBhDC,gBAAkB,CAAC,EAAE,EAAE,EAAE,GAqBzBC,UAAY,CAGG,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAGpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAGpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAGpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAG,GAAK,IAGlC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAG,GAAK,IAClC,CAAC,EAAK,EAAK,EAAG,GAAI,GAAK,GAAK,GAAK,IAGjC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAG,GAAK,IAClC,CAAC,EAAK,EAAK,EAAG,GAAI,GAAK,GAAK,GAAK,IACjC,CAAC,EAAK,EAAE,GAAK,GAAK,GAAK,GAAK,GAAK,IAGjC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACpC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAG,GAAK,IAClC,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAG,GAAI,IACjC,CAAC,EAAK,EAAK,EAAG,GAAI,GAAK,GAAK,GAAK,IACjC,CAAC,EAAK,EAAE,GAAK,GAAK,GAAK,GAAK,GAAK,IACjC,CAAC,EAAK,EAAE,GAAK,GAAK,GAAK,GAAK,GAAK,KAIhDC,SAAW,IAAId,MAAM,QAGtBQ,EAAIO,KAAO,SAASC,GAAG,OAAS,EAAFA,GAC9BR,EAAIS,KAAO,SAASD,GAAG,OAAQA,GAAG,EAAG,GAGrC,IAuvBIE,EAvvBAC,EAAQ,CAAC,EAAE,EAAE,EAAE,GAKnB,SAASC,IA8BR,SAASC,IACRzM,KAAK4H,GAAG,EACR5H,KAAK0M,IAAI,EACT1M,KAAK2M,IAAI,EACT3M,KAAKqI,GAAG,EACRrI,KAAK4M,KAAO,WACX5M,KAAK4H,GAAG,EACR5H,KAAK0M,IAAI,EACT1M,KAAK2M,IAAI,EACT3M,KAAKqI,GAAG,GAtCVrI,KAAK6M,IAAM,EACX7M,KAAK8M,IAAM,EAkBX9M,KAAK+M,KAAO,IAjBZ,WACC/M,KAAK4H,GAAK,EACV5H,KAAK0M,IAAM,EACX1M,KAAK2M,IAAM,EACX3M,KAAKqI,GAAK,EACVrI,KAAKgN,IAAM,EACXhN,KAAKiN,IAAM,EACXjN,KAAK4M,KAAO,WACX5M,KAAK4H,GAAK,EACV5H,KAAK0M,IAAM,EACX1M,KAAK2M,IAAM,EACX3M,KAAKqI,GAAK,EACVrI,KAAKgN,IAAM,EACXhN,KAAKiN,IAAM,GAEZjN,KAAKkN,SAAW,WAAW,MAAO,CAAC,OAAOlN,KAAKiN,IAAI,MAAMjN,KAAKgN,IAAI,MAAMhN,KAAK4H,GAAG,OAAO5H,KAAK0M,IAAI,OAAO1M,KAAK2M,IAAI,MAAM3M,KAAKqI,IAAIG,KAAK,OAIrIxI,KAAKmN,MAAQ,EACbnN,KAAKoN,KAAO,EAEZpN,KAAK+C,MAAQ,EACb/C,KAAK8H,GAAK,EACV9H,KAAKqN,OAAS,EACdrN,KAAKkI,GAAK,EACVlI,KAAKsN,QAAU,EAaftN,KAAKuN,GAAK,CACTC,GAAG,IAAIf,EACPgB,IAAI,IAAIhB,EACRG,KAAK,WAAW5M,KAAKwN,GAAGZ,OAAO5M,KAAKyN,IAAIb,SAEzC5M,KAAK0N,IAAM,EACX1N,KAAK2N,KAAO,EACZ3N,KAAKmC,IAAM,EAEXnC,KAAK4N,OAAS,EACd5N,KAAK6N,MAAQ,WACZ7N,KAAKoN,MAAQ,EACbpN,KAAKmC,IAAM,EACXnC,KAAKmN,MAAQ,EACbnN,KAAK2N,KAAO,EACZ3N,KAAK+C,MAAQsH,EAAIK,IACjB1K,KAAKqN,OAAStD,EAAKK,cACnBpK,KAAKsN,QAAUvD,EAAKK,cACpBpK,KAAK8N,IAAI,GAAK,EACZ9N,KAAK8N,IAAI,GAAK,GAEjB9N,KAAKoJ,MAAQ,CACZ2E,OAAS,EAAGC,IAAM,EAAGf,IAAM,EAC3BnF,GAAK,EACLmG,KAAO,EAAGC,GAAK,EAAGtG,GAAK,EACvBuG,MAAQ,EAAGC,GAAK,EAAG1B,IAAM,EACzBC,IAAM,EACN0B,KAAO,EAAGnG,GAAK,EAAGG,GAAK,GAExBrI,KAAKoJ,MAAM8D,SAAW,WAAW,MAAO,CACvC,MAAOlN,KAAK8H,GACZ,OAAO9H,KAAKgO,IACZ,OAAOhO,KAAKiN,IACZ,MAAMjN,KAAKkO,GAAG,MAAMlO,KAAK4H,GACzB,MAAM5H,KAAKoO,GAAG,OAAOpO,KAAK0M,IAC1B,OAAO1M,KAAK2M,IACZ,MAAO3M,KAAKkI,GAAI,MAAMlI,KAAKqI,IAC1BG,KAAK,MACPxI,KAAK8N,IAAM,CAAC,EAAE,GACd9N,KAAKkN,SAAW,WAAW,MAAO,MAAMlN,KAAKoJ,MAAM8D,WAAW,KAE/D,SAASoB,IACRtO,KAAKqM,KAAO,CACX,IAAIG,EACJ,IAAIA,EACJ,IAAIA,EACJ,IAAIA,GAELxM,KAAKuO,KAAO,EACZvO,KAAKwO,GAAK,EACVxO,KAAKyO,QAAU,CAAC,EAAE,GAClBzO,KAAK0O,QAAU,CAAC,IAAI,IAAI,IAAI,KAC5B1O,KAAK2O,IAAM,CACVD,QAAQ,MACRtK,MAAM,GAEPpE,KAAK4O,IAAM,EACX5O,KAAK6O,IAAM,EACX7O,KAAK8O,GAAK,EACV9O,KAAK+O,MAAQ,EACb/O,KAAKgP,WAAa,EAClBhP,KAAKiP,KAAO,EACZjP,KAAKkP,QAAU,CACdC,GAAK,EACLC,GAAK,EACLC,GAAK,EACLC,GAAK,EACLX,IAAM,EACNvH,EAAI,EACJ0G,IAAM,GAEP9N,KAAKuP,OAAS,EACdvP,KAAKwP,OAAS,EACdxP,KAAKyP,MAAQ,EACbzP,KAAK0P,IAAM,CAAC,EAAE,GACd1P,KAAK6N,MAAQ,WACZ7N,KAAK2O,IAAIvK,MAAQ,EACfpE,KAAKyO,QAAQ,GAAK,EAClBzO,KAAKyO,QAAQ,GAAK,EACM,IAA1B,IAAIkB,EAAI3P,KAAKqM,KAAK1K,SAAiBgO,GAAG,GAAG3P,KAAKqM,KAAKsD,GAAG9B,SAEvD7N,KAAKkN,SAAW,WAAW,MAAO,MAAM,CACvC,QAAQlN,KAAKuO,KAAK,MAAMvO,KAAKwO,GAC7B,OAAOxO,KAAK4O,IAAI,OAAO5O,KAAK6O,IAC5B,SAAS7O,KAAKqM,KAAK7D,KAAK,KAAK,KAC5BA,KAAK,KAAK,KAEb,SAASoH,EAAMC,EAAGC,GACjB9P,KAAK+P,QAAU,EACf/P,KAAKgQ,OAAS,EACdhQ,KAAKuJ,KAAO,EAEZvJ,KAAKiQ,WAAa,EAClBjQ,KAAKkQ,GAAK,EACVlQ,KAAKmQ,IAAM,EACXnQ,KAAKoQ,IAAM,EACXpQ,KAAKqQ,GAAK,EACVrQ,KAAKsQ,IAAM,EACXtQ,KAAKuQ,IAAM,EACXvQ,KAAKwQ,OAAS,CACb,IAAIpF,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,IACV,IAAIA,MAAM,KAEXpL,KAAKyQ,MAAQZ,GAAG,QAChB7P,KAAK+M,KAAO+C,GAAG,MAGhB,SAASY,IACR1Q,KAAK8O,GAAK,CAAC,EAAE,EAAE,GACf9O,KAAKiP,KAAO,EACZjP,KAAK+O,MAAQ,CAAC,EAAE,EAAE,GAClB/O,KAAKgP,WAAa,CAAC,EAAE,EAAE,GACvBhP,KAAK2Q,QAAU,EAGhB,SAASC,EAAOf,EAAGC,GAIlB,SAASe,IACR7Q,KAAK8Q,IAAM,EACX9Q,KAAK+Q,MAAQ,EACb/Q,KAAKgR,UAAY,EACjBhR,KAAKiR,eAAiB,EACtBjR,KAAK4M,KAAO,WACX5M,KAAK8Q,IAAM,EACX9Q,KAAK+Q,MAAQ,EACb/Q,KAAKgR,UAAY,EACjBhR,KAAKiR,eAAiB,GAZxBjR,KAAKkR,GAAK,IAAItB,EAAMC,EAAEC,GACtB9P,KAAKmR,IAAM,IAAIT,EAcf1Q,KAAKuN,GAAK,IAAIsD,EACd7Q,KAAKoR,IAAM,IAAIP,EACf7Q,KAAKoR,IAAIC,GAAK,EACdrR,KAAKoR,IAAIE,GAAK,EACdtR,KAAKuR,GAAK,CAACC,MAAQ,IAAIpG,MAAM,MAAOqG,IAAM,GAG3C,SAASC,EAAI7B,EAAEC,GACd9P,KAAK2R,GAAK,CAAC,IAAIrD,EAAS,IAAIA,EAAS,IAAIA,EAAS,IAAIA,EAAS,IAAIA,EAAS,IAAIA,GAChFtO,KAAK2R,GAAG,GAAGpC,OAAS,EACpBvP,KAAK2R,GAAG,GAAGnC,OAAS,EACpBxP,KAAK4R,MAAQ,EACb5R,KAAK6R,OAAS,EACd7R,KAAK4L,IAAM,IAAIgF,EAAOf,EAAEC,GACxB9P,KAAKkN,SAAW,WAAW,MAAO,QAAQlN,KAAK2R,GAAGnJ,KAAK,OAAO,OA6D/D,SAASsJ,EAAiB1K,IACN,EAAdA,EAAEwE,IAAIsF,GAAG3H,MAAW,IACpBP,EAAIO,KAAMnC,EAAEwE,IAAIsF,GAAGd,KAAOhJ,EAAEwE,IAAIsF,GAAGjB,aAChC7I,EAAEwE,IAAIsF,GAAGd,IACZhJ,EAAEwE,IAAIsF,GAAGd,KAAK,KAEE,EAAdhJ,EAAEwE,IAAIsF,GAAG3H,MAAW,IAAGnC,EAAEwE,IAAIsF,GAAGlB,QAAU,GAE3ChH,EAAIO,MAAMnC,EAAEwE,IAAIsF,GAAGf,IAAK/I,EAAEwE,IAAIsF,GAAGd,KAAOhJ,EAAEwE,IAAIsF,GAAGf,IAChD/I,EAAEwE,IAAIsF,GAAGd,IAAMhJ,EAAEwE,IAAIsF,GAAGf,IAEA,MAAR,IAAhB/I,EAAEwE,IAAIsF,GAAG3H,OAAqBnC,EAAEuK,GAAG,GAAGI,kBAmB9C,SAASC,EAAW5K,EAAEtD,IASE,KAAjBsD,EAAEwE,IAAIsF,GAAG3H,KAAKzF,IAAS,IAC5BsD,EAAEuK,GAAG,GAAGtF,KAAKE,EAAM,IAAIa,MAAQ,EAEf,MAAR,IAAFtJ,IAAiBsD,EAAEwE,IAAIuF,IAAIR,UAEhCvJ,EAAEuK,GAAG,GAAGM,UAAU1F,EAAM,IACxBnF,EAAEuK,GAAG,GAAGM,UAAU1F,EAAM,IACxBnF,EAAEuK,GAAG,GAAGM,UAAU1F,EAAM,IACxBnF,EAAEuK,GAAG,GAAGM,UAAU1F,EAAM,IACxBnF,EAAEwE,IAAIuF,IAAIR,QAAU,IAIf,EAAF7M,KAAsB,EAAdsD,EAAEwE,IAAIsF,GAAG3H,QAASnC,EAAEwE,IAAIsF,GAAGd,IAAMhJ,EAAEwE,IAAIsF,GAAGf,KAChD,EAAFrM,KAAsB,EAAdsD,EAAEwE,IAAIsF,GAAG3H,QAASnC,EAAEwE,IAAIsF,GAAGX,IAAMnJ,EAAEwE,IAAIsF,GAAGZ,KAEvDlJ,EAAEwE,IAAIsF,GAAGlB,SAAWlM,GAAG,EACvBsD,EAAEwE,IAAIsF,GAAG3H,KAAOzF,EA6SjB,SAASoO,EAAoB9K,EAAG+K,GAA8B,IAArB,IAAI9K,EAAID,EAAEuK,GAAGhQ,SAAiB0F,GAAG,GAAGD,EAAEuK,GAAGtK,GAAG+K,WAAWD,GAzZhG1I,EAAI4I,QAAU,EAEd7F,EAAQ8F,UAAUC,MAAQ,SAASnL,EAAEoL,GAC/BxS,KAAKmC,KAAMiF,EAAEwE,IAAIuF,IAAIR,UACzB3Q,KAAKmN,MAAQ,EACbnN,KAAK2N,KAAO,EACP3N,KAAK+M,KAAKnF,GAAG5H,KAAK+M,KAAKC,IAAK,GAChChN,KAAK+C,MAAS/C,KAAKqN,QAAQtD,EAAKE,cAAgBjK,KAAKkI,KAAK6B,EAAKE,cAAcI,EAAIG,IAAIH,EAAIE,IAAKF,EAAIC,KAElGtK,KAAKqN,OAAStD,EAAKE,cACnBjK,KAAK+C,MAAS/C,KAAKkI,KAAK6B,EAAKE,cAAeI,EAAIG,IAAIH,EAAIE,MAG3C,EAATvK,KAAK0N,KAAU,IAAI1N,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,EAAG1N,KAAKsN,QAAUtN,KAAK8H,IAAK,IAAM9H,KAAKqN,OAAQtD,EAAKK,eAClGpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,SAE9BmF,IAAKxS,KAAKmC,IAAM,IAEtBmM,EAAMgE,UAAUC,MAAQ,SAASnL,EAAEuI,GAAI3P,KAAKqM,KAAKsD,GAAG4C,MAAMnL,EAAE,IAE5DoF,EAAQ8F,UAAUG,OAAS,SAASrL,EAAEoL,IAChCA,IAAMxS,KAAKmC,MAAQqQ,GAAKxS,KAAKmC,MAAMiF,EAAEwE,IAAIuF,IAAIR,UAC7C3Q,KAAK+C,MAAMsH,EAAII,MAClBzK,KAAK+C,MAAQsH,EAAII,KAEH,EAATzK,KAAK0N,KAAU,KAEd1N,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,IAAG1N,KAAKqN,OAAU,IAAMrN,KAAKqN,OAAQ,GAEjErN,KAAKqN,QAAQ,MAChBrN,KAAKqN,OAAStD,EAAKK,cACnBpK,KAAK+C,MAAQsH,EAAIK,KAElB1K,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,UAI3BmF,IAAKxS,KAAKmC,IAAM,IAEtBmM,EAAMgE,UAAUG,OAAS,SAASrL,EAAEuI,GAAI3P,KAAKqM,KAAKsD,GAAG8C,OAAOrL,EAAE,IAE9DkH,EAAMgE,UAAUI,SAAW,SAAStL,EAAEuI,GAAI3P,KAAKqM,KAAKsD,GAAG4C,MAAMnL,EAAE,IAC/DkH,EAAMgE,UAAUL,UAAY,SAAS7K,EAAEuI,GAAI3P,KAAKqM,KAAKsD,GAAG8C,OAAOrL,EAAE,IAEjEkH,EAAMgE,UAAUP,cAAgB,SAAS3K,GACxCpH,KAAK0S,SAASnG,EAAM,IACpBvM,KAAK0S,SAASnG,EAAM,IACpBvM,KAAK0S,SAASnG,EAAM,IACpBvM,KAAK0S,SAASnG,EAAM,IACpBnF,EAAEwE,IAAIuF,IAAIR,QAAU,GA+DrBrC,EAAMgE,UAAUK,gBAAkB,WACjC,IACIxR,EAAQ,EAARA,EAAc,EAAdA,EAAoB,EACxB,OAAQnB,KAAKuO,MACZ,KAAK,EAEJvO,KAAK0O,QAAQvN,GAAQ,KACrBnB,KAAK0O,QAAQvN,GAAQ,MACrBnB,KAAK0O,QAAQvN,GAAQ,KAErBnB,KAAK2O,IAAID,QAAU,KACnB,MACD,KAAK,EAGJ1O,KAAK0O,QAAQvN,GAAQ,MACrBnB,KAAK0O,QAAQvN,GAAQ,MACrBnB,KAAK0O,QAAQvN,GAAQ,KAErBnB,KAAK2O,IAAID,QAAU,KACnB,MACD,KAAK,EAGJ1O,KAAK0O,QAAQvN,GAAQ,KACrBnB,KAAK0O,QAAQvN,GAAQ,MACrBnB,KAAK0O,QAAQvN,GAAQ,KAErBnB,KAAK2O,IAAID,QAAU,KACnB,MACD,KAAK,EAGJ1O,KAAK0O,QAAQvN,GAAQ,KACrBnB,KAAK0O,QAAQvN,GAAQ,MACrBnB,KAAK0O,QAAQvN,GAAQ,KAErBnB,KAAK2O,IAAID,QAAU,KACnB,MACD,KAAK,EAIJ1O,KAAK0O,QAAQvN,GAAQ,KACrBnB,KAAK0O,QAAQvN,GA3CD,MA4CZnB,KAAK0O,QAAQvN,GAAQ,KAErBnB,KAAK2O,IAAID,QAAU,MACnB,MACD,KAAK,EAIJ1O,KAAK0O,QAAQvN,GAAQ,IACrBnB,KAAK0O,QAAQvN,GArDD,MAsDZnB,KAAK0O,QAAQvN,GAtDD,MAwDZnB,KAAK2O,IAAID,QAAU,KACnB,MACD,KAAK,EAKJ1O,KAAK0O,QAAQvN,GAAQ,KACrBnB,KAAK0O,QAAQvN,GAhED,MAiEZnB,KAAK0O,QAAQvN,GAjED,MAmEZnB,KAAK2O,IAAID,QAAU,MACnB,MACD,KAAK,EAMJ1O,KAAK0O,QAAQvN,GA3ED,MA4EZnB,KAAK0O,QAAQvN,GA5ED,MA6EZnB,KAAK0O,QAAQvN,GA7ED,MA+EZnB,KAAK2O,IAAID,QAAU,MACnB,MACD,QACC,GAAI1F,EAAIQ,OAAQ,MAAM,IAAIoJ,MAAM,iDAAiD5S,KAAKuO,KAAK,KAG7FvO,KAAK0O,QAAQ,GArFC,OAyFflC,EAAQ8F,UAAUO,YAAc,SAASzL,EAAEtD,GAC1C9D,KAAK+M,KAAKE,KAAU,GAAFnJ,GAAQ,GAAO,GAAFA,IAAS,EAAG,EAC3C9D,KAAK6M,GAAM/I,GAAG,EAAG,EACjB9D,KAAKoJ,MAAM2E,OAAW,IAAFjK,EACpB9D,KAAKoJ,MAAM4E,IAAMhO,KAAK6M,GACtB7M,KAAKoJ,MAAM6D,IAAQ,GAAFnJ,GAElBwK,EAAMgE,UAAUO,YAAc,SAASzL,EAAEuI,EAAE7L,GAC1C9D,KAAKqM,KAAKsD,GAAGkD,YAAYzL,EAAEtD,GAC3B9D,KAAKqM,KAAKE,EAAM,IAAIa,MAAQ,GAI7BZ,EAAQ8F,UAAUQ,OAAS,SAAShP,GACnC9D,KAAKoJ,MAAMtB,GAAQ,IAAFhE,EACjB9D,KAAK8H,GAAM9H,KAAKoJ,MAAMtB,IAAMiC,EAAKC,KAAK,GAExB,EAAThK,KAAK0N,KAAU,IAAK1N,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,GAAI1N,KAAK+C,MAAMsH,EAAII,IACtEzK,KAAKsN,QAAUtN,KAAK8H,KAAM,IAAM9H,KAAKqN,OAAQ,GAAGtD,EAAKK,eAErDpK,KAAKsN,QAAUtN,KAAK8H,IAAkB,EAAb9H,KAAKqN,SAEhCiB,EAAMgE,UAAUQ,OAAS,SAASnD,EAAE7L,GAAI9D,KAAKqM,KAAKsD,GAAGmD,OAAOhP,IAG5D0I,EAAQ8F,UAAUS,WAAa,SAASjP,GACvC9D,KAAKoJ,MAAM6E,KAAS,IAAFnK,EAClB9D,KAAKoJ,MAAM8E,GAAKpK,GAAG,EACnB9D,KAAKoJ,MAAMxB,GAAO,GAAF9D,EAChB,IAAIkP,EAAmB,EAAThT,KAAK8M,IAOnB,GANA9M,KAAK+M,KAAKnF,GAAO5H,KAAKoJ,MAAMxB,GAAI,EAAG,IAAK5H,KAAKoJ,MAAMxB,IAAK,GAAG,EAC3D5H,KAAK8M,IAAM,EAAG9M,KAAKoJ,MAAM8E,GAKpBlO,KAAK+M,KAAKnF,GAAG5H,KAAK+M,KAAKC,IAAK,GAAI,CACpC,IAAIiG,EAAKjT,KAAK+M,KAAKnF,GAAG5H,KAAK+M,KAAKC,IAAK,EACrChN,KAAKuN,GAAGC,GAAG5F,GAAKyC,EAAIsB,WAAWsH,GAC/BjT,KAAKuN,GAAGE,IAAI7F,GAAKyC,EAAIqB,YAAYuH,QAGjCjT,KAAKuN,GAAGC,GAAG5F,GAAK,EAChB5H,KAAKuN,GAAGE,IAAI7F,GAAK,GAAGyC,EAAImB,WAEzB,OAAOxL,KAAK8M,MAAMkG,GAEnB1E,EAAMgE,UAAUS,WAAa,SAASpD,EAAE7L,GAAQ9D,KAAKqM,KAAKsD,GAAGoD,WAAWjP,KAAI9D,KAAKqM,KAAKE,EAAM,IAAIa,MAAQ,IAGxGZ,EAAQ8F,UAAUY,OAAS,SAASpP,GACnC9D,KAAKoJ,MAAM+E,MAAU,IAAFrK,EACnB9D,KAAKoJ,MAAMgF,GAAO,IAAFtK,EAChB9D,KAAKoJ,MAAMsD,IAAQ,GAAF5I,EACjB9D,KAAK+M,KAAKL,IAAQ1M,KAAKoJ,MAAMsD,IAAK,EAAG,IAAK1M,KAAKoJ,MAAMsD,KAAM,GAAG,EAC9D,IAAIuG,EAAKjT,KAAK+M,KAAKL,IAAI1M,KAAK+M,KAAKC,IAAK,EACtChN,KAAKuN,GAAGC,GAAGd,IAAMrC,EAAIsB,WAAWsH,GAChCjT,KAAKuN,GAAGE,IAAIf,IAAMrC,EAAIqB,YAAYuH,IAEnC3E,EAAMgE,UAAUY,OAAS,SAASvD,EAAE7L,GAAI9D,KAAKqM,KAAKsD,GAAGuD,OAAOpP,IAG5D0I,EAAQ8F,UAAUa,OAAS,SAASrP,GACnC9D,KAAKoJ,MAAMuD,IAAQ,GAAF7I,EACjB9D,KAAK+M,KAAKJ,IAAQ3M,KAAKoJ,MAAMuD,IAAK,EAAG,IAAK3M,KAAKoJ,MAAMuD,KAAM,GAAG,EAC9D,IAAIsG,EAAKjT,KAAK+M,KAAKJ,IAAI3M,KAAK+M,KAAKC,IAAK,EACtChN,KAAKuN,GAAGC,GAAGb,IAAMtC,EAAIsB,WAAWsH,GAChCjT,KAAKuN,GAAGE,IAAId,IAAMtC,EAAIqB,YAAYuH,IAEnC3E,EAAMgE,UAAUa,OAAS,SAASxD,EAAE7L,GAAI9D,KAAKqM,KAAKsD,GAAGwD,OAAOrP,IAG5D0I,EAAQ8F,UAAUc,UAAY,SAAStP,GACtC9D,KAAKoJ,MAAMiF,KAAS,IAAFvK,EAClB9D,KAAKoJ,MAAMlB,GAAMpE,GAAG,EAAG,GACvB9D,KAAKoJ,MAAMf,GAAO,GAAFvE,EAChB9D,KAAKkI,GAAKuB,EAAIvB,GAAGlI,KAAKoJ,MAAMlB,IAExBlI,KAAK+C,QAAQsH,EAAIE,KAAKvK,KAAKqN,SAAiB,EAARrN,KAAKkI,MAAOlI,KAAK+C,MAAQsH,EAAIG,KACrExK,KAAK+M,KAAK1E,GAAK,IAAKrI,KAAKoJ,MAAMf,IAAK,GACpC,IAAI4K,EAAKjT,KAAK+M,KAAK1E,GAAGrI,KAAK+M,KAAKC,IAAK,EACrChN,KAAKuN,GAAGC,GAAGnF,GAAKgC,EAAIsB,WAAWsH,GAC/BjT,KAAKuN,GAAGE,IAAIpF,GAAKgC,EAAIqB,YAAYuH,IAElC3E,EAAMgE,UAAUc,UAAY,SAASzD,EAAE7L,GAAI9D,KAAKqM,KAAKsD,GAAGyD,UAAUtP,IAoClE0I,EAAQ8F,UAAUF,WAAa,SAASD,GACvC,OAAQnS,KAAK+C,OACZ,KAAKsH,EAAIC,IACF6H,GAAS,GAAGnS,KAAKuN,GAAGC,GAAG5F,IAAI,IAChC5H,KAAKqN,SAAYrN,KAAKqN,OAAQhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAI7F,IAAKuK,GAAQnS,KAAKuN,GAAGC,GAAG5F,GAAI,KAAO,EAEjF5H,KAAKqN,QAAQtD,EAAKE,gBACrBjK,KAAKqN,OAAStD,EAAKE,cACnBjK,KAAK+C,MAAS/C,KAAKkI,KAAK6B,EAAKE,cAAeI,EAAIG,IAAIH,EAAIE,MAG3C,EAATvK,KAAK0N,KAAU,IAAI1N,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,EAAG1N,KAAKsN,QAAUtN,KAAK8H,KAAM,IAAM9H,KAAKqN,OAAQ,GAAGtD,EAAKK,eACtGpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,SAEnC,MACD,KAAKhD,EAAIE,IACF4H,GAAS,GAAGnS,KAAKuN,GAAGC,GAAGd,KAAK,KACnB,EAAT1M,KAAK0N,KAAU,EAEf1N,KAAKqN,OAAO,MACfrN,KAAKqN,QAAUhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAIf,KAAMyF,GAAQnS,KAAKuN,GAAGC,GAAGd,IAAK,KAAK,GAEjE1M,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,EAAG1N,KAAKsN,QAAUtN,KAAK8H,KAAM,IAAM9H,KAAKqN,OAAQ,GAAGtD,EAAKK,eACnFpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,UAInCrN,KAAKqN,QAAWhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAIf,KAAMyF,GAAQnS,KAAKuN,GAAGC,GAAGd,IAAK,IAClE1M,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,SAG1BrN,KAAKqN,SAAiB,EAARrN,KAAKkI,MAAOlI,KAAK+C,MAAQsH,EAAIG,MAEhD,MACD,KAAKH,EAAIG,IACF2H,GAAS,GAAGnS,KAAKuN,GAAGC,GAAGb,KAAK,KAEnB,EAAT3M,KAAK0N,KAAU,EAEf1N,KAAKqN,OAAO,MACfrN,KAAKqN,QAAUhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAId,KAAMwF,GAAQnS,KAAKuN,GAAGC,GAAGb,IAAK,KAAK,GAEjE3M,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,EAAG1N,KAAKsN,QAAUtN,KAAK8H,KAAM,IAAM9H,KAAKqN,OAAQ,GAAGtD,EAAKK,eACnFpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,UAKnCrN,KAAKqN,QAAWhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAId,KAAMwF,GAAQnS,KAAKuN,GAAGC,GAAGb,IAAK,IAE9D3M,KAAKqN,QAAQtD,EAAKK,gBAAepK,KAAKqN,OAAStD,EAAKK,eACxDpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,UAG/B,MACD,KAAKhD,EAAII,IACF0H,GAAS,GAAGnS,KAAKuN,GAAGC,GAAGnF,IAAI,KAElB,EAATrI,KAAK0N,KAAU,EAEf1N,KAAKqN,OAAO,MACfrN,KAAKqN,QAAUhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAIpF,IAAK8J,GAAQnS,KAAKuN,GAAGC,GAAGnF,GAAI,KAAK,EAEhErI,KAAKqN,QAAQ,MAChBrN,KAAKqN,OAAStD,EAAKK,cACnBpK,KAAK+C,MAAQsH,EAAIK,OAMnB1K,KAAKqN,QAAWhD,EAAIoB,IAAIzL,KAAKuN,GAAGE,IAAIpF,IAAK8J,GAAQnS,KAAKuN,GAAGC,GAAGnF,GAAI,IAE5DrI,KAAKqN,QAAQtD,EAAKK,gBACrBpK,KAAKqN,OAAStD,EAAKK,cACnBpK,KAAK+C,MAAQsH,EAAIK,MAGnB1K,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,SAE9B,MACD,QACC,GAAIrE,EAAIQ,OAAQ,MAAM,IAAIoJ,MAAM,4CAA4C5S,KAAK+C,MAAM,OAI1FuL,EAAMgE,UAAUF,WAAa,SAASD,GAAmC,IAA1B,IAAIkB,EAAIrT,KAAKqM,KAAK1K,SAAiB0R,GAAG,GAAGrT,KAAKqM,KAAKgH,GAAGjB,WAAWD,IAMhH3F,EAAQ8F,UAAUgB,cAAgB,YAInB,EAATtT,KAAK0N,KAAU,GAAG1N,KAAKqN,QAAQ,KAAOrN,KAAK+C,MAAMsH,EAAII,OAC3C,EAATzK,KAAK0N,KAAU,IACL,EAAT1N,KAAK0N,KAAU,IAAG1N,KAAK2N,KAAO,GAC/B3N,KAAK+C,QAAQsH,EAAIC,KAAOtK,KAAK2N,KAAe,EAAT3N,KAAK0N,MAAY1N,KAAKqN,OAAStD,EAAKK,kBAI7D,EAATpK,KAAK0N,KAAU,EAAG1N,KAAK2N,MAAQ,EAC/B3N,KAAKmN,MAAQ,EAEdnN,KAAK+C,QAAQsH,EAAIC,MACftK,KAAK+M,KAAKnF,GAAG5H,KAAK+M,KAAKC,IAAK,GAChChN,KAAK+C,MAAS/C,KAAKqN,QAAQtD,EAAKE,cAC9BjK,KAAKkI,KAAK6B,EAAKE,cAAcI,EAAIG,IAAIH,EAAIE,IAC1CF,EAAIC,KAELtK,KAAKqN,OAAStD,EAAKE,cACnBjK,KAAK+C,MAAS/C,KAAKkI,KAAK6B,EAAKE,cAAeI,EAAIG,IAAIH,EAAIE,QAKtDvK,KAAK2N,KAAe,EAAT3N,KAAK0N,KAAW,EAAG1N,KAAKsN,QAAUtN,KAAK8H,KAAM,IAAM9H,KAAKqN,OAAQ,GAAGtD,EAAKK,eACnFpK,KAAKsN,QAAUtN,KAAK8H,IAAgB,EAAZ9H,KAAKqN,UAGpCiB,EAAMgE,UAAUgB,cAAgB,WAAsC,IAA1B,IAAID,EAAIrT,KAAKqM,KAAK1K,SAAiB0R,GAAG,GAAGrT,KAAKqM,KAAKgH,GAAGC,iBAGlG9G,EAAQ8F,UAAUiB,iBAAmB,SAASnM,EAAGwH,EAAKI,GACrD,IAAIwE,EAAM1H,EAAII,WAAuB,KAAX8C,IAAmB,GAAI,GAAGJ,EAAIxH,EAAEwE,IAAIwF,IAAIE,IAClE,GAAIkC,EAAK,CACR,GAAIxT,KAAK6M,GAAG,EAAG,CAEd,GADA9K,QAAQC,IAAI,yCAAyChC,KAAK6M,IACtD7D,EAAIQ,OAAQ,MAAM,IAAIoJ,MAAM,0CAA0C5S,KAAK6M,IAC1E,OAEN,IAAI4G,EAAKC,EAAI5E,EAIb2E,GAAkB,OADlBzE,EAAawE,GAAKxE,GAAY,MACH,GAC3BA,GAAwB,KACxB0E,EAAMD,GAAK,EAAG7H,EAAIC,QAAQmD,GAAY,GAElChG,EAAIO,MACPuF,GAAO1H,EAAEwE,IAAI2F,GAAGC,MAAMxC,IAAc,EAAEyE,GAAMrM,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,IAC9D,IAAG5E,GAAM1H,EAAEwE,IAAI2F,GAAGE,KAErB3C,GAAQE,GAAY,GAAK,EAAEyE,GAAMrM,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,GAAK/I,EAAIC,KACxE5K,KAAKmN,OAAS2B,EAAG9O,KAAK+M,KAAKE,KAAM,OAE7BjN,KAAKmN,OAASnN,KAAKoN,MAEzBZ,EAAQ8F,UAAUqB,yBAA2B,SAASvM,EAAG0H,EAAI4E,GAE3D,IAAIE,GADK,IAAN9E,GAEC9F,EAAIO,MACPqK,EAAQ9E,EAAG1H,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,IAC3B,IAAGE,GAAQxM,EAAEwE,IAAI2F,GAAGE,KAEzBmC,EAAQ9E,EAAG1H,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,GAAK/I,EAAIC,KAClD5K,KAAKmN,OAAUyG,EAAK5T,KAAK+M,KAAKE,KAAM,GAEhCjN,KAAKmN,OAASnN,KAAKoN,MAEzBkB,EAAMgE,UAAUiB,iBAAmB,SAASnM,GAC3C,IAEIqM,EAAKC,EAAI5E,EAFTF,EAAM5O,KAAK4O,IAAKI,EAAahP,KAAKgP,WAGlCwE,EAAM1H,EAAII,WAAuB,KAAX8C,IAAmB,GAAI,GAAGJ,EAAIxH,EAAEwE,IAAIwF,IAAIE,IAC9DkC,GAEHC,GAAkB,OADlBzE,EAAawE,GAAKxE,GAAY,MACH,GAC3BA,GAAwB,KACxB0E,EAAMD,GAAK,EAAG7H,EAAIC,QAAQmD,GAAY,GAErCF,EADG9F,EAAIO,KACDnC,EAAEwE,IAAI2F,GAAGC,MAAMxC,IAAc,EAAEyE,EAE1BzE,GAAY,GAAK,EAAEyE,GAG/B3E,GAAM,EAEmB,IAA1B,IAAIzH,EAAIrH,KAAKqM,KAAK1K,SAAiB0F,GAAG,GAAGrH,KAAKqM,KAAKE,EAAMlF,IAAIsM,yBAAyBvM,EAAG0H,EAAI4E,IAI9FlH,EAAQ8F,UAAUuB,cAAgB,SAASzM,EAAG0H,EAAI4E,GACjD,GAAI1T,KAAK6M,GAAG,GAEX,GADA9K,QAAQC,IAAI,sCAAsChC,KAAK6M,IACnD7D,EAAIQ,OAAQ,MAAM,IAAIoJ,MAAM,uCAAuC5S,KAAK6M,SAU7E,GAPI7D,EAAII,MAAM,GAAGrH,QAAQC,IAAI,iBAAiBhC,KAAK6M,GAAG,KAAK6G,EAAG,IAAItM,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,IAC3F5E,GAAM1H,EAAEwE,IAAIsF,GAAGV,OAAOxQ,KAAK6M,IAAI6G,GAE3B1K,EAAIO,KAAWuF,EAAG,IAAGA,GAAM1H,EAAEwE,IAAI2F,GAAGE,KACnC3C,GAAMnE,EAAIC,KACf5K,KAAKoN,KAAQ0B,EAAG9O,KAAK+M,KAAKE,KAAM,EAChCyG,IAAS1T,KAAK8M,IACV9M,KAAK+M,KAAKC,MAAM0G,EAAI,CACvB1T,KAAK+M,KAAKC,IAAM0G,EAChB,IAAIT,EAAKjT,KAAK+M,KAAKnF,GAAG8L,EAAI,EACrBT,EAAG,IACPjT,KAAKuN,GAAGC,GAAG5F,GAAKyC,EAAIsB,WAAWsH,GAC/BjT,KAAKuN,GAAGE,IAAI7F,GAAKyC,EAAIqB,YAAYuH,KAGjCjT,KAAKuN,GAAGC,GAAG5F,GAAK,EAChB5H,KAAKuN,GAAGE,IAAI7F,GAAK,GAAGyC,EAAImB,YAEzByH,EAAKjT,KAAK+M,KAAKL,IAAIgH,EAAI,EACvB1T,KAAKuN,GAAGC,GAAGd,IAAMrC,EAAIsB,WAAWsH,GAChCjT,KAAKuN,GAAGE,IAAIf,IAAMrC,EAAIqB,YAAYuH,GAClCA,EAAKjT,KAAK+M,KAAKJ,IAAI+G,EAAI,EACvB1T,KAAKuN,GAAGC,GAAGb,IAAMtC,EAAIsB,WAAWsH,GAChCjT,KAAKuN,GAAGE,IAAId,IAAMtC,EAAIqB,YAAYuH,GAClCA,EAAKjT,KAAK+M,KAAK1E,GAAGqL,EAAI,EACtB1T,KAAKuN,GAAGC,GAAGnF,GAAKgC,EAAIsB,WAAWsH,GAC/BjT,KAAKuN,GAAGE,IAAIpF,GAAKgC,EAAIqB,YAAYuH,KAInC3E,EAAMgE,UAAUuB,cAAgB,SAASzM,GACxC,IAAgC,IAA5BpH,KAAKqM,KAAKE,EAAM,IAAIa,KAAW,CAClC,IAAI0B,EAAa,EAAR9O,KAAK8O,GAAM4E,EAAgB,EAAX1T,KAAK+O,MAC1B/F,EAAII,MAAM,GAAGrH,QAAQC,IAAI,uBAAuB8M,EAAG4E,GAC7B,IAA1B,IAAIrM,EAAIrH,KAAKqM,KAAK1K,SAAiB0F,GAAG,GAAGrH,KAAKqM,KAAKE,EAAMlF,IAAIwM,cAAczM,EAAG0H,EAAI4E,KAIpFlH,EAAQ8F,UAAUwB,QAAU,SAASzC,GAAI,OAAQrR,KAAKsN,SAAS+D,EAAGrR,KAAK4N,QAAS,GAGlEtB,EAAVtD,EAAIO,KAAgB,SAAS4D,EAAO3F,EAAKuM,EAAIC,GAChD,IAAIzL,GAAKf,GAAK,GAAGiC,EAAI6B,KACjB6B,GAAO1D,EAAIK,YAAYkK,EAAGD,EAAGA,GAAI,KAAMtK,EAAIC,QAASmB,EAAKD,MAE7D,OAAIrC,GAAGyC,EAAIE,QAAgB,EACpBF,EAAIG,IAAI5C,IAED,SAAS4E,EAAO3F,EAAKuM,EAAIC,GACvC,IAAIzL,GAAKf,GAAK,GAAGiC,EAAI6B,KAAK0I,EAAI7G,EAAM4G,GAAKlJ,EAAKb,MAAMmD,GAAOtC,EAAKb,OAAO+J,GAAI,IAAIlJ,EAAKD,MACpF,OAAIrC,GAAGyC,EAAIE,QAAgB,EACpBF,EAAIG,IAAI5C,IAGhBiE,EAAQ8F,UAAU2B,UAAY,SAASC,EAAK9F,EAAI+F,GAC/C,IAAIC,EAAUpU,KAAKsN,SAASc,EAAGpO,KAAK4N,QAAS,EAC5C9K,EAAM,EACP,GAAIqR,EAAM,CACT,IAAIhT,EAAKnB,KAAK8N,IAAI,GAAG9N,KAAK8N,IAAI,GAAI,EAClC9N,KAAK8N,IAAI,GAAiB,EAAZ9N,KAAK8N,IAAI,GACvBhL,EAAkB,EAAZ9C,KAAK8N,IAAI,GACXsG,EAAOrK,EAAKsB,OACV6I,IAAK/S,EAAI,GACdnB,KAAK8N,IAAI,GAAKxB,EAAQtM,KAAKmN,MAAOiH,EAASjT,GAAG+S,EAAM,IAEhDlU,KAAK8N,IAAI,GAAK,OAEXsG,EAAOrK,EAAKsB,OACpBrL,KAAK8N,IAAI,GAAKxB,EAAQtM,KAAKmN,MAAOiH,EAAQF,EAAK,GAC/CpR,EAAkB,EAAZ9C,KAAK8N,IAAI,IAEXhL,EAAM9C,KAAK8N,IAAI,GAAK,EACzB,OAAOhL,GAERwL,EAAMgE,UAAU2B,UAAY,SAAS7M,GAEpC,IAEItE,EACAuE,EAHAgK,EAAKjK,EAAEwE,IAAIwF,IAAIC,IAAIrR,KAAK6O,IAGrBwF,EAAO,CAAC,IAAI,KAAK,KAAK,MAC7BrU,KAAKkP,QAAQE,GAAK,EACjBpP,KAAKkP,QAAQG,GAAK,EAClBrP,KAAKkP,QAAQI,GAAK,EAClBtP,KAAKkP,QAAQP,IAAM,EACnB3O,KAAKkP,QAAQ9H,EAAI,EAClBpH,KAAKkP,QAAQlP,KAAK2O,IAAID,SAAW1O,KAAK2O,IAAIvK,MAG1CiD,EAAI,EACM,KADHvE,EAAM9C,KAAKqM,KAAKE,EAAMlF,IAAI4M,UAAUjU,KAAKwO,GAAI6C,EAAI,MAEjC,MAAlBrR,KAAK0O,QAAQrH,IACbrH,KAAKkP,QAAQ9H,EAAItE,EACjB9C,KAAKkP,QAAQP,IAAM7L,EACnB9C,KAAKkP,QAAQG,GAAKvM,EAClB9C,KAAKkP,QAAQI,GAAKxM,GAGlB9C,KAAKkP,QAAQlP,KAAK0O,QAAQrH,KAAOvE,GAGtCuE,EAAI,EACM,KADHvE,EAAM9C,KAAKqM,KAAKE,EAAMlF,IAAI4M,UAAUjU,KAAKkP,QAAQmF,EAAKhN,IAAKgK,EAAI,MAE/C,MAAlBrR,KAAK0O,QAAQrH,KACZrH,KAAKkP,QAAQlP,KAAK0O,QAAQrH,KAAOvE,IAGvCuE,EAAI,EACM,KADHvE,EAAM9C,KAAKqM,KAAKE,EAAMlF,IAAI4M,UAAUjU,KAAKkP,QAAQmF,EAAKhN,IAAKgK,EAAI,MAE/C,MAAlBrR,KAAK0O,QAAQrH,KACZrH,KAAKkP,QAAQlP,KAAK0O,QAAQrH,KAAOvE,IAGvCuE,EAAI,EACM,KADHvE,EAAM9C,KAAKqM,KAAKE,EAAMlF,IAAI4M,UAAUjU,KAAKkP,QAAQmF,EAAKhN,IAAKgK,EAAI,MAE/C,MAAlBrR,KAAK0O,QAAQrH,KACZrH,KAAKkP,QAAQlP,KAAK0O,QAAQrH,KAAOvE,IAEvC9C,KAAK2O,IAAIvK,MAAyB,EAAjBpE,KAAKkP,QAAQP,IAC1B3O,KAAK4O,KACW,IAAdxH,EAAEwE,IAAIsF,GAAG3H,MAAW,GAAGvJ,KAAKuP,QAChCvP,KAAKqM,KAAKE,EAAM,IAAIgH,iBAAiBnM,EAAGpH,KAAK4O,IAAKxH,EAAEwE,IAAIuF,IAAInC,WAAW,IACvEhP,KAAKqM,KAAKE,EAAM,IAAIgH,iBAAiBnM,EAAGpH,KAAK4O,IAAKxH,EAAEwE,IAAIuF,IAAInC,WAAW,IACvEhP,KAAKqM,KAAKE,EAAM,IAAIgH,iBAAiBnM,EAAGpH,KAAK4O,IAAKxH,EAAEwE,IAAIuF,IAAInC,WAAW,IACvEhP,KAAKqM,KAAKE,EAAM,IAAIgH,iBAAiBnM,EAAGpH,KAAK4O,IAAK5O,KAAKgP,aAEnDhP,KAAKuT,iBAAiBnM,IAG3BpH,KAAKqM,KAAKE,EAAM,IAAIY,OAASnN,KAAKqM,KAAKE,EAAM,IAAIa,KACjDpN,KAAKqM,KAAKE,EAAM,IAAIY,OAASnN,KAAKqM,KAAKE,EAAM,IAAIa,KACjDpN,KAAKqM,KAAKE,EAAM,IAAIY,OAASnN,KAAKqM,KAAKE,EAAM,IAAIa,KACjDpN,KAAKqM,KAAKE,EAAM,IAAIY,OAASnN,KAAKqM,KAAKE,EAAM,IAAIa,OAKnDxB,EAAI0I,UAAY,SAASlN,EAAE0I,EAAEhM,GAG5B,OAFAA,GAAM,IAEEgM,GACP,KAAK,GAAM,MACX,KAAK,GACE,EAAFhM,EACCkF,EAAIO,KAAMnC,EAAEwE,IAAIwF,IAAIH,eAAiBnF,EAAIC,iBAAmB,EAAFjI,IAAM2F,EAAIG,OACnExC,EAAEwE,IAAIwF,IAAIH,eAAiBnF,EAAIC,iBAAmB,EAAFjI,IAGrDsD,EAAEwE,IAAIwF,IAAIH,eAAiB,EAC3B7J,EAAEwE,IAAIwF,IAAIL,MAAQ,EAClB3J,EAAEwE,IAAIwF,IAAIN,IAAM,EAChB1J,EAAEwE,IAAIwF,IAAIC,GAAK,IACfjK,EAAEwE,IAAIwF,IAAIE,GAAK,GAEhB,MACD,KAAK,GACJlK,EAAEwE,IAAIsF,GAAGhB,GAAkB,EAAZ9I,EAAEwE,IAAIsF,GAAGhB,IAAe,EAAHpM,IAAO,EAC3CsD,EAAEwE,IAAIsF,GAAGf,IAAO,KAAK/I,EAAEwE,IAAIsF,GAAGhB,GAC1BlH,EAAIO,OAAMnC,EAAEwE,IAAIsF,GAAGf,MAAQ1G,EAAII,UACnC,MACD,KAAK,GACJzC,EAAEwE,IAAIsF,GAAGhB,GAAkB,KAAZ9I,EAAEwE,IAAIsF,GAAGhB,GAAa,EAAFpM,EACnCsD,EAAEwE,IAAIsF,GAAGf,IAAO,KAAK/I,EAAEwE,IAAIsF,GAAGhB,GAC1BlH,EAAIO,OAAMnC,EAAEwE,IAAIsF,GAAGf,MAAQ1G,EAAII,UACnC,MACD,KAAK,GACJzC,EAAEwE,IAAIsF,GAAGb,GAAKvM,EACVkF,EAAIO,KAAMnC,EAAEwE,IAAIsF,GAAGZ,IAAO,IAAIxM,GAAK2F,EAAII,SAAS,EAC/CzC,EAAEwE,IAAIsF,GAAGZ,IAAO,IAAIxM,GAAI,EAC7B,MACD,KAAK,GACJkO,EAAW5K,EAAEtD,GACb,MACD,KAAK,GACJ,IAAI+L,EAAM,EAAF/L,EAAQ,GAAQ,IAAJ+L,EAAO,MACrB,EAAF/L,IAAQ+L,GAAK,GACP5O,EAKPmG,EAAEuK,GAAG9B,GAJD,GAAF/L,EAAQ7C,EAAGsR,MAAMnL,EAAEmF,EAAM,IAAUtL,EAAGwR,OAAOrL,EAAEmF,EAAM,IACnD,GAAFzI,EAAQ7C,EAAGsR,MAAMnL,EAAEmF,EAAM,IAAUtL,EAAGwR,OAAOrL,EAAEmF,EAAM,IACnD,GAAFzI,EAAQ7C,EAAGsR,MAAMnL,EAAEmF,EAAM,IAAUtL,EAAGwR,OAAOrL,EAAEmF,EAAM,IACnD,IAAFzI,EAAQ7C,EAAGsR,MAAMnL,EAAEmF,EAAM,IAAUtL,EAAGwR,OAAOrL,EAAEmF,EAAM,IAJ1D,IAAUtL,GAYb2K,EAAI2I,SAAW,SAASnN,EAAE0I,EAAEhM,GAC3BA,GAAM,IACN,IA8BY0Q,EA9BR3E,EAAIjE,EAAIO,KAAK2D,GAChB5H,EAAK0D,EAAIS,KAAKyD,GACf,GAAID,GAAG,GACN,GAAI7G,EAAIQ,OAAQ,MAAM,IAAIoJ,MAAM,mCAAmC/C,EAAE,YAAY3H,EAAG,WAAW4H,EAAE5C,SAAS,IAAI,KAAKpJ,EAAEoJ,SAAS,IAAI,UAMnI,OAHI4C,GAAG,MAAOD,GAAK,GAGT,IAAFC,GACP,KAAK,GACJ1I,EAAEuK,GAAG9B,GAAGgD,YAAYzL,EAAGc,EAAIpE,GAC3B,MACD,KAAK,GACJsD,EAAEuK,GAAG9B,GAAGiD,OAAO5K,EAAIpE,GACnB,MACD,KAAK,GACJsD,EAAEuK,GAAG9B,GAAGkD,WAAW7K,EAAIpE,GACvB,MACD,KAAK,GACJsD,EAAEuK,GAAG9B,GAAGqD,OAAOhL,EAAIpE,GACnBsD,EAAEuK,GAAG9B,GAAGxD,KAAKnE,GAAI0F,OAAY,IAAF9J,GAAQ,EAAG,EACtC,MACD,KAAK,IACJsD,EAAEuK,GAAG9B,GAAGsD,OAAOjL,EAAIpE,GACnB,MACD,KAAK,IACJsD,EAAEuK,GAAG9B,GAAGuD,UAAUlL,EAAIpE,GACtB,MACD,KAAK,KACM0Q,EASPpN,EAAEuK,GAAG9B,GAAGxD,KAAKnE,IARbwF,IAAQ,GAAF5J,EAEJ0Q,EAAEzR,MAAMsH,EAAII,OACJ,EAAN+J,EAAE9G,KAAU,IAAI8G,EAAE7G,KAAY,EAAN6G,EAAE9G,KAAW,EACzC8G,EAAElH,QAAUkH,EAAE1M,KAAM,IAAM0M,EAAEnH,OAAQ,GAAGtD,EAAKK,eAE5CoK,EAAElH,QAAUkH,EAAE1M,IAAa,EAAT0M,EAAEnH,SAGvB,MACD,KAAK,IACJ,IAAIkE,EAAIkC,EAER,OAAQvL,GACP,KAAK,EAGJqJ,IAAoB,EAAbnK,EAAEuK,GAAG9B,GAAGZ,OAAS,GAAGnL,EAC3B2P,EAAOrM,EAAEuK,GAAG9B,GAAGZ,MAAM,EAAG,IACxB7H,EAAEuK,GAAG9B,GAAGd,MAAS0E,GAAK,EAAG7H,EAAIC,QAAQ0F,GAAI,GAErCvI,EAAIO,KAAMnC,EAAEuK,GAAG9B,GAAGf,GAAK1H,EAAEwE,IAAI2F,GAAGC,MAAMD,GAAI,IAAK,EAAEkC,EAChDrM,EAAEuK,GAAG9B,GAAGf,GAAMyC,GAAI,GAAK,EAAEkC,EAC9BrM,EAAEuK,GAAG9B,GAAGb,WAAcyE,GAAK,GAAIlC,EAC/BnK,EAAEuK,GAAG9B,GAAGxD,KAAKE,EAAM,IAAIa,MAAQ,EAC3BpE,EAAII,MAAM,GAAGrH,QAAQC,IAAI,eAAeoF,EAAEuK,GAAG9B,GAAGb,WAAW9B,SAAS,IAAI,UAAU9F,EAAEuK,GAAG9B,GAAGd,MAAM7B,SAAS,IAAI,OAAO9F,EAAEuK,GAAG9B,GAAGf,GAAG5B,SAAS,KAC5I,MACD,KAAK,EAEJ9F,EAAEuK,GAAG9B,GAAGZ,KAAU,GAAFnL,EAAQ,EACxB,MACD,KAAK,EACAgM,EAAE,MACLyB,IAAsB,EAAfnK,EAAEwE,IAAIuF,IAAIlC,OAAS,GAAGnL,EAC7B2P,EAAMrM,EAAEwE,IAAIuF,IAAIlC,MAAM,EACtB7H,EAAEwE,IAAIuF,IAAIpC,MAAMc,GAAM4D,GAAK,EAAG7H,EAAIC,QAAQ0F,GAAI,GAE1CvI,EAAIO,KAAMnC,EAAEwE,IAAIuF,IAAIrC,GAAGe,GAAKzI,EAAEwE,IAAI2F,GAAGC,MAAMD,GAAI,IAAK,EAAEkC,EACrDrM,EAAEwE,IAAIuF,IAAIrC,GAAGe,GAAM0B,GAAI,GAAK,EAAEkC,EACnCrM,EAAEwE,IAAIuF,IAAInC,WAAWa,GAAM4D,GAAK,GAAIlC,EACpCnK,EAAEuK,GAAG,GAAGtF,KAAKE,EAAM,IAAIa,MAAQ,GAEhC,MACD,KAAK,EACA0C,EAAE,MAAO1I,EAAEwE,IAAIuF,IAAIlC,KAAS,GAAFnL,GAGhC,MACD,KAAK,IAEJ,OAAQoE,GACP,KAAK,EACJ,IAAI8L,EAAMlQ,GAAG,EAAG,EAChBsD,EAAEuK,GAAG9B,GAAGtB,KAAS,EAAFzK,EACXkF,EAAIO,KAAMnC,EAAEuK,GAAG9B,GAAGrB,GAAMwF,EAAGA,EAAG,EAAE,EAC/B5M,EAAEuK,GAAG9B,GAAGrB,GAAMwF,EAEnB5M,EAAEuK,GAAG9B,GAAG8C,kBACR,MACD,KAAK,EACJvL,EAAEuK,GAAG9B,GAAGjB,KAAS,EAAF9K,IAAM,EACrBsD,EAAEuK,GAAG9B,GAAGhB,IAAM/C,EAAIE,gBAAiBlI,GAAG,EAAG,GAGzCsD,EAAEuK,GAAG9B,GAAGH,IAAI,GAAO,IAAF5L,EAAO2F,EAAI4I,QAAQ,EACpCjL,EAAEuK,GAAG9B,GAAGH,IAAI,GAAO,GAAF5L,EAAO2F,EAAI4I,QAAQ,KAazCzG,EAAI6I,aAAe,SAASrN,EAAG0I,GAK9B,IAAI/O,EAAGsG,EAAG4L,EAJV7L,EAAEsN,MAAQ5E,GAAG,IACb1I,EAAEwE,IAAIsF,GAAGyD,MAASvN,EAAEwE,IAAIsF,GAAGT,MAAMrJ,EAAEwE,IAAIsF,GAAGnE,KAAM3F,EAAEsN,MAC9C1L,EAAII,OAAOrH,QAAQC,IAAI,kBAAkBoF,EAAEwE,IAAIsF,GAAGT,MAAMrJ,EAAEwE,IAAIsF,GAAGnE,KAAK3F,EAAEsN,MAAMtN,EAAEwE,IAAIsF,GAAGyD,OAG3F,IAAIC,EAAIxN,EAAEwE,IAAIsF,GAAGyD,OAAO,GAAIlL,EAAIC,QAAQ,IAExC,IAAK3I,EAAE,EAAGA,EAAE,IAAKA,EAChB,IAAKsG,EAAE,EAAGA,EAAE,KAAMA,EACjB4L,EAAItI,EAAIQ,KAAKpK,GAAG,GAAGsG,GACf2B,EAAIO,OAAM0J,GAAK2B,GACnBxN,EAAEwE,IAAIsF,GAAGV,OAAOzP,GAAGsG,GAAO,EAAF4L,EACxB7L,EAAEwE,IAAIsF,GAAGV,OAAOzP,EAAE,GAAGsG,IAAMD,EAAEwE,IAAIsF,GAAGV,OAAOzP,GAAGsG,GAe/C,IAFD4L,EAAI,GAAK2B,EACRvN,EAAI,OACKA,GAAG,GAAID,EAAEwE,IAAI2F,GAAGC,MAAMnK,GAAMA,EAAE4L,EAAG,EAC3C7L,EAAEwE,IAAI2F,GAAGE,IAAO,OAAQmD,EAAG,EAC3BxN,EAAEwE,IAAI2B,GAAGyD,UAAa5J,EAAEwE,IAAIsF,GAAGyD,OAAO,GAAGlL,EAAIE,OAAQ,EACrDvC,EAAEwE,IAAI2B,GAAG0D,eAAkB,GAAI,GAAGxH,EAAIE,OACtCvC,EAAEwE,IAAIwF,IAAIJ,UAAa5J,EAAEwE,IAAIsF,GAAGyD,OAAO,GAAGlL,EAAIG,QAAS,EACvDxC,EAAEwE,IAAIsF,GAAGjB,WAAc7I,EAAEwE,IAAIsF,GAAGyD,OAAO,GAAGlL,EAAII,UAAW,GAmF1Dd,EAAEuJ,UAAU1F,KAAO,SAAS6D,EAAM1D,GAC7B/D,EAAII,OAAOrH,QAAQC,IAAI,aAAayO,EAAM,IAAI1D,EAAK,KAClD/M,KAAK8I,MAEP9I,KAAK8I,KAAKoI,GAAGT,MAAQA,GAAO,QAC5BzQ,KAAK8I,KAAKoI,GAAGnE,KAAOA,GAAM,OAHb/M,KAAK8I,KAAO,IAAI4I,EAAIjB,EAAO1D,GAI3C/M,KAAK0U,MAAQ,IACb1U,KAAK6U,SAAW7L,EAAIO,KACpBvJ,KAAK4I,MAAQ,EACb5I,KAAK6I,MAAQ,EAxFd,SAAqBiM,GAEpB,IAAI/T,EAAGsG,EAAGD,EACN2N,EACA5T,EAAGuC,EACHuP,EAAG2B,EAJH5L,EAAII,OAAOrH,QAAQC,IAAI,cAAc8S,EAAGnD,GAAGhQ,QAK/C,IAAIqT,EAAKpR,KAAKoR,GAAIC,EAAMrR,KAAK5B,IAAKkT,EAAMtR,KAAKC,IAAKsR,EAAMvR,KAAK0H,IAEzD8J,EAAOrL,EAAKI,KAAK,GAAqBkL,EAAMrK,EAAIC,SAAS,EAC7D,IAAK7D,EAAE,EAAGA,EAAE4D,EAAIC,UAAW7D,EAoB1B,IAZM,GADN2N,GAAO,GANPrR,EAFiC,MAE1BwR,EAAI,GAAI9N,EAAE,GAAGgO,MAMT,GACFL,EAAW,GAANA,GAAG,GACZA,IAAO,EAEZA,IAAM,EACNH,EAAIxN,GAAG,EACP4D,EAAIG,IAAIyJ,EAAE,GAAKG,EACf/J,EAAIG,IAAIyJ,EAAE,IAAMG,EAMX1N,EAAE,EAAGA,EAAE,KAAMA,EACjB4L,EAAK2B,EAAE,EAAEvN,EAAEgO,EAAK,EAChBrK,EAAIG,IAAI8H,GAAKjI,EAAIG,IAAIyJ,IAAIvN,EACzB2D,EAAIG,IAAI8H,EAAE,IAAMjI,EAAIG,IAAI8H,GAQzB,IAHDA,EAAI+B,EAAGnK,EAAKX,IACX0K,EAAI,EAAIK,EAAI,GACZG,EAAM,EAAMrL,EAAKI,KACZ9C,EAAE,EAAGA,EAAEwD,EAAKX,MAAO7C,EAQlB,GADN0N,GAHW5T,GAHXuC,EAAIyR,GAAY,GAAN9N,GAAG,IAAQ4L,IAGf,EAASgC,EAAI,EAAIvR,GAAGkR,EACjBK,GAAK,EAAIvR,GAAGkR,GAEdQ,EAAK,GACHL,EAAW,GAANA,GAAG,GACZA,IAAO,EACZtL,EAAI6B,IAAIjE,IAAM0N,GAAG,IAAIrR,GAAG,EAAI,EAAE,GAI/B,IAAK2D,EAAE,EAAGA,EAAE,IAAKA,EAChB,IAAK0N,EAAE,EAAGA,EAAE,MAAOA,EAClB,IAAK3N,EAAE,EAAGA,EAAE,IAAKA,EAAG,CAEnB,IADAwN,EAAI,EACCzT,EAAE,EAAGA,EAAE,IAAKA,GACX4T,EAAG,GAAG5T,GAAI,IACdyT,GAAK9I,EAAIG,WAAW9K,GAAG,GAAGkG,GAAGD,IAI/BrG,GAAKgU,GAAG,IAAI1N,GAAG,GACfyE,EAAII,SAASnL,EAAEqG,EAAE,GAAKwN,EACtB9I,EAAII,SAASnL,GAAK,EAAFqG,GAAK,GAAKwN,EAC1B9I,EAAII,SAASnL,EAAEqG,EAAE,KAAOwN,EACxB9I,EAAII,SAASnL,GAAK,EAAFqG,GAAK,KAAOwN,GAqB/BU,CAAYtV,KAAK8I,OAGlBC,EAAEuJ,UAAUzE,MAAQ,WACf7E,EAAII,OAAOrH,QAAQC,IAAI,cAC3B,SAAUoF,GACT,IAAIC,EA2BM,IA1BVuE,EAAI6I,aAAarN,EAAG,KACpBA,EAAEwE,IAAI2B,GAAGwD,MAAQ,EACjB3J,EAAEwE,IAAI2B,GAAGuD,IAAM,EACf1J,EAAEwE,IAAIwF,IAAIH,eAAiB,EAC3B7J,EAAEwE,IAAIwF,IAAIL,MAAQ,EAClB3J,EAAEwE,IAAIwF,IAAIN,IAAM,EAChB1J,EAAEwE,IAAIwF,IAAIC,GAAK,IACfjK,EAAEwE,IAAIwF,IAAIE,GAAK,EACflK,EAAEwE,IAAIsF,GAAGd,IAAM,EACfhJ,EAAEwE,IAAIsF,GAAGX,IAAM,EACfnJ,EAAEwE,IAAIuF,IAAIR,QAAU,EACpBvJ,EAAEwK,MAAQ,EACVxK,EAAEyK,OAAS,EACXG,EAAW5K,EAAG,IACdA,EAAEwE,IAAIsF,GAAGb,GAAK,EACdjJ,EAAEwE,IAAIsF,GAAGhB,GAAK,EACVlH,EAAIO,MACPnC,EAAEwE,IAAIsF,GAAGZ,IAAM,KAAM7G,EAAII,SAAS,EAClCzC,EAAEwE,IAAIsF,GAAGf,IAAM,MAAO1G,EAAII,WAG1BzC,EAAEwE,IAAIsF,GAAGZ,IAAM,KACflJ,EAAEwE,IAAIsF,GAAGf,IAAM,MA9JlB,SAAwB/I,EAAGmO,GAA8C,IAApCA,EAAInO,EAAEuK,GAAGhQ,SAAQ4T,EAAMnO,EAAEuK,GAAGhQ,UAAiB4T,GAAK,GAAGnO,EAAEuK,GAAG4D,GAAK1H,QAgKlG2H,CAAepO,EAAG,GAElBC,EAAI,IAAaA,GAAG,KACP,IAAL,EAAFA,KACJuE,EAAI2I,SAASnN,EAAGC,EAAG,KACnBuE,EAAI2I,SAASnN,EAAK,IAAFC,EAAS,QAExBA,EAEO,IAAVA,EAAI,IAAaA,GAAG,IACP,IAAL,EAAFA,KACJuE,EAAI2I,SAASnN,EAAGC,EAAG,GACnBuE,EAAI2I,SAASnN,EAAK,IAAFC,EAAS,MAExBA,EAxCJ,CA0CGrH,KAAK8I,MACR9I,KAAK4I,MAAQ,EACb5I,KAAK6I,MAAQ,GAGdE,EAAEuJ,UAAUmD,MAAQ,SAAStV,EAAE2D,GAC1BkF,EAAII,MAAM,GAAGrH,QAAQC,IAAI,aAAa7B,EAAE+M,SAAS,IAAIpJ,EAAEoJ,SAAS,KACpEpJ,GAAK,IACL9D,KAAK8I,KAAK8C,IAAIsF,GAAGnB,QAAY,IAAF5P,EASzB,IAAIuE,EAAO1E,KAAK8I,KAAK8C,IAAIsF,GAAGnB,QAC5B,OAAa,IAALrL,GACP,KAAK,GACJ,OAAQA,GACP,KAAK,GACJ1E,KAAK8I,KAAK+I,QAAW/N,EAAE,IAAM,IAAI,EACjC,MACD,KAAK,GACJ9D,KAAK8I,KAAK8I,SAAa,IAAF9N,GACrB,MACD,QACC8H,EAAI0I,UAAUtU,KAAK8I,KAAMpE,EAAMZ,GAGjC,MACD,QACC8H,EAAI2I,SAASvU,KAAK8I,KAAMpE,EAAMZ,KAMnCiF,EAAEuJ,UAAUoD,KAAO,SAAStO,GAAG,OAA+B,IAAxBpH,KAAK8I,KAAK8C,IAAIsF,GAAGlB,QAGvDjH,EAAEuJ,UAAUxN,OAAS,SAAS6Q,GAI7B,IAAIJ,EAAMI,EAAI3V,KAAK0U,MAChB1L,EAAII,OAAOrH,QAAQC,IAAI,kBAAkB,WAAW2T,EAAI,UAAUJ,GAGzD,IAFZ,IAAmBlC,EAAGuC,EAAIC,EACmBC,EADzCC,EAAM,CAAC,GAAG,IACVC,KAAkC,IAAtBhW,KAAK8I,KAAK8C,IAAIsF,GAAG3H,MAC7BlC,GAAK,IAAYA,EAAErH,KAAK8I,KAAK6I,GAAGhQ,QAC9BqU,EACIhW,KAAK8I,KAAK6I,GAAGtK,GAAGkI,SACmB,IAAvCvP,KAAK8I,KAAK6I,GAAGtK,GAAGgF,KAAKE,EAAM,IAAIa,OAClCpN,KAAK8I,KAAK6I,GAAGtK,GAAGgF,KAAKE,EAAM,IAAIsH,cAAc7T,KAAK8I,KAAM9I,KAAK8I,KAAK8C,IAAIuF,IAAIrC,GAAG,GAAI9O,KAAK8I,KAAK8C,IAAIuF,IAAIpC,MAAM,IACzG/O,KAAK8I,KAAK6I,GAAGtK,GAAGgF,KAAKE,EAAM,IAAIsH,cAAc7T,KAAK8I,KAAM9I,KAAK8I,KAAK8C,IAAIuF,IAAIrC,GAAG,GAAI9O,KAAK8I,KAAK8C,IAAIuF,IAAIpC,MAAM,IACzG/O,KAAK8I,KAAK6I,GAAGtK,GAAGgF,KAAKE,EAAM,IAAIsH,cAAc7T,KAAK8I,KAAM9I,KAAK8I,KAAK8C,IAAIuF,IAAIrC,GAAG,GAAI9O,KAAK8I,KAAK8C,IAAIuF,IAAIpC,MAAM,IACzG/O,KAAK8I,KAAK6I,GAAGtK,GAAGgF,KAAKE,EAAM,IAAIsH,cAAc7T,KAAK8I,KAAM9I,KAAK8I,KAAK6I,GAAGtK,GAAGyH,GAAI9O,KAAK8I,KAAK6I,GAAGtK,GAAG0H,QANjF/O,KAAK8I,KAAK6I,GAAGtK,GAAGwM,cAAc7T,KAAK8I,MAYjDE,EAAIM,SAAS3H,OAAS,EACtB,IAAIsU,EAtvBgB7O,EAChB8O,EAqvBQC,EAAKnW,KAAK8I,KAAK6I,GAAGhQ,OAEtB,IAAR0F,GAAK,IAAYA,EAAEsO,GAAK,CAKf,IAJRC,EAAK,EACHC,EAAK,EACLC,KAAuC,EAA1B9V,KAAK8I,KAAK8C,IAAIuF,IAAIR,SACjCsF,GAAS,EACT5C,GAAK,IAAYA,EAAE8C,GAGlBnW,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,IAAM,EAC9B9N,KAAK8I,KAAK6I,GAAG0B,GAAGC,gBACZtT,KAAK8I,KAAK8I,OAAO5R,KAAK8I,KAAK6I,GAAG0B,GAAG7D,SAASyG,GAC7CjW,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,KAAO9N,KAAK8I,KAAK+I,OACrCoE,GAAS,GAETjW,KAAK8I,KAAK6I,GAAG0B,GAAGY,UAAUjU,KAAK8I,MAGhC9I,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,IAAI,KAAM9N,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,IAAM,KAC3D9N,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,KAAK,OAAM9N,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,KAAO,MAKtE9N,KAAK8I,KAAK6I,GAAG0B,GAAG5D,QACpBmG,GAAO5V,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,IAAI9N,KAAK8I,KAAK6I,GAAG0B,GAAG3D,IAAI,GAAI,EAC3DmG,GAAO7V,KAAK8I,KAAK6I,GAAG0B,GAAGnE,QAAQpB,IAAI9N,KAAK8I,KAAK6I,GAAG0B,GAAG3D,IAAI,GAAI,GAExDoG,GAAS9V,KAAK8I,KAAK6I,GAAG0B,GAAG9D,SAE5BvP,KAAK8I,KAAK6I,GAAG0B,GAAGpB,UAAUjS,KAAK8I,KAAMyD,EAAM,IAC3CvM,KAAK8I,KAAK6I,GAAG0B,GAAGpB,UAAUjS,KAAK8I,KAAMyD,EAAM,IAC3CvM,KAAK8I,KAAK6I,GAAG0B,GAAGpB,UAAUjS,KAAK8I,KAAMyD,EAAM,IAC3CvM,KAAK8I,KAAK6I,GAAG0B,GAAGpB,UAAUjS,KAAK8I,KAAMyD,EAAM,KAM7C,GA9xBmBnF,EA4xBPpH,KAAK8I,KA3xBdoN,SACUA,EAAVlN,EAAIO,KAAa,SAASpI,GAC7B,KAAOA,EAAEiQ,IAAIL,OAAO5P,EAAEiQ,IAAIH,gBACzB9P,EAAEiQ,IAAIL,OAAS5P,EAAEiQ,IAAIH,eACrB9P,EAAEiQ,IAAIN,IAAO3P,EAAEiQ,IAAIN,IAAI,EAAG,IAGtB3P,EAAEiQ,IAAIN,IAAI,GAAI3P,EAAEiQ,IAAIC,IAAgB,GAAVlQ,EAAEiQ,IAAIN,MAAS,EACxC3P,EAAEiQ,IAAIC,IAAgB,GAAVlQ,EAAEiQ,IAAIN,MAAS,EAChC3P,EAAEiQ,IAAIE,GAAKnQ,EAAEiQ,IAAIN,KAAK,GAGZ,SAAS3P,GAChBA,EAAEiQ,IAAIL,MAAM5P,EAAEiQ,IAAIH,iBACrB9P,EAAEiQ,IAAIL,MAAQ,EACd5P,EAAEiQ,IAAIN,IAAO3P,EAAEiQ,IAAIN,IAAI,EAAG,IAGtB3P,EAAEiQ,IAAIN,IAAI,GAAI3P,EAAEiQ,IAAIC,IAAgB,GAAVlQ,EAAEiQ,IAAIN,MAAS,EACxC3P,EAAEiQ,IAAIC,IAAgB,GAAVlQ,EAAEiQ,IAAIN,MAAS,EAChC3P,EAAEiQ,IAAIE,GAAKnQ,EAAEiQ,IAAIN,KAAK,IAGpB1J,EAAEwE,IAAIwF,IAAIH,iBAETjI,EAAIO,KAAMnC,EAAEwE,IAAIwF,IAAIL,OAAS3J,EAAEwE,IAAIwF,IAAIJ,YACpC5J,EAAEwE,IAAIwF,IAAIL,MAEjBmF,EAAK9O,EAAEwE,MAiwBH5C,EAAIO,KAEP,IADAvJ,KAAK8I,KAAK8C,IAAI2B,GAAGwD,OAAS/Q,KAAK8I,KAAK8C,IAAI2B,GAAGyD,UACpChR,KAAK8I,KAAK8C,IAAI2B,GAAGwD,OAAO/Q,KAAK8I,KAAK8C,IAAI2B,GAAG0D,gBAC/CjR,KAAK8I,KAAK8C,IAAI2B,GAAGwD,OAAS/Q,KAAK8I,KAAK8C,IAAI2B,GAAG0D,iBACzCjR,KAAK8I,KAAK8C,IAAI2B,GAAGuD,IACnBoB,EAAoBlS,KAAK8I,KAAM9I,KAAK8I,KAAK8C,IAAI2B,GAAGuD,WAI/C9Q,KAAK8I,KAAK8C,IAAI2B,GAAGwD,MACf/Q,KAAK8I,KAAK8C,IAAI2B,GAAGwD,OAAO,IAC3B/Q,KAAK8I,KAAK8C,IAAI2B,GAAGwD,MAAQ,IACvB/Q,KAAK8I,KAAK8C,IAAI2B,GAAGuD,IACnBoB,EAAoBlS,KAAK8I,KAAM9I,KAAK8I,KAAK8C,IAAI2B,GAAGuD,MAIlDiF,EAAI,GAAG1O,GAAKuO,EACZG,EAAI,GAAG1O,GAAKwO,EAGZ7V,KAAK8I,KAAK8C,IAAIuF,IAAIR,UAAY,EAC9BmB,EAAiB9R,KAAK8I,MAClBgN,IACH9V,KAAK8I,KAAK8C,IAAIuF,IAAIR,QAAU,GAoB9B,OAxiCD,SAA0BvJ,EAAGzD,IACP,EAAhByD,EAAEwE,IAAIsF,GAAG3H,MAAa,IACtBP,EAAIO,KAAMnC,EAAEwE,IAAIsF,GAAGX,KAAOnJ,EAAEwE,IAAIsF,GAAGjB,WAAWtM,EAC7CyD,EAAEwE,IAAIsF,GAAGX,KAAO5M,EACjByD,EAAEwE,IAAIsF,GAAGX,KAAO,KAEE,EAAhBnJ,EAAEwE,IAAIsF,GAAG3H,MAAa,IAAGnC,EAAEwE,IAAIsF,GAAGlB,QAAU,GAE7C5I,EAAEwE,IAAIsF,GAAGZ,IAAKlJ,EAAEwE,IAAIsF,GAAGX,KAAOnJ,EAAEwE,IAAIsF,GAAGZ,IACtClJ,EAAEwE,IAAIsF,GAAGX,IAAMnJ,EAAEwE,IAAIsF,GAAGZ,MA+gC/B8F,CAAiBpW,KAAK8I,KAAM6M,GAexB3M,EAAIM,SAAS3H,OAAO,GAAGI,QAAQC,IAAIgH,EAAIM,SAASd,KAAK,OAClDuN,GAIRhN,EAAEuJ,UAAU+D,OAAS,SAAS7U,GAC7BiI,EAAI4I,WAAa,GAAIrH,EAAIhB,KAAKxI,GAAO,GAKR,IAA7B,IAAI6F,EAAIrH,KAAK8I,KAAK6I,GAAGhQ,SAAiB0F,GAAG,GACpCrH,KAAK8I,KAAK6I,GAAGtK,GAAGqI,IAAI,KAAI1P,KAAK8I,KAAK6I,GAAGtK,GAAGqI,IAAI,GAAKjG,EAAI4I,SACrDrS,KAAK8I,KAAK6I,GAAGtK,GAAGqI,IAAI,KAAI1P,KAAK8I,KAAK6I,GAAGtK,GAAGqI,IAAI,GAAKjG,EAAI4I,UAK3DtJ,EAAEuJ,UAAUgE,OAAS,SAASrV,EAAGyC,GAC5BzC,EAAG,IAAGjB,KAAK8I,KAAK6I,GAAG1Q,GAAIwO,OAAS/L,IAIrCqF,EAAEuJ,UAAUpF,SAAW,WAAW,OAAOlN,KAAK8I,KAAKoE,YAEnDnE,EAAEuJ,UAAUiE,KAAO,SAASxT,KAC5BgG,EAAEuJ,UAAUkE,KAAO,SAASzT,KAtrD5B,CAurDG2F,kCChrDGoM,EAAK,IAAIpM,EACfoM,EAAGlI,KAAK,QAAS,OACjB,IAAM6J,EAAK,IAAIC,IAAU,CAACC,UAAW,EAAEC,KAAM,EAAEC,SAAU,SAGnDC,cAIJ,SAAAA,EAAY7W,GAAO,IAAAyC,EAAA,OACjBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MAHF+W,GAAK,KAEcrU,EAkDnBsU,OAAS,SAACC,GACR,IAAMC,EAAwC,IAAlCtT,KAAKC,IAAI,GAAKoT,EAAK,IAAO,IACtCvU,EAAKyU,UAAU,CAACF,KAAKA,EAAKG,UAAUF,KApDnBxU,EAuDnB2U,QAAU,SAACJ,GACTvU,EAAK4U,QAAQ,CAACL,KAAKA,KAxDFvU,EA2DnByU,UAAY,SAACF,IACyB,IAAjCvU,EAAK6U,MAAM9S,QAAQwS,EAAKA,OACzBvU,EAAK6U,MAAMtQ,KAAKgQ,EAAKA,MAIvB,IAFA,IAAIC,EAAID,EAAKG,UACTI,EAAQ,EACLN,GAAK,MACVA,GAAK,EACLM,IAEF,IAAMC,EAAOlT,SAAS2S,GACtBpC,EAAGW,MAAM,IAAQgC,GAAQ,EAAK,GAAoB,EAARD,IAAkB,GAC5D1C,EAAGW,MAAM,IAAW,IAALgC,GAEQ,IAApB/U,EAAK6U,MAAM5V,QACZmT,EAAGW,MAAM,GAAM,MA1EA/S,EA6EnB4U,QAAU,SAACL,GACT,IAAK,IAAI5P,EAAI,EAAGA,EAAI3E,EAAK6U,MAAM5V,OAAQ0F,IAC/B3E,EAAK6U,MAAMlQ,KAAO4P,EAAKA,MAC1BvU,EAAK6U,MAAMG,OAAOrQ,EAAG,GAGH,IAApB3E,EAAK6U,MAAM5V,QACZmT,EAAGW,MAAM,GAAM,IApFA/S,EA8FnBoC,OAAS,SAAC7D,EAAGC,EAAGK,EAAM6C,EAAMpD,GAC1B,IAAM2W,EAAO,SAACxV,EAAIyV,EAAKC,GACrB,OAAQ7W,EAAUC,EAAJ,IAAUC,EAAV,IAAgBiB,GAAUyB,KAAKC,IAAI,EAAE+T,GAAM,IAAKC,GAGhE,GAAW,QAARtW,EAEDuT,EAAGW,MAAM,GAAc,EAARrR,QAEZ,GAAW,QAAR7C,GAAyB,QAARA,EAAe,CACtC,IAAMuC,EAAI6T,EAAK,MAAM,EAAE,GAAGA,EAAK,MAAM,EAAE,GACvC7C,EAAGW,MAAM,GAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,EAAa,CACnB,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GACtB7C,EAAGW,MAAM,GAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,GAAwB,OAARA,EAAc,CACpC,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GAAGA,EAAK,KAAK,EAAE,GACrC7C,EAAGW,MAAM,GAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,GAAwB,OAARA,EAAc,CACpC,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GAAGA,EAAK,KAAK,EAAE,GACrC7C,EAAGW,MAAM,GAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,EAAc,CACpB,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GACtB7C,EAAGW,MAAM,IAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,GAAwB,OAARA,EAAc,CACpC,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GAAGA,EAAK,KAAK,EAAE,GACrC7C,EAAGW,MAAM,IAAK,EAAEvU,EAAI4C,QAEjB,GAAW,OAARvC,GAAwB,OAARA,EAAc,CACpC,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GAAGA,EAAK,KAAK,EAAE,GACrC7C,EAAGW,MAAM,IAAM3R,QAEZ,GAAW,OAARvC,GAAwB,QAARA,GAAwB,QAARA,EAAe,CACrD,IAAMuC,EAAI6T,EAAK,KAAK,EAAE,GAAGA,EAAK,MAAM,EAAE,GAAGA,EAAK,MAAM,EAAE,GACtD7C,EAAGW,MAAM,IAAM3R,GAIdpB,EAAKoV,OAAiB,QAARvW,IACfmB,EAAKoV,MAAMC,IAAO3T,EAAM,KACvB1B,EAAKoV,OAAiB,SAARvW,IACfmB,EAAKoV,MAAME,KAAQ5T,EAAM,KACxB1B,EAAKoV,OAAiB,SAARvW,IACfmB,EAAKoV,MAAMG,SAAY7T,EAAM,MA9Id1B,EA4JnBwV,mBAAqB,SAAC3Q,GACpBA,EAAE4Q,iBACCzV,EAAKK,MAAM6C,QACZlD,EAAKqU,GAAGqB,SAER1V,EAAK2V,gBACL3V,EAAKqU,GAAGuB,QAEV5V,EAAKU,SAAS,CAACwC,SAAUlD,EAAKK,MAAM6C,WAlKpClD,EAAKK,MAAQ,CAAC6C,SAAS,GAFNlD,sCAKnBmD,kBAAA,WAEE7F,KAAKuX,MAAQ,GACbzC,EAAGuB,OAAO,GACVvB,EAAGjH,QACHiH,EAAGW,MAAM,GAAK,GACdzV,KAAKuY,QAAQ1T,SAAW7E,QAI1BqY,cAAA,WACgB,OAAVrY,KAAK+W,KAIT/W,KAAKuY,QAAQxT,eAAe/E,KAAKuY,QAAQvX,QAGzCyV,EAAG+B,KAAKxY,KAAKmX,WACbV,EAAGgC,GAAGzY,KAAKsX,SACXtX,KAAK+W,GAAK,IAAI2B,IAAUC,MAAM,CAC1BC,OAAQ,SACRC,QAAS,CACLC,cAAe,SAACvR,GAGZ,IAFA,IAAIwR,EAASjE,EAAGhQ,OAAO,MACnBkU,EAASzR,EAAE0R,aAAaC,eAAe,GAClC7R,EAAI,EAAGA,EAAIE,EAAE0R,aAAatX,OAAQ0F,IACvC2R,EAAO3R,GAAK0R,EAAO,GAAG1R,GAAG,OAEjC8R,WAAY,QAIpBnZ,KAAK8X,MAAQ,IAAIY,IAAUU,QAAQC,MAAM,CACrCpB,SAAU,GACVD,KAAM,GACND,IAAK,SA8CX3R,qBAAA,WACe,OAAVpG,KAAK+W,KACN/W,KAAK+W,GAAGuC,OACRtZ,KAAK+W,GAAK,SA6EdjX,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,gBAAgB8Y,QAASxZ,KAAKkY,oBAAqBlY,KAAK+C,MAAM6C,QAAS1F,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,MAAYvZ,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,WA7KpF9Y,IAAMC,WAAvBkW,EACG4C,YAAcrX,EAkLRyU,QC3LT6C,cAOJ,SAAAA,EAAY1Z,GAAO,IAAAyC,EAAA,OACjBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MALF4Z,SAAW,GAIQlX,EAHnBmX,UAAY,GAGOnX,EAFnBoX,WAAY,KAEOpX,EAqBnBqX,eAAiB,SAACC,GAChBtX,EAAKuX,UAAUD,EAAGE,OAAO9V,QAtBR1B,EAyBnByX,gBAAkB,SAACH,GACjBtX,EAAK0X,WAAWJ,EAAGE,OAAO9V,QA1BT1B,EAuDnB2X,UAAY,SAACC,GACX5X,EAAK6X,SAASD,IAxDG5X,EA2DnBkC,aAAe,SAACF,EAAKN,GAEnB,IAAMoW,EAAM,CAAC,IAAM,GAAM,GAAM,GAAM,IAI/BC,EAAS,KAAS/V,EAAK,GAAGA,EAAK,GAAGA,EAAK,GAAGN,GAAO,IACvDoW,EAAIvT,KAAKvC,EAAK,IACd8V,EAAIvT,KAAKvC,EAAK,IACd8V,EAAIvT,KAAKvC,EAAK,IACd8V,EAAIvT,KAAK7C,GACToW,EAAIvT,KAAKwT,GAETD,EAAIvT,KAAK,KACTvE,EAAK2X,UAAUG,IAzEE9X,EA4EnB6X,SAAW,SAACD,GACV,IAAMI,EAAKhY,EAAKoX,WAChB,GAAQ,OAALY,EAAH,CAIA,IAAMC,EAAUD,EAAGxL,QAAQ0L,IAAIlY,EAAKmX,WACjCc,EACDA,EAAQE,KAAKP,GAEbvY,QAAQC,IAAI,oBAPZD,QAAQC,IAAI,qBA/EGU,EA0FnBoY,kBAAoB,SAACvT,GAEnBxF,QAAQC,IAAIuF,EAAEwT,KAAKja,KAAMyG,EAAEwT,KAAKC,aAAczT,EAAEwT,KAAKhY,MAAOwE,EAAEwT,KAAKE,MACnEvY,EAAKwY,oBA7FYxY,EA0HnByY,cAAgB,SAACX,GAEf,GAAGA,EAAIN,OAAO7Z,KAAOqC,EAAKkX,SAA1B,CAGA,IAAMU,EAAOlP,MAAMgQ,KAAKZ,EAAIF,MACtBW,EAAiB,IAAVX,EAAK,GAElB,GAAU,MAAPW,EAAH,CAUA,GAAY,MAATA,EAAc,CACf,IAAMha,EAAe,GAAVqZ,EAAK,GACVlY,EAAe,IAAVkY,EAAK,GACVxX,EAAgB,IAAVwX,EAAK,GACjB5X,EAAK6V,QAAQ1V,SAAS5B,EAAGmB,EAAIU,GAC7BJ,EAAKU,SAAS,CAACiY,QAAYJ,EAAL,IAAaha,EAAb,IAAmBmB,EAAnB,IAAyBU,IAIrC,MAATmY,GAA0B,MAATA,IAClBvY,EAAK6X,SAASD,GACF,MAATW,EACDvY,EAAK6V,QAAQ1T,SAASmS,OAAOsD,EAAK,IAElC5X,EAAK6V,QAAQ1T,SAASwS,QAAQiD,EAAK,SAxBvC,CAIKgB,KAAKC,UAAUjB,KAAUgB,KAAKC,UAHjB,CAAC,IAAM,IAAM,EAAM,EAAM,EACrC,GAAM,GAAM,GAAM,EAAM,EACxB,EAAM,EAAM,EAAM,EAAM,OAE1B7Y,EAAKU,SAAS,CAACiY,QAAO,qBAvIT3Y,EAgKnB8Y,aAAe,SAACjU,GACdA,EAAE4Q,iBACFzV,EAAK6V,QAAQtU,kBAlKIvB,EAqKnB+Y,aAAe,SAAClU,GACdA,EAAE4Q,iBACFzV,EAAK6V,QAAQ5T,KAAKC,aAAa,CAAC,EAAK,EAAK,IAAM,IAvK/BlC,EA0KnBgZ,aAAe,SAACnU,GACdA,EAAE4Q,iBACFzV,EAAK6V,QAAQ5T,KAAKC,aAAa,CAAC,EAAK,EAAK,IAAM,IA5K/BlC,EAgLnBwV,mBAAqB,SAAC3Q,GACpBA,EAAE4Q,iBACFzV,EAAK6V,QAAQoD,eAhLbjZ,EAAKK,MAAQ,CACX6Y,QAAS,GACTC,SAAU,IAJKnZ,sCASnBmD,kBAAA,WAAmB,IAAAgB,EAAA7G,KACjB8b,UAAUC,kBAAmB,CAAEC,OAAO,IAAQC,KAC5C,SAACvB,GACC7T,EAAKiT,WAAaY,EAClB7T,EAAKqU,mBACLR,EAAGwB,cAAgBrV,EAAKiU,mBACxB,kBAAI/Y,QAAQC,IAAI,yCAEpBhC,KAAKuY,QAAQ5T,KAAO3E,QAYtBoa,WAAA,SAAW/Z,GACTL,KAAK6Z,UAAYxZ,EACjBL,KAAKoD,SAAS,CAACyW,UAAWxZ,IAC1BgD,oBAAkB8Y,IAAI,YAAY9b,GAClCL,KAAKoc,mBAGPnC,UAAA,SAAU5Z,GACRL,KAAK4Z,SAAWvZ,EAChBL,KAAKoD,SAAS,CAACwW,SAAUvZ,IACzBgD,oBAAkB8Y,IAAI,WAAW9b,GACjC,IAAMgc,EAASrc,KAAK8Z,WAAWwC,OAAO1B,IAAIva,GACvCgc,EACDA,EAAOE,cAAgBvc,KAAKmb,cAE5BpZ,QAAQC,IAAI,oBAIhBoa,cAAA,WAGEpc,KAAKqa,UADO,CAAC,IAAM,IAAM,IAAM,EAAM,EAAM,SA8C7Ca,iBAAA,WACE,IAAMR,EAAK1a,KAAK8Z,WACVwC,EAASlR,MAAMgQ,KAAKV,EAAG4B,OAAOE,UAC9BtN,EAAU9D,MAAMgQ,KAAKV,EAAGxL,QAAQsN,UAGtC,GAFAxc,KAAKoD,SAAS,CAACwY,QAAQU,EAAQT,SAAS3M,IAErCoN,EAAO3a,OAAO,CACf,IAAItB,EAAKgD,oBAAkBuX,IAAI,YAE1B0B,EAAOhU,IAAI,SAAAjB,GAAC,OAAEA,EAAEhH,KAAIoc,SAASpc,KAChCA,EAAKic,EAAO,GAAGjc,IAEdA,IAAOL,KAAK4Z,UACb5Z,KAAKia,UAAU5Z,GAEnB,GAAG6O,EAAQvN,OAAO,CAChB,IAAItB,EAAKgD,oBAAkBuX,IAAI,aAE1B1L,EAAQ5G,IAAI,SAAAnH,GAAC,OAAEA,EAAEd,KAAIoc,SAASpc,KACjCA,EAAK6O,EAAQ,GAAG7O,IAEfA,IAAOL,KAAK6Z,WACb7Z,KAAKoa,WAAW/Z,OA+DtBP,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKsc,UAAU,QACbxc,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAQgE,MAAOpE,KAAK+C,MAAM6W,SAAU+C,SAAU3c,KAAK+Z,gBAChD/Z,KAAK+C,MAAM6Y,QAAQtT,IAAI,SAACjB,GAAD,OAAMnH,EAAAC,EAAAC,cAAA,UAAQ+B,IAAKkF,EAAEhH,GAAI+D,MAAOiD,EAAEhH,IAAKgH,EAAEvG,SAEnEZ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAQgE,MAAOpE,KAAK+C,MAAM8W,UAAW8C,SAAU3c,KAAKma,iBACjDna,KAAK+C,MAAM8Y,SAASvT,IAAI,SAACnH,GAAD,OAAMjB,EAAAC,EAAAC,cAAA,UAAQ+B,IAAKhB,EAAEd,GAAI+D,MAAOjD,EAAEd,IAAKc,EAAEL,SAEpEZ,EAAAC,EAAAC,cAAA,KAAGsc,UAAW1c,KAAKuY,QAAQtV,SAAW,WAAW,GAAIsW,KAAK,IAAI7Y,MAAM,iBAAiB8Y,QAASxZ,KAAKwb,cAActb,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OACjHvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,iBAAiB8Y,QAASxZ,KAAKyb,cAAcvb,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC/DvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,8BAA8B8Y,QAASxZ,KAAK0b,cAAcxb,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC5EvZ,EAAAC,EAAAC,cAACyE,EAAD,YA3MSlE,IAAMC,WAAnB+Y,EACGD,YAAcrX,EAiNRsX,IC3NXiD,ED2NWjD,IC1NXkD,UAAU,GACVC,GAAY,EAEVC,cAGJ,SAAAA,EAAY9c,GAAM,IAAAyC,EAAA,OAChBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MAWFwZ,QAAU,SAACjS,GACTA,EAAE4Q,iBACFzV,EAAKU,SAAS,CAAC4Z,aAActa,EAAKK,MAAMia,eAZxCta,EAAKK,MAAQ,CACXia,aAAa,GAHCta,sCAOlB0D,qBAAA,WACEpG,KAAKid,mBASPA,cAAA,WACEC,aAAaN,GACVE,IACD9c,KAAKuY,QAAQ5T,KAAK4V,SAAS,CAAC,IAAKsC,EAAQ,IACzCC,GAAY,MAIhBK,cAAA,WAAgB,IAAAtW,EAAA7G,KAad,GAZG8c,GACD9c,KAAKuY,QAAQ5T,KAAK4V,SAAS,CAAC,IAAKsC,EAAQ,IACzCC,GAAY,IAIZD,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,IAAIO,KAAK,kBAAMxZ,KAAKyZ,SAAW,KAAK,GACN,IAA/B,EAAEzZ,KAAKG,MAAoB,EAAdH,KAAKyZ,WACpCrd,KAAKuY,QAAQ5T,KAAK4V,SAAS,CAAC,IAAKsC,EAAQ,MACzCC,GAAY,GAGX9c,KAAK+C,MAAMia,YAAY,CACxB,IAAMM,EAAW,IAAI1Z,KAAKC,IAAI,EAAED,KAAKG,MAAoB,EAAdH,KAAKyZ,WAChDT,EAAaW,WAAW,kBAAK1W,EAAKsW,iBAAiBG,OAIvDjX,mBAAA,SAAmBC,EAAWC,GACzBA,EAAUyW,cAAgBhd,KAAK+C,MAAMia,cACnChd,KAAK+C,MAAMia,YACZhd,KAAKmd,gBAELnd,KAAKid,oBAKXnd,OAAA,WAEE,OAAO,SA3Daa,IAAMC,WAAxBmc,EACGrD,YAAcrX,EAkER0a,QC3DTS,oCAGJ,SAAAA,EAAYvd,GAAM,IAAAyC,EAAA,OAChBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MAmEFyd,YAAc,SAAC3c,EAAMC,GACnB,IAAM2c,EAAQ7c,EAAUC,EAAKC,GAC7B,GAAa,OAAV2c,EAAe,CAEhB,IAAMC,EAAUjb,EAAKK,MAAM4a,QAC3BA,EAAQ1W,KAAKyW,GACbhb,EAAK8T,KAAKmH,KA1EIjb,EA8ElBkb,gBAAkB,SAAC5D,GAAO,IAAA6D,EAAA,cAAAC,EAAA,IAAArc,GAAAsc,EAAApc,OAAA,cAAAqc,EAAAD,EAAAtc,SAAA,KAAAA,EAAAsc,EAAAE,QAAAC,KAAA,cAAAF,EAAAvc,EAAA2C,MAAA,IACd8S,EADc8G,EAEhBG,EAAK,IAAIC,WACfD,EAAGE,OAAS,WACV,IAAMtd,EAAI,IAAIud,UAAUH,EAAGI,QAC3B7b,EAAK+a,YAAYvG,EAAEpW,KAAKC,IAE1Bod,EAAGK,kBAAkBtH,IANvB6G,EAAe/D,EAAGE,OAAOuE,MAAzBX,EAAA1S,MAAAsT,QAAAX,GAAAtc,EAAA,MAAAsc,EAAAD,EAAAC,IAAAY,OAAAC,cAA+B,KAAAZ,EAAA,aAAAH,IAAA,QA/Efnb,EAyFlBia,SAAW,SAAC3C,GACVtX,EAAKU,SAAS,CAACyb,QAAS7E,EAAGE,OAAO9V,QAClC4V,EAAGE,OAAO4E,QA3FMpc,EA8FlBqc,OAAS,SAACxX,GAER,GADAA,EAAE4Q,iBAC6B,IAA5BzV,EAAKK,MAAM4a,QAAQhc,OAAtB,CAGA,IAAMgc,EAAUjb,EAAKK,MAAM4a,QAE3BA,EADUpZ,SAAS7B,EAAKK,MAAM8b,UACnB7d,OAAS0B,EAAK6V,QAAQvX,OACjC0B,EAAK8T,KAAKmH,KAtGMjb,EA0GlBsc,SAAW,SAACzX,GACVA,EAAE4Q,iBACF,IAAIuF,EAAQuB,OAAO,mBACnB,GAAc,OAAVvB,GAA4B,KAAVA,EAAc,CAClC,IAAMC,EAAUjb,EAAKK,MAAM4a,QAC3BA,EAAQ1W,KAAK,CAACnG,KAAK4c,EAAO1c,OAAQ0B,EAAK6V,QAAQvX,SAC/C0B,EAAK8T,KAAKmH,KAhHIjb,EAoHlBwc,SAAW,SAAC3X,GAEV,GADAA,EAAE4Q,mBACCzV,EAAKK,MAAM4a,QAAQhc,QAAQ,GAA9B,CAGA,IAAMgc,EAAUjb,EAAKK,MAAM4a,QAAQxW,OAAQ,SAACoB,EAAElB,GAAH,OAASA,IAAI9C,SAAS7B,EAAKK,MAAM8b,WAC5Enc,EAAK8T,KAAKmH,KA1HMjb,EA6HlByc,eAAiB,SAAC5X,GAChBA,EAAE4Q,iBACFzV,EAAK0c,sBA/HW1c,EAkIlB2c,YAAc,SAAC9X,GACbA,EAAE4Q,iBACF,IAAM9Q,EAAI9C,SAAS7B,EAAKK,MAAM8b,SAC3BxX,EAAE,GACH3E,EAAKU,SAAS,CAACyb,QAAQxX,EAAE,KAtIX3E,EA0IlB4c,aAAe,SAAC/X,GACdA,EAAE4Q,iBACF,IAAM9Q,EAAI9C,SAAS7B,EAAKK,MAAM8b,SAC3BxX,EAAE3E,EAAKK,MAAM4a,QAAQhc,OAAO,GAC7Be,EAAKU,SAAS,CAACyb,QAAQxX,EAAE,KA9IX3E,EAkJlB6c,cAAgB,SAAChY,GACfA,EAAE4Q,iBACFzV,EAAK8c,KAAKC,KAAKC,SAlJfhd,EAAKK,MAAQ,CACX4a,QAAS,CAAC,CAAC7c,KAAM,QAASE,OAAQK,MAClCwd,QAAS,GAJKnc,sCAQlBmD,kBAAA,WACE,IAAM8X,EAAUta,oBAAkB0C,UAAU,UAAU,IAClC,IAAjB4X,EAAQhc,QAA4C,IAA9BuB,OAAO8C,KAAK2X,GAAShc,OAC5C3B,KAAKof,qBAELpf,KAAKoD,SAAS,CAACua,QAAQA,OAI3BnH,KAAA,SAAKmH,GACHta,oBAAkBC,UAAU,UAAUqa,GACtC3d,KAAKoD,SAAS,CAACua,QAAQA,OAGzByB,mBAAA,WAAoB,IAAAvY,EAAA7G,KAElBA,KAAKwW,KAAK,IAEV,IAAM1G,EAAI,IAAI6P,eACd7P,EAAE8P,mBAAqB,SAAC5F,GACtB,GAAoB,IAAjBlK,EAAE+P,YAAiC,MAAb/P,EAAEE,OACzB,KADyC8P,EAAA,cAAAC,EAAA,IAAA/a,GAAAgb,EAAAre,OAAA,cAAAse,EAAAD,EAAAhb,SAAA,KAAAA,EAAAgb,EAAA/B,QAAAC,KAAA,cAAA+B,EAAAjb,EAAAZ,MAAA,IAE/BiD,EAF+B4Y,EAGjCnQ,EAAI,IAAI6P,eACd7P,EAAEoQ,aAAe,cACjBpQ,EAAE8P,mBAAqB,SAAC5F,GACtB,GAAoB,IAAjBlK,EAAE+P,YAAiC,MAAb/P,EAAEE,OAAgB,CACzC,IAAMjP,EAAI,IAAIud,UAAUxO,EAAEqQ,UAC1BtZ,EAAK4W,YAAYpW,EAAEtG,KAGvB+O,EAAEsQ,KAAK,MAAMC,UAAS,uBAAwBhZ,IAC9CyI,EAAE+K,KAAK,OAVTmF,EADclQ,EAAEwQ,aAAahc,MAAM,SAAS6C,OAAQ,SAAAC,GAAC,OAAIA,EAAEzF,OAAO,IAClEoe,EAAA3U,MAAAsT,QAAAsB,GAAAhb,EAAA,MAAAgb,EAAAD,EAAAC,IAAArB,OAAAC,cAAqB,KAAAqB,EAAA,aAAAH,IAAA,SAczBhQ,EAAEsQ,KAAK,MAAO,iCACdtQ,EAAE+K,KAAK,SAITxU,mBAAA,SAAmBC,EAAWC,GAE5B,GAAGA,EAAUsY,UAAY7e,KAAK+C,MAAM8b,QAAQ,CAC1C,IAAMxX,EAAI9C,SAASvE,KAAK+C,MAAM8b,SACxBnB,EAAQ1d,KAAK+C,MAAM4a,QAAQtW,GAC9BqW,GACD1d,KAAKuY,QAAQnT,aAAasY,EAAM1c,QAGpC,GAAGuF,EAAUoX,QAAQhc,SAAW3B,KAAK+C,MAAM4a,QAAQhc,OAAO,CACxD3B,KAAKoD,SAAS,CAACyb,QAAQ,IACvB,IAAMnB,EAAQ1d,KAAK+C,MAAM4a,QAAQ,GAC9BD,GACD1d,KAAKuY,QAAQnT,aAAasY,EAAM1c,YAyFtClB,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,iBAAiB8Y,QAASxZ,KAAKqf,aAAanf,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC9DvZ,EAAAC,EAAAC,cAAA,UAAQgE,MAAOpE,KAAK+C,MAAM8b,QAASlC,SAAU3c,KAAK2c,UAC/C3c,KAAK+C,MAAM4a,QAAQrV,IAAI,SAACC,EAAElB,GAAH,OAAQnH,EAAAC,EAAAC,cAAA,UAAQ+B,IAAKkF,EAAGjD,MAAOiD,GAAIkB,EAAEzH,SAE/DZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,aAAa8Y,QAASxZ,KAAKsf,cAAcpf,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC3DvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,kBAAkB8Y,QAASxZ,KAAK+e,QAAQ7e,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC1DvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,mBAAmB8Y,QAASxZ,KAAKgf,UAAU9e,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC7DvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,iBAAiB8Y,QAASxZ,KAAKuf,eAAerf,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAChEvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,oBAAoB8Y,QAASxZ,KAAKkf,UAAUhf,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OAC9DvZ,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAI7Y,MAAM,uBAAuB8Y,QAASxZ,KAAKmf,gBAAgBjf,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,OACvEvZ,EAAAC,EAAAC,cAAA,SAAOmgB,MAAO,CAACC,QAAQ,QAASC,IAAI,OAAOxF,KAAK,OAAOyF,OAAO,OAAOC,UAAQ,EAAChE,SAAU3c,KAAK4d,uBAvK/Ejd,IAAMC,YAAtB4c,EACG9D,YAAcrX,EA8KRmb,QC3LToD,cAEJ,SAAAA,EAAY3gB,GAAO,IAAAyC,EAAA,OACjBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MACK+C,MAAQ,GACbL,EAAKyB,KAAUlE,EAAMgB,GAArB,IAA2BhB,EAAMiB,GAHhBwB,8BAMnB5C,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,OAAKsc,UAAU,YACbxc,EAAAC,EAAAC,cAAA,OAAKygB,OAAO,MAAMC,MAAM,MAAMC,QAAQ,cAAcC,MAAM,8BACxD9gB,EAAAC,EAAAC,cAAA,YAAU6gB,OAAQjhB,KAAKuY,QAAQ5S,UAAU3F,KAAKmE,cAZjCxD,IAAMC,WAAvBggB,EACGlH,YAAcrX,EAkBvBue,EAASM,aAAe,CACtBjgB,GAAI,EACJC,GAAI,GAIS0f,QCzBTO,cAEJ,SAAAA,EAAYlhB,GAAO,IAAAyC,EAAA,OACjBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MAUF2c,SAAW,SAAC3C,GACVA,EAAG7B,iBACHzV,EAAK6V,QAAQvU,YAAYtB,EAAKyB,KAAKI,SAASyV,EAAGE,OAAO9V,QACtD1B,EAAK6V,QAAQpT,mBAAmBzC,EAAKyB,OAdpBzB,EAiBnB8W,QAAU,SAACQ,GACTA,EAAG7B,iBACHzV,EAAK6V,QAAQpT,mBAAmBzC,EAAKyB,OAjBrCzB,EAAKyB,KAAUlE,EAAMgB,GAArB,IAA2BhB,EAAMiB,GAAjC,IAAuCjB,EAAMa,KAC7C4B,EAAKK,MAAQ,GAHIL,sCAMnB0e,mBAAA,WACE,IAAM9Y,EAAKtI,KAAKuY,QAAQrW,QAAQlC,KAAKmE,MACrCnE,KAAKyR,IAAM7N,KAAKC,IAAI,EAAEyE,EAAI9G,MAAM,KAclC1B,OAAA,WACE,IAAM4D,EAAI1D,KAAKuY,QAAQrW,QAAQlC,KAAKmE,MAC9Bkd,EAA4B,QAAhB3d,EAAEzC,IAAMyC,EAAEtB,IACxBsa,EAAY,SAKhB,OAJG1c,KAAKuY,QAAQtV,WAAUyZ,GAAa,UACpC1c,KAAKuY,QAAQvV,kBAAoBhD,KAAKmE,OAAMuY,GAAa,WACzD2E,IAAQ3E,GAAa,WAGtBxc,EAAAC,EAAAC,cAAA,OAAKsc,UAAWA,EAAWlD,QAASxZ,KAAKwZ,SACvCtZ,EAAAC,EAAAC,cAAA,aAAQJ,KAAKC,MAAMa,MACnBZ,EAAAC,EAAAC,cAAA,SAAO6a,KAAK,QAAQtX,KAAM,EAAG2d,IAAK,EAAG7P,IAAKzR,KAAKyR,IAAKrN,MAAOpE,KAAKuY,QAAQvX,OAAOhB,KAAKmE,MACnFwY,SAAU3c,KAAK2c,WAChBzc,EAAAC,EAAAC,cAAA,YACGJ,KAAKuY,QAAQvX,OAAOhB,KAAKmE,OAASnE,KAAKuY,QAAQtV,SAAYoe,EAAM,MAAS3d,EAAEzC,GAAX,IAAiByC,EAAEtB,GAAO,SAAW,UAtC5FzB,IAAMC,WAArBugB,EACGzH,YAAcrX,EA4CvB8e,EAAOD,aAAe,CACpB1Z,KAAK,EACLvG,GAAI,EACJC,GAAI,GAGSigB,QCjDTI,4FAGJzhB,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,OAAKsc,UAAU,YACbxc,EAAAC,EAAAC,cAAA,gBAAQJ,KAAKC,MAAMiB,GAAG,GACtBhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACqhB,EAAD,CAAUxgB,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KAC5ChB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,MAAMG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACrDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,MAAMG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACrDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,KACpDhB,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAIlB,KAAKC,MAAMiB,UAjBrCP,IAAMC,WAAvB2gB,EACG7H,YAAcrX,EAuBvBkf,EAASL,aAAe,CACtBjgB,GAAI,GAISsgB,YC5BTG,4FAGJ5hB,OAAA,WACE,OACEI,EAAAC,EAAAC,cAAA,OAAKsc,UAAU,WACbxc,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,SACjBZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAKG,GAAIjB,KAAKC,MAAMgB,MACrCf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKsc,UAAU,aCnBhB,SAAwBiF,GACrC,OAAOA,GACL,KAAK,EACH,4EAWF,KAAK,EACL,4FAWA,KAAK,EACL,gHAWA,KAAK,EACL,gHAWA,KAAK,EACL,iGAWA,KAAK,EACL,qIAWA,KAAK,EACL,qIAWA,KAAK,EACL,0GAWF,QACI,MAAO,gBD/EMC,CAAe5hB,KAAKuY,QAAQvX,OAAUhB,KAAKC,MAAMgB,GAAlC,aAItBf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAMG,GAAIjB,KAAKC,MAAMgB,MACtCf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,MAAMG,GAAIjB,KAAKC,MAAMgB,MACtCf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,MAAMG,GAAIjB,KAAKC,MAAMgB,MACtCf,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACohB,EAAD,CAAQ1gB,KAAK,KAAMG,GAAIjB,KAAKC,MAAMgB,MACtCf,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyhB,EAAD,CAAU5gB,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAI,KACrChB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyhB,EAAD,CAAU5gB,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAI,KACrChB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyhB,EAAD,CAAU5gB,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAI,KACrChB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyhB,EAAD,CAAU5gB,GAAIjB,KAAKC,MAAMgB,GAAIC,GAAI,aA7B7BP,IAAMC,WAAtB8gB,EACGhI,YAAcrX,EAqCvBqf,EAAQR,aAAe,CACrBjgB,GAAI,GAGSygB,QE5CTI,sJAGJC,gBAAiB,SAAC/H,GAChBA,EAAG7B,iBACH,IAAMlX,EAAKsD,SAASyV,EAAGE,OAAO8H,WAAW/gB,GAAGmD,OAC5C1B,EAAK6V,QAAQ9S,cAAcxE,kCAG7BnB,OAAA,WAAS,IAAA+G,EAAA7G,KACDkX,EAAIlX,KAAKuY,QAAQ7S,QACvB,OACIxF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8hB,SAAA,KACE/hB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAImD,UAAoB,IAATxF,EAAEjW,GAAW,SAAS,GAAKA,GAAI,EAAGuY,QAASxZ,KAAK+hB,gBAAiBrhB,MAAM,0BAA9F,gBACC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG4H,IAAI,SAAAjB,GAAC,OAAInH,EAAAC,EAAAC,cAAA,KAAGmZ,KAAK,IAAImD,UAAWxF,EAAEjW,KAAOoG,EAAI,SAAS,GAAKlF,IAAKkF,EAAGpG,GAAIoG,EAAGmS,QAAS3S,EAAKkb,gBAAiBrhB,MAAO,sBAAsB2G,EAAE,IAAKA,EAAE,MAE/J,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGiB,IAAI,SAAAjB,GAAC,OAAK6P,EAAEjW,KAAOoG,GAAMnH,EAAAC,EAAAC,cAAC8hB,EAAD,CAAS/f,IAAKkF,EAAGpG,GAAIoG,WAjBlD1G,IAAMC,WAAvBkhB,EACGpI,YAAcrX,EAuBRyf,QCNAK,4FAZbriB,OAAA,WACE,OACII,EAAAC,EAAAC,cAACmY,EAAD,KACErY,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAACgiB,EAAD,MACAliB,EAAAC,EAAAC,cAACiiB,EAAD,MACAniB,EAAAC,EAAAC,cAACkiB,EAAD,WARW3hB,IAAMC,WCFrB2hB,4FACJziB,OAAA,WACE,OACEI,EAAAC,EAAAC,cAACoiB,EAAD,CAAQC,SAAUziB,KAAKC,MAAMwiB,UAC3BviB,EAAAC,EAAAC,cAACsiB,EAAA,EAAD,CAAKhiB,MAAM,WACXR,EAAAC,EAAAC,cAACuiB,EAAD,WALkBhiB,IAAMC,WAWjB2hB,8CCjBfK,EAAA7hB,EAAA8hB,EAAA,sBAAAC,IAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA7N,EAAAgO,GAAAE,EAAAL,EAAA,GAAAM,EAAAN,EAAA7N,EAAAkO,GAAAE,EAAAP,EAAA,IAAAQ,EAAAR,EAAA7N,EAAAoO,GAAAP,EAAA7hB,EAAA8hB,EAAA,sBAAAO,EAAAjjB,IAAAyiB,EAAA7hB,EAAA8hB,EAAA,sBAAAM,EAAA,WAAAP,EAAA,SAaMS,EAAqB1iB,IAAM2B,cAAc,IAEzCwgB,EAAc,SAAA7iB,GAAK,OACvB+iB,EAAA7iB,EAAAC,cAACijB,EAAmB7gB,SAApB,KACG,SAAA8gB,GACC,OACErjB,EAAMqa,MACLgJ,EAAgBrjB,EAAMsjB,QAAUD,EAAgBrjB,EAAMsjB,OAAOjJ,MAEtDra,EAAMH,QAAUG,EAAMF,UAC5BE,EAAMqa,KAAOra,EAAMqa,KAAKA,KAAOgJ,EAAgBrjB,EAAMsjB,OAAOjJ,MAGvD0I,EAAA7iB,EAAAC,cAAA,uCA4Bf0iB,EAAYU,UAAY,CACtBlJ,KAAMmJ,IAAUC,OAChBH,MAAOE,IAAUE,OAAOC,WACxB9jB,OAAQ2jB,IAAUI,KAClB9jB,SAAU0jB,IAAUI,2BC1DtB,IAAsBngB,EAKpBogB,EAAOC,SALargB,EAKWsgB,EAAQ,OALRtgB,EAAEugB,SAAYvgB,4GCK/C,SAASwgB,EAATlG,GAA2D,IAA5CmG,EAA4CnG,EAA5CmG,YAAaC,EAA+BpG,EAA/BoG,KAAMC,EAAyBrG,EAAzBqG,KAAMC,EAAmBtG,EAAnBsG,SAAU5jB,EAASsd,EAATtd,MAChD,OACE6jB,EAAApkB,EAAAC,cAACokB,EAAA,EAAD,CACEjB,MAAOkB,EACP3kB,OAAQ,SAAAwa,GACN,IAAMoK,EACJP,GAAe7J,EAAKqK,KAAKC,aAAaT,YACxC,OACEI,EAAApkB,EAAAC,cAACykB,EAAA1kB,EAAD,CACE2kB,eAAgB,CACdV,QAEF1jB,MAAOA,EACPqkB,cAAa,QAAUzK,EAAKqK,KAAKC,aAAalkB,MAC9C2jB,KAAM,CACJ,CACEvjB,KAAI,cACJkkB,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAStkB,GAEX,CACEukB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACElkB,KAAI,eACJkkB,QAAO,WAET,CACElkB,KAAI,kBACJkkB,QAAS1K,EAAKqK,KAAKC,aAAaM,QAElC,CACEpkB,KAAI,gBACJkkB,QAAStkB,GAEX,CACEI,KAAI,sBACJkkB,QAASN,IAGVS,OACCb,EAAS3iB,OAAS,EACd,CACEb,KAAI,WACJkkB,QAASV,EAAS9b,KAAT,OAEX,IAEL2c,OAAOd,MAtDlB/J,KAAA8K,IA8DJlB,EAAIhD,aAAe,CACjBkD,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIV,UAAY,CACdW,YAAaV,IAAUE,OACvBS,KAAMX,IAAUE,OAChBU,KAAMZ,IAAU4B,MAChBf,SAAUb,IAAU6B,QAAQ7B,IAAUE,QACtCjjB,MAAO+iB,IAAUE,OAAOC,YAGXM,MAEf,IAAMO,EAAY,+GC/EZc,EAAmB,SAAAvH,GAAkB,IAAfyE,EAAezE,EAAfyE,SACpB+C,EAAgBC,UAAOC,4BAA4BjD,EAASkD,UAClE,OAAKH,EAIE7kB,IAAMP,cAAcwlB,IAApB1iB,OAAAC,OAAA,CACLsf,WACA+C,iBACGA,EAAcK,OANV,MAUXN,EAAiB/B,UAAY,CAC3Bf,SAAUgB,IAAUqC,MAAM,CACxBH,SAAUlC,IAAUE,OAAOC,aAC1BA,YAGU2B,iHCrBTQ,EAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAEtDC,cAEJ,SAAAA,EAAY/lB,GAAM,IAAAyC,EAAA,OAChBA,EAAAC,EAAAC,KAAA5C,KAAMC,IAAND,MACK+C,MAAQ,CAACrC,MAAOT,EAAMS,OAFXgC,sCAKlBujB,QAAA,WAEE,IADA,IAAIxf,EAAO,EACHY,EAAE,EAAEA,EAAErH,KAAKC,MAAMS,MAAMiB,OAAO0F,IACpCZ,GAASzG,KAAK+C,MAAMrC,MAAM2G,KAAKrH,KAAKC,MAAMS,MAAM2G,GAAM,EAAI,EAE5D,OAAOZ,KAGTsK,MAAA,WACE,IAAI1J,EAAIzD,KAAKG,MAAMH,KAAKyZ,SAAS0I,EAAMpkB,QACnCyZ,EAAOxX,KAAK+D,MAAM/D,KAAKyZ,UACxBrd,KAAKimB,UAAU,IAAG7K,EAAO,GAC5B,IAAI8K,EAAK9K,EAAO,EAAI,EACjBxX,KAAKyZ,SAAS,IACfrd,KAAKoD,SAAS,CACZ1C,MAAOV,KAAK+C,MAAMrC,MAAMU,QAAQ2kB,EAAM1e,GAAG+T,GAAM2K,EAAM1e,GAAG6e,SAK9DrgB,kBAAA,WACE7F,KAAKmmB,WAAaC,YAAYpmB,KAAK+Q,MAAMsV,KAAKrmB,MAAO,QAGvDoG,qBAAA,WACEkgB,cAActmB,KAAKmmB,eAGrBrmB,OAAA,WACE,OACIymB,EAAApmB,EAAAC,cAAA,UACEmmB,EAAApmB,EAAAC,cAAComB,EAAA,EAAD,CAAMN,GAAE,KAAQlmB,KAAK+C,MAAMrC,YAtCjBC,IAAMC,WA+C1BolB,EAAMxC,UAAY,CAChB9iB,MAAO+iB,IAAUE,OAAOC,YAIXoC","file":"component---src-pages-cv-2612-js-cf54c9e26bba9038acb6.js","sourcesContent":["import React from \"react\"\nimport Brand from \"../components/header/brand\"\nimport Helmet from \"react-helmet\"\n\nclass Layout extends React.Component {\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <div id=\"app\">\n        <header>\n          <Helmet bodyAttributes={{class:'dark cv2612'}} />\n          <Brand title=\"diego dorado\"/>\n        </header>\n        <main>{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","export const dmp2patch = (name,d) =>{\n    //version 9 or 11, genesis, FM patch\n    if( (d[0]===0x09 && d[1]===0x01 && d[2]===0x00)\n        || ( d[0]===0x0B && d[1]===0x02 && d[2]===0x01) ){\n\n        /*\n\n        http://www.deflemask.com/DMP_SPECS.txt\n\n        1 Byte: LFO (FMS on YM2612, PMS on YM2151)\n        1 Byte: FB\n        1 Byte: ALG\n        1 Byte: LFO2 (AMS on YM2612, AMS on YM2151)\n        Repeat this TOTAL_OPERATORS times\n          1 Byte: MULT\n          1 Byte: TL\n          1 Byte: AR\n          1 Byte: DR\n          1 Byte: SL\n          1 Byte: RR\n          1 Byte: AM\n          1 Byte: RS\n          1 Byte: DT (DT2<<4 | DT on YM2151)\n          1 Byte: D2R\n          1 Byte: SSGEG_Enabled <<3 | SSGEG\n          */\n          const params = {}\n          params[`6_4_lfo`] = 0\n          for(let ch=0;ch<=6;ch++){\n            //repeat for 6 channels, and omni channel too\n            params[`${ch}_4_fms`] = d[3]\n            params[`${ch}_4_fb`] = d[4]\n            params[`${ch}_4_al`] = d[5]\n            params[`${ch}_4_ams`] = d[6]\n            params[`${ch}_4_st`] = 3\n            for(let op=0;op<=4;op++){\n              //use first op as omni op\n              const o = (op===4?0:op)*11+7\n              params[`${ch}_${op}_mul`] = d[o+0]\n              params[`${ch}_${op}_tl`] = d[o+1]\n              params[`${ch}_${op}_ar`] = d[o+2]\n              params[`${ch}_${op}_d1`] = d[o+3]\n              params[`${ch}_${op}_sl`] = d[o+4]\n              params[`${ch}_${op}_rr`] = d[o+5]\n              params[`${ch}_${op}_am`] = d[o+6]\n              params[`${ch}_${op}_rs`] = d[o+7]\n              params[`${ch}_${op}_det`] = d[o+8]\n              params[`${ch}_${op}_d2`] = d[o+9]\n            }\n          }\n\n          return {name: name.replace('.dmp',''), params: params}\n    }\n    //else\n    return null\n\n}\n\n\nexport const emptyParams = () =>{\n  const params = {}\n  params[`6_4_lfo`] = 0\n  params[`6_4_dly`] = 0\n  params[`6_4_dlyt`] = 0\n  params[`6_4_dlyf`] = 0\n  for(let ch=0;ch<=6;ch++){\n    //repeat for 6 channels, and omni channel too\n    params[`${ch}_4_fms`] = 0\n    params[`${ch}_4_fb`] = 0\n    params[`${ch}_4_al`] = 0\n    params[`${ch}_4_ams`] = 0\n    params[`${ch}_4_st`] = 3\n    for(let op=0;op<=4;op++){\n      params[`${ch}_${op}_mul`] = 0\n      params[`${ch}_${op}_tl`] = 0\n      params[`${ch}_${op}_ar`] = 0\n      params[`${ch}_${op}_d1`] = 0\n      params[`${ch}_${op}_sl`] = 0\n      params[`${ch}_${op}_rr`] = 0\n      params[`${ch}_${op}_am`] = 0\n      params[`${ch}_${op}_rs`] = 0\n      params[`${ch}_${op}_det`] = 0\n      params[`${ch}_${op}_d2`] = 0\n    }\n  }\n  return params\n}\n\n\nconst bitness = (param) =>{\n  const groups = [\n    ['am'],\n    ['rs','st','ams'],\n    ['det','al','fb','fms','lfo'],\n    ['sl','rr','mul'],\n    ['ar','d2','d1'],\n    [],\n    ['tl'],\n    ['dly','dlyt','dlyf'],\n  ]\n  let bits = 1\n  for(let group of groups){\n    if (group.some((k) => param.endsWith(k)))\n      return bits\n    bits++\n  }\n  console.log('invalid param',param)\n  return 0\n}\n\nexport const emptyMapping = () =>{\n  const mapping = emptyParams()\n  for (let key in mapping) {\n    mapping[key] = {cc:null, ch:null, bits: bitness(key)}\n  }\n  return mapping\n}\n","import React from \"react\"\nimport {emptyParams, emptyMapping} from \"./utils/patches-utils\"\nimport obj_diff from \"./utils/obj_diff\"\nimport {reactLocalStorage} from 'reactjs-localstorage'\n\nexport const CV2612Context = React.createContext()\nexport const CV2612Consumer = CV2612Context.Consumer\n\nconst ctrlmap = ['ar','d1','sl','d2','rr','tl','mul','det','rs','am','al','fb','ams','fms','st','lfo']\n\n// Create the provider using a traditional React.Component class\nclass CV2612Provider extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      midi: null,\n      emulator: null,\n      learning: false,\n      activeParameter: null,\n      envelopes: {},\n      params: emptyParams(),\n      mapping: emptyMapping(),\n      filters:{ch: 6},\n      soundOn: false,\n      setActiveParameter: this.setActiveParameter,\n      updateParam: this.updateParam,\n      updateParams: this.updateParams,\n      filterChannel: this.filterChannel,\n      toggleLearning: this.toggleLearning,\n      handleCC: this.handleCC,\n      sendParameters : this.sendParameters,\n    }\n  }\n\n  componentDidMount(){\n    const savedMapping = reactLocalStorage.getObject('mapping',{})\n    if(Object.keys(savedMapping).length>0){\n      let mapping = {...this.state.mapping}\n      for (let [code, value] of Object.entries(savedMapping)) {\n        mapping[code] = value\n      }\n      this.setState({mapping:mapping})\n    }\n  }\n\n  componentWillUnmount() {\n    //this.state.emulator.destroy()\n  }\n\n  handleCC = (ch,cc, val)=>{\n    const k = this.state.activeParameter\n    if(this.state.mapping[k] && this.state.learning){\n      let mapping = {...this.state.mapping}\n      if(mapping[k].ch !== ch && mapping[k].cc !== cc){\n        mapping[k].ch = ch\n        mapping[k].cc = cc\n        this.setState({mapping: mapping})\n        reactLocalStorage.setObject('mapping',mapping)\n      }\n    }\n\n    for (let [k, m] of Object.entries(this.state.mapping)) {\n      if(m.cc === cc && m.ch === ch){\n        const resolution = Math.pow(2,m.bits)\n        const step = 128/resolution\n        const v = Math.floor(val/step)\n        this.updateParam(k,v)\n      }\n    }\n\n  }\n\n  toggleLearning = () =>{\n    this.setState({learning: !this.state.learning})\n  }\n\n  sendParameter = (code, value) => {\n    const parts = code.split('_')\n    const ch = parseInt(parts[0])\n    const op = parseInt(parts[1])\n    const param = parts[2]\n    const pId = ctrlmap.indexOf(param)\n    if(pId!==-1){\n      const addr = [ch,op,pId]\n      this.state.midi.sendSysexSet(addr,value)\n    }\n    this.state.emulator.update(ch,op,param,value,this.state.params)\n  }\n\n\n  sendParameters = (params) => {\n    for (let [code, value] of Object.entries(params)) {\n      this.sendParameter(code,value)\n    }\n  }\n\n\n\n  setActiveParameter = (param) => {\n    this.setState({activeParameter: param})\n  }\n\n  updateParam = (code,value) => {\n    let params = {...this.state.params}\n    params[code] = value\n    this.setState({params: params})\n  }\n\n  updateParams = (newParams) => {\n    let params = {...this.state.params}\n    for (let [code, value] of Object.entries(newParams)) {\n      params[code] = value\n    }\n    this.setState({params: params})\n  }\n\n  filterChannel= (ch) => {\n    let filters = {...this.state.filters}\n    filters.ch = ch\n    this.setState({filters})\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    //which params have changed?\n    const diff = obj_diff(prevState.params, this.state.params)\n\n    this.sendParameters(diff)\n\n    this.updateEnvelopesIfChanged(diff)\n  }\n\n  updateEnvelopesIfChanged(diff){\n    //check if any envelope should change\n    const env_params = ['ar','d1','sl','d2','rr','tl']\n    const envs = Object.keys(diff).reduce((acc, key) => {\n      if (env_params.some((a) => key.endsWith(a)))\n        //accumulates channel_operator to identify envelope to update\n        acc.push(key.substring(0,3))\n      return acc\n    }, [])\n      .filter((x, i, a) => a.indexOf(x) === i) //filter unique\n\n    //update envelopes?\n    if(envs.length){\n      let envelopes = {...this.state.envelopes}\n      envs.forEach( (e) => {\n        const env = env_params\n          .reduce((acc,i)=>{acc[`${i}`]=this.state.params[`${e}_${i}`];return acc},{})\n        envelopes[e] = this.calculateEnvelopePoints(env)\n      })\n      this.setState({envelopes: envelopes})\n    }\n  }\n\n  calculateEnvelopePoints(env){\n    const x1 = Math.round((31-env.ar)/31*100)\n    const y1 = Math.round(env.tl/127*100)\n    const x2 = Math.round(x1+(31-env.d1)/31*100)\n    const y2 = Math.round(y1+(100-y1)*(env.sl/15))\n    const x3 = Math.round(x2+(31-env.d2)/31*50+50)\n    const y3 = Math.round(y2+(100-y2)*(0.5*(env.d2/31)))\n    const x4 = Math.round(x3+(31-env.rr)/31*100)\n\n    const points = [\n        [0,100],\n        [x1,y1],\n        [x2,y2],\n        [x3,y3],\n        [x4,100]\n      ]\n    return points.map((p)=>p.join(',')).join(' ').replace(/NaN/g,'0')\n  }\n\n\n  render () {\n    return (\n      // value prop is where we define what values\n      // that are accessible to consumer components\n       <CV2612Context.Provider value={this.state}>\n        {this.props.children}\n      </CV2612Context.Provider>\n    )\n  }\n}\n\nexport default CV2612Provider\n","export default function obj_diff(a,b){\n  return Object.keys(b).reduce((diff, key) => {\n    if (a[key] === b[key]) return diff\n    return {\n      ...diff,\n      [key]: b[key]\n    }\n  }, {})\n}\n","export default function YM2612() {\n\tif (!this instanceof YM2612) return new YM2612();\n\tthis.version = 0x101;\n\tthis.start = 0;\n\tthis.count = 0;\n\tthis.chip = null;\n}\n\n(function(Y){\n\n/**** CONFIG ****/\nvar cfg = {\n\thq_fm:0,\t// force 53kHz sampling rate\n\tdac_bits:8,\t// DAC width\n\tmaxcalc:0,\t// for logging, # total chan_calc ops to log\n\tdebug:0,\t// for logging\n\tdebugLocal:0,\n\tdebugArr:[],\n\tmode:0,\t// 0=gpgx, 1=vb/scale\n\tstrict:0\t// abort on bad input if true\n};\n\n/**** GLOBALS ****/\nvar _YM = {\t//// used if cfg.mode = 1 (i.e. scale the tables to a ratio of clock) +neo\n\t\"FREQ_SH\":16,\t// 16.16 fixed point (freq calcs)\n\t\"EG_SH\":16,\t// 16.16 fixed point (env gen timing)\n\t\"LFO_SH\":24,\t// 8.24 fixed point (lfo calcs)\n\t\"TIMER_SH\":16\t// 16.16 fixed point (timers calcs)\n};\n_YM.FREQ_MASK = (1<<_YM.FREQ_SH)-1;\n\n/**** ENVELOPE GENERATOR ****/\nvar _ENV = {\n\t\"BITS\":10,\n\t\"MIN_ATT_INDEX\":0\n};\n_ENV.LEN = 1<<_ENV.BITS;\n_ENV.STEP = 128.0/_ENV.LEN;\n_ENV.MAX_ATT_INDEX = _ENV.LEN-1;\n\nvar _EG = {\n\t'ATT':4,\n\t'DEC':3,\n\t'SUS':2,\n\t'REL':1,\n\t'OFF':0\n};\n\n/**** PHASE GENERATOR (detune mask) ****/\nvar _DT = {\n\t\"BITS\":17\n};\n_DT.LEN = 1<<_DT.BITS;\n_DT.MASK = _DT.LEN-1;\n\n/**** OPERATOR UNIT ****/\nvar _SIN = {\n\t\"BITS\":10\n};\n_SIN.LEN = 1<<_SIN.BITS;\n_SIN.MASK = _SIN.LEN-1;\n\nvar _TL = {\n\t\"BITS\":14\n};\n_TL.RES_LEN = 256;\t// sinus resolution\n_TL.TAB_LEN = 13*2*_TL.RES_LEN;\t// 13 = sinus amplitude bits, 2 = sinus sign bit\n_TL.tab = new Array(_TL.TAB_LEN);\n\n_ENV.QUIET = _TL.TAB_LEN>>3;\n\n/* sin waveform table in 'decibel' scale */\n_YM.sin = new Array(_SIN.LEN);\n\n/* sustain level table (3dB per step) */\n/* bit0, bit1, bit2, bit3, bit4, bit5, bit6 */\n/* 1,    2,    4,    8,    16,   32,   64   (value)*/\n/* 0.75, 1.5,  3,    6,    12,   24,   48   (dB)*/\n/* 0 - 15: 0, 3, 6, 9,12,15,18,21,24,27,30,33,36,39,42,93 (dB)*/\n/* attenuation value (10 bits) = (SL << 2) << 3 */\n_YM.sl = (function(){\n\tvar SC = function(db){return (db*4.0/_ENV.STEP)|0;};\n\treturn [\n\t\tSC(0), SC(1), SC(2), SC(3), SC(4), SC(5), SC(6), SC(7),\n\t\tSC(8), SC(9), SC(10), SC(11), SC(12), SC(13), SC(14), SC(31)\n\t];\n})();\n\n_EG.RATE_STEPS = 8;\n_EG.inc = [\t// 19*_EG.RATE_STEPS\n\t/*cycle:0 1  2 3  4 5  6 7*/\n\n\t/* 0 */ 0,1, 0,1, 0,1, 0,1, /* rates 00..11 0 (increment by 0 or 1) */\n\t/* 1 */ 0,1, 0,1, 1,1, 0,1, /* rates 00..11 1 */\n\t/* 2 */ 0,1, 1,1, 0,1, 1,1, /* rates 00..11 2 */\n\t/* 3 */ 0,1, 1,1, 1,1, 1,1, /* rates 00..11 3 */\n\n\t/* 4 */ 1,1, 1,1, 1,1, 1,1, /* rate 12 0 (increment by 1) */\n\t/* 5 */ 1,1, 1,2, 1,1, 1,2, /* rate 12 1 */\n\t/* 6 */ 1,2, 1,2, 1,2, 1,2, /* rate 12 2 */\n\t/* 7 */ 1,2, 2,2, 1,2, 2,2, /* rate 12 3 */\n\n\t/* 8 */ 2,2, 2,2, 2,2, 2,2, /* rate 13 0 (increment by 2) */\n\t/* 9 */ 2,2, 2,4, 2,2, 2,4, /* rate 13 1 */\n\t/*10 */ 2,4, 2,4, 2,4, 2,4, /* rate 13 2 */\n\t/*11 */ 2,4, 4,4, 2,4, 4,4, /* rate 13 3 */\n\n\t/*12 */ 4,4, 4,4, 4,4, 4,4, /* rate 14 0 (increment by 4) */\n\t/*13 */ 4,4, 4,8, 4,4, 4,8, /* rate 14 1 */\n\t/*14 */ 4,8, 4,8, 4,8, 4,8, /* rate 14 2 */\n\t/*15 */ 4,8, 8,8, 4,8, 8,8, /* rate 14 3 */\n\n\t/*16 */ 8,8, 8,8, 8,8, 8,8, /* rates 15 0, 15 1, 15 2, 15 3 (increment by 8) */\n\t/*17 */ 16,16,16,16,16,16,16,16, /* rates 15 2, 15 3 for attack */\n\t/*18 */ 0,0, 0,0, 0,0, 0,0, /* infinity rates for attack and decay(s) */\n];\n\n_EG.rate_select = (function(){\n\tvar O = function(a){return (a*_EG.RATE_STEPS)|0;};\n\treturn [\t// env gen rates - 32+64 rates+32 RKS\n\t\t/* 32 infinite time rates (same as Rate 0) */\n\t\tO(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),\n\t\tO(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),\n\t\tO(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),\n\t\tO(18),O(18),O(18),O(18),O(18),O(18),O(18),O(18),\n\n\t\t/* rates 00-11 */\n\t\t/*\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\t*/\n\t\tO(18),O(18),O( 0),O( 0),\n\t\tO( 0),O( 0),O( 2),O( 2),   // Nemesis's tests\n\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\t\tO( 0),O( 1),O( 2),O( 3),\n\n\t\t/* rate 12 */\n\t\tO( 4),O( 5),O( 6),O( 7),\n\n\t\t/* rate 13 */\n\t\tO( 8),O( 9),O(10),O(11),\n\n\t\t/* rate 14 */\n\t\tO(12),O(13),O(14),O(15),\n\n\t\t/* rate 15 */\n\t\tO(16),O(16),O(16),O(16),\n\n\t\t/* 32 dummy rates (same as 15 3) */\n\t\tO(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),\n\t\tO(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),\n\t\tO(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16),\n\t\tO(16),O(16),O(16),O(16),O(16),O(16),O(16),O(16)\n\t];\n})();\n\n/*rate  0,    1,    2,   3,   4,   5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15*/\n/*shift 11,   10,   9,   8,   7,   6,  5,  4,  3,  2, 1,  0,  0,  0,  0,  0 */\n/*mask  2047, 1023, 511, 255, 127, 63, 31, 15, 7,  3, 1,  0,  0,  0,  0,  0 */\n_EG.rate_shift = (function(){\n\tvar O = function(a){return (a)|0;};\n\treturn [\t// env gen counter shifts - 32+64 rates+32 RKS\n\t\t/* 32 infinite time rates */\n\t\t/* O(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),\n\t\tO(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),\n\t\tO(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0),\n\t\tO(0),O(0),O(0),O(0),O(0),O(0),O(0),O(0), */\n\n\t\t/* fixed (should be the same as rate 0, even if it makes no difference since increment value is 0 for these rates) */\n\t\tO(11),O(11),O(11),O(11),O(11),O(11),O(11),O(11),\n\t\tO(11),O(11),O(11),O(11),O(11),O(11),O(11),O(11),\n\t\tO(11),O(11),O(11),O(11),O(11),O(11),O(11),O(11),\n\t\tO(11),O(11),O(11),O(11),O(11),O(11),O(11),O(11),\n\n\t\t/* rates 00-11 */\n\t\tO(11),O(11),O(11),O(11),\n\t\tO(10),O(10),O(10),O(10),\n\t\tO( 9),O( 9),O( 9),O( 9),\n\t\tO( 8),O( 8),O( 8),O( 8),\n\t\tO( 7),O( 7),O( 7),O( 7),\n\t\tO( 6),O( 6),O( 6),O( 6),\n\t\tO( 5),O( 5),O( 5),O( 5),\n\t\tO( 4),O( 4),O( 4),O( 4),\n\t\tO( 3),O( 3),O( 3),O( 3),\n\t\tO( 2),O( 2),O( 2),O( 2),\n\t\tO( 1),O( 1),O( 1),O( 1),\n\t\tO( 0),O( 0),O( 0),O( 0),\n\n\t\t/* rate 12 */\n\t\tO( 0),O( 0),O( 0),O( 0),\n\n\t\t/* rate 13 */\n\t\tO( 0),O( 0),O( 0),O( 0),\n\n\t\t/* rate 14 */\n\t\tO( 0),O( 0),O( 0),O( 0),\n\n\t\t/* rate 15 */\n\t\tO( 0),O( 0),O( 0),O( 0),\n\n\t\t/* 32 dummy rates (same as 15 3) */\n\t\tO( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),\n\t\tO( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),\n\t\tO( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),\n\t\tO( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0),O( 0)\n\t];\n})();\n\n_DT.tab = [\t// 4*32\n\t/* this is YM2151 and YM2612 phase increment data (in 10.10 fixed point format)*/\n\t/* FD=0 */\n\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\t/* FD=1 */\n\t0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2,\n\t2, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 8, 8, 8, 8,\n\t/* FD=2 */\n\t1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5,\n\t5, 6, 6, 7, 8, 8, 9,10,11,12,13,14,16,16,16,16,\n\t/* FD=3 */\n\t2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7,\n\t8 , 8, 9,10,11,12,13,14,16,17,19,20,22,22,22,22\n];\n\n\n/* OPN key frequency number -> key code follow table */\n/* fnum higher 4bit -> keycode lower 2bit */\nvar OPN = {\n\t\"fktable\":[0,0,0,0,0,0,0,1,2,3,3,3,3,3,3,3],\n};\n\nvar LFO = {\n\t/* 8 LFO speed parameters */\n\t/* each value represents number of samples that one LFO level will last for */\n\t\"samples_per_step\":[108, 77, 71, 67, 62, 44, 8, 5],\n\t/*There are 4 different LFO AM depths available, they are:\n\t  0 dB, 1.4 dB, 5.9 dB, 11.8 dB\n\t  Here is how it is generated (in EG steps):\n\n\t  11.8 dB = 0, 2, 4, 6, 8, 10,12,14,16...126,126,124,122,120,118,....4,2,0\n\t   5.9 dB = 0, 1, 2, 3, 4, 5, 6, 7, 8....63, 63, 62, 61, 60, 59,.....2,1,0\n\t   1.4 dB = 0, 0, 0, 0, 1, 1, 1, 1, 2,...15, 15, 15, 15, 14, 14,.....0,0,0\n\n\t  (1.4 dB is loosing precision as you can see)\n\n\t  It's implemented as generator from 0..126 with step 2 then a shift\n\t  right N times, where N is:\n\t    8 for 0 dB\n\t    3 for 1.4 dB\n\t    1 for 5.9 dB\n\t    0 for 11.8 dB\n\t*/\n\t\"ams_depth_shift\":[8,3,1,0],\n\t/*There are 8 different LFO PM depths available, they are:\n\t  0, 3.4, 6.7, 10, 14, 20, 40, 80 (cents)\n\n\t  Modulation level at each depth depends on F-NUMBER bits: 4,5,6,7,8,9,10\n\t  (bits 8,9,10 = FNUM MSB from OCT/FNUM register)\n\n\t  Here we store only first quarter (positive one) of full waveform.\n\t  Full table (lfo_pm_table) containing all 128 waveforms is build\n\t  at run (init) time.\n\n\t  One value in table below represents 4 (four) basic LFO steps\n\t  (1 PM step = 4 AM steps).\n\n\t  For example:\n\t   at LFO SPEED=0 (which is 108 samples per basic LFO step)\n\t   one value from \"lfo_pm_output\" table lasts for 432 consecutive\n\t   samples (4*108=432) and one full LFO waveform cycle lasts for 13824\n\t   samples (32*432=13824; 32 because we store only a quarter of whole\n\t            waveform in the table below)\n\t*/\n\t\"pm_output\":[\t// [7*8][8]\n\t\t/* 7 bits meaningful (of F-NUMBER), 8 LFO output levels per one depth (out of 32), 8 LFO depths */\n\t\t/* FNUM BIT 4: 000 0001xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 2 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 3 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 4 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 5 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 6 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 7 */ [0,   0,   0,   0,   1,   1,   1,   1],\n\n\t\t/* FNUM BIT 5: 000 0010xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 2 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 3 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 4 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 5 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 6 */ [0,   0,   0,   0,   1,   1,   1,   1],\n\t\t/* DEPTH 7 */ [0,   0,   1,   1,   2,   2,   2,   3],\n\n\t\t/* FNUM BIT 6: 000 0100xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 2 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 3 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 4 */ [0,   0,   0,   0,   0,   0,   0,   1],\n\t\t/* DEPTH 5 */ [0,   0,   0,   0,   1,   1,   1,   1],\n\t\t/* DEPTH 6 */ [0,   0,   1,   1,   2,   2,   2,   3],\n\t\t/* DEPTH 7 */ [0,   0,   2,   3,   4,   4,   5,   6],\n\n\t\t/* FNUM BIT 7: 000 1000xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 2 */ [0,   0,   0,   0,   0,   0,   1,   1],\n\t\t/* DEPTH 3 */ [0,   0,   0,   0,   1,   1,   1,   1],\n\t\t/* DEPTH 4 */ [0,   0,   0,   1,   1,   1,   1,   2],\n\t\t/* DEPTH 5 */ [0,   0,   1,   1,   2,   2,   2,   3],\n\t\t/* DEPTH 6 */ [0,   0,   2,   3,   4,   4,   5,   6],\n\t\t/* DEPTH 7 */ [0,   0,   4,   6,   8,   8, 0xa, 0xc],\n\n\t\t/* FNUM BIT 8: 001 0000xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   1,   1,   1,   1],\n\t\t/* DEPTH 2 */ [0,   0,   0,   1,   1,   1,   2,   2],\n\t\t/* DEPTH 3 */ [0,   0,   1,   1,   2,   2,   3,   3],\n\t\t/* DEPTH 4 */ [0,   0,   1,   2,   2,   2,   3,   4],\n\t\t/* DEPTH 5 */ [0,   0,   2,   3,   4,   4,   5,   6],\n\t\t/* DEPTH 6 */ [0,   0,   4,   6,   8,   8, 0xa, 0xc],\n\t\t/* DEPTH 7 */ [0,   0,   8, 0xc,0x10,0x10,0x14,0x18],\n\n\t\t/* FNUM BIT 9: 010 0000xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   2,   2,   2,   2],\n\t\t/* DEPTH 2 */ [0,   0,   0,   2,   2,   2,   4,   4],\n\t\t/* DEPTH 3 */ [0,   0,   2,   2,   4,   4,   6,   6],\n\t\t/* DEPTH 4 */ [0,   0,   2,   4,   4,   4,   6,   8],\n\t\t/* DEPTH 5 */ [0,   0,   4,   6,   8,   8, 0xa, 0xc],\n\t\t/* DEPTH 6 */ [0,   0,   8, 0xc,0x10,0x10,0x14,0x18],\n\t\t/* DEPTH 7 */ [0,   0,0x10,0x18,0x20,0x20,0x28,0x30],\n\n\t\t/* FNUM BIT10: 100 0000xxxx */\n\t\t/* DEPTH 0 */ [0,   0,   0,   0,   0,   0,   0,   0],\n\t\t/* DEPTH 1 */ [0,   0,   0,   0,   4,   4,   4,   4],\n\t\t/* DEPTH 2 */ [0,   0,   0,   4,   4,   4,   8,   8],\n\t\t/* DEPTH 3 */ [0,   0,   4,   4,   8,   8, 0xc, 0xc],\n\t\t/* DEPTH 4 */ [0,   0,   4,   8,   8,   8, 0xc,0x10],\n\t\t/* DEPTH 5 */ [0,   0,   8, 0xc,0x10,0x10,0x14,0x18],\n\t\t/* DEPTH 6 */ [0,   0,0x10,0x18,0x20,0x20,0x28,0x30],\n\t\t/* DEPTH 7 */ [0,   0,0x20,0x30,0x40,0x40,0x50,0x60]\n\t],\n\t/* all 128 LFO PM waveforms */\n\t/* 128 combinations of 7 bits meaningful (of F-NUMBER), 8 LFO depths, 32 LFO output levels per one depth */\n\t\"pm_table\":new Array(128*8*32)\n};\n\nOPN.CHAN = function(N){return N&0x3;};\nOPN.SLOT = function(N){return (N>>2)&0x3;};\n\n/* slot number */\nvar _SLOT = [0,2,1,3];\n\n/**** END GLOBALS ****/\n\n/**** FM STRUCTS based on genplus-gx ****/\nfunction FM_SLOT() {\n\tthis.DT = -1;\t// index into ym2612.OPN.ST.dt_tab, formerly INT32*\tdetune: dt_tab[DT]\n\tthis.KSR = 0;\t// UINT8\tkey scale rate: 3-KSR\n\tfunction _rate() {\n\t\tthis.ar = 0;\t// UINT32\tattack rate\n\t\tthis.d1r = 0;\t// UINT32\tdecay rate\n\t\tthis.d2r = 0;\t// UINT32\tsustain rate\n\t\tthis.rr = 0;\t// UINT32\trelease rate\n\t\tthis.ksr = 0;\t// UINT8\tkey scale rate: kcode>>(3-KSR)\n\t\tthis.mul = 1;\t// UINT32\tmultiple: ML_TABLE[ML]\n\t\tthis.init = function() {\n\t\t\tthis.ar = 0;\n\t\t\tthis.d1r = 0;\n\t\t\tthis.d2r = 0;\n\t\t\tthis.rr = 0;\n\t\t\tthis.ksr = 0;\n\t\t\tthis.mul = 1;\n\t\t};\n\t\tthis.toString = function(){return [\"MUL=\"+this.mul,\"KS=\"+this.ksr,\"AR=\"+this.ar,\"D1R=\"+this.d1r,\"D2R=\"+this.d2r,\"RR=\"+this.rr].join(',');};\n\t}\n\tthis.rate = new _rate();\n\t// phase generator\n\tthis.phase = 0;\t// UINT32\tphase counter\n\tthis.Incr = 0;\t// INT32\tphase step\n\t// envelope generator\n\tthis.state = 0;\t// UINT8\tphase type\n\tthis.tl = 0;\t// UINT32\ttotal level: TL<<3\n\tthis.volume = 0;\t// UINT32\tenvelope counter\n\tthis.sl = 0;\t// UINT32\tsustain level: sl_table[SL]\n\tthis.vol_out = 0;\t// UINT32\tcurrent output from EG (without AM from LFO)\n\tfunction _eg() {\n\t\tthis.ar=0;\t// UINT8\n\t\tthis.d1r=0;\t// UINT8\n\t\tthis.d2r=0;\t// UINT8\n\t\tthis.rr=0;\t// UINT8\n\t\tthis.init = function(){\n\t\t\tthis.ar=0;\t// UINT8\n\t\t\tthis.d1r=0;\t// UINT8\n\t\t\tthis.d2r=0;\t// UINT8\n\t\t\tthis.rr=0;\t// UINT8\n\t\t};\n\t}\n\tthis.eg = {\n\t\tsh:new _eg(),\t// state\n\t\tsel:new _eg(),\n\t\tinit:function(){this.sh.init();this.sel.init();}\n\t};\n\tthis.ssg = 0;\t// UINT8\tssg-eg waveform\n\tthis.ssgn = 0;\t// UINT8\tssg-eg negated output\n\tthis.key = 0;\t// UINT8\t0 = last key was KEY_OFF, 1 = KEY_ON\n\t// lfo\n\tthis.AMmask = 0;\t// UINT32\tAM enable flag\n\tthis.reset = function() {\n\t\tthis.Incr = -1;\n\t\tthis.key = 0;\n\t\tthis.phase = 0;\n\t\tthis.ssgn = 0;\n\t\tthis.state = _EG.OFF;\n\t\tthis.volume = _ENV.MAX_ATT_INDEX;\n\t\tthis.vol_out = _ENV.MAX_ATT_INDEX;\n\t\tthis.out[0] = 0;\n    this.out[1] = 0;\n\t};\n\tthis.debug = {\n\t\t\"dt1mul\":0, \"dt1\":0, \"mul\":0,\n\t\t\"tl\":0,\n\t\t\"ksar\":0, \"ks\":0, \"ar\":0,\n\t\t\"amd1r\":0, \"am\":0, \"d1r\":0,\n\t\t\"d2r\":0,\n\t\t\"slrr\":0, \"sl\":0, \"rr\":0\n\t};\n\tthis.debug.toString = function(){return [\n\t\t\"TL:\"+(this.tl),\n\t\t\"DT1:\"+this.dt1,\n\t\t\"MUL:\"+this.mul,\n\t\t\"KS:\"+this.ks,\"AR:\"+this.ar,\n\t\t\"AM:\"+this.am,\"D1R:\"+this.d1r,\n\t\t\"D2R:\"+this.d2r,\n\t\t\"SL:\"+(this.sl),\"RR:\"+this.rr\n\t].join(',');};\n\tthis.out = [0,0];\t// replace FM_CH.op1_out +neo\n\tthis.toString = function(){return \"OP{\"+this.debug.toString()+\"}\";};\n}\nfunction FM_CH() {\n\tthis.SLOT = [\t// four slots/ops\n\t\tnew FM_SLOT(),\n\t\tnew FM_SLOT(),\n\t\tnew FM_SLOT(),\n\t\tnew FM_SLOT()\n\t];\n\tthis.ALGO = 0;\t// UINT8\talgorithm\n\tthis.FB = 0;\t// UINT8\tfeedback shift\n\tthis.op1_out = [0,0];\t// INT32\top1 output for feedback (stereo)\n\tthis.connect = ['x','x','x','x'];\t// SLOT output pointers, formerly INT32*[4]\n\tthis.mem = {\n\t\tconnect:'mem',\t// INT32*\twhere to put the delayed sample (MEM)\n\t\tvalue:0\t// INT32\tdelated sample (MEM) value\n\t};\n\tthis.pms = 0;\t// INT32\tchannel PMS\n\tthis.ams = 0;\t// UINT8\tchannel AMS\n\tthis.fc = 0;\t// UINT32\tfnum,blk adjusted to sample rate\n\tthis.kcode = 0;\t// UINT8\tkey code\n\tthis.block_fnum = 0;\t// UINT32\tcurrent blk/fnum value for this slot\n\tthis.fn_h = 0;\t// replaces FM_ST.fn_h\n\tthis.outputs = {\n\t\t\"m1\":0,\n\t\t\"m2\":0,\n\t\t\"c1\":0,\n\t\t\"c2\":0,\n\t\t\"mem\":0,\n\t\t\"x\":0,\n\t\t\"out\":0\t// replaces out_fm[ch]\n\t};\n\tthis.canCSM = 0;\t// replaces hardcoded check against CH3\n\tthis.canDAC = 0;\t// replaces hardcoded check against CH6\n\tthis.muted = 0;\n\tthis.pan = [0,0];\t// replaces FM_OPN.pan\n\tthis.reset = function() {\n\t\tthis.mem.value = 0;\n    this.op1_out[0] = 0;\n    this.op1_out[1] = 0;\n\t\tvar s = this.SLOT.length; while (--s>-1) this.SLOT[s].reset();\n\t};\n\tthis.toString = function(){return \"CH{\"+[\n\t\t\"ALGO:\"+this.ALGO,\"FB:\"+this.FB,\n\t\t\"PMS:\"+this.pms,\"AMS:\"+this.ams,\n\t\t\"SLOTS[\"+this.SLOT.join(',')+\"]\"\n\t].join(',')+\"}\";};\n}\nfunction FM_ST(c, r) {\n\tthis.address = 0;\t// UINT16\taddress register\n\tthis.status = 0;\t// UINT8\tstatus flag\n\tthis.mode = 0;\t// UINT32\tCSM/3SLOT mode\n\t//this.fn_h = 0;\t// UINT8\tfreq latch\n\tthis.timer_base = 1;\n\tthis.TA = 0;\t// INT32\ttimer a value\n\tthis.TAL = 0;\t// INT32\ttimer a base\n\tthis.TAC = 0;\t// INT32\ttimer a counter\n\tthis.TB = 0;\t// INT32\ttimer b value\n\tthis.TBL = 0;\t// INT32\ttimer b base\n\tthis.TBC = 0;\t// INT32\ttimer b counter\n\tthis.dt_tab = [\t// INT32[8][32]\tdetune table\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32),\n\t\tnew Array(32)\n\t];\n\tthis.clock = c||7670448;\n\tthis.rate = r||44100;\n}\n\nfunction FM_3SLOT() {\n\tthis.fc = [0,0,0];\t// UINT32[3]\tfnum3,blk3 calculated\n\tthis.fn_h = 0;\t// UINT8\tfreq3 latch\n\tthis.kcode = [0,0,0];\t// UINT8[3]\tkey code\n\tthis.block_fnum = [0,0,0];\t// UINT32[3]\tcurrent fnum value for this slot\n\tthis.key_csm = 0;\t// UINT8\tCSM mode KEY_ON flag\n}\n\nfunction FM_OPN(c, r) {\n\tthis.ST = new FM_ST(c,r);\n\tthis.SL3 = new FM_3SLOT();\n\t//this.pan = new Array(6*2);\t// UINT[6*2]\tfm channels output masks (0xffffffff = enable)\n\tfunction _timer() {\n\t\tthis.cnt = 0;\n\t\tthis.timer = 0;\n\t\tthis.timer_add = 0;\t// vb\n\t\tthis.timer_overflow = 0;\t// vb unused for eg\n\t\tthis.init = function() {\n\t\t\tthis.cnt = 0;\t// current phase counter (UINT32 for eg, UINT8 for lfo)\n\t\t\tthis.timer = 0;\t// UINT32\n\t\t\tthis.timer_add = 0;\t// UINT32\tstep of timer\n\t\t\tthis.timer_overflow = 0;\t// UINT32\ttimer overflows every N samples\n\t\t};\n\t}\n\tthis.eg = new _timer();\n\tthis.lfo = new _timer();\n\tthis.lfo.AM = 0;\t// UINT32\tcurrent lfo AM step\n\tthis.lfo.PM = 0;\t// UINT32\tcurrent lfo PM step\n\tthis.fn = {\"table\":new Array(4096), \"max\":0};\n}\n\nfunction YMX(c,r) {\n\tthis.CH = [new FM_CH(), new FM_CH(), new FM_CH(), new FM_CH(), new FM_CH(), new FM_CH()];\n\tthis.CH[2].canCSM = 1;\n\tthis.CH[5].canDAC = 1;\n\tthis.dacen = 0;\t// UINT8\n\tthis.dacout = 0;\t// INT32\n\tthis.OPN = new FM_OPN(c,r);\n\tthis.toString = function(){return \"YM[\\n\"+this.CH.join(',\\n')+\"\\n]\";};\n}\n/**** END FM STRUCTS ****/\n\n/**** FM DEFS based on genplus-gx ****/\n/* current chip state */\n//_YM.m2 = 0; _YM.c1 = 0; _YM.c2 = 0;\t// INT32\tphase modulation input for ops 2,3,4\n//_YM.mem = 0;\t// INT32\tone sample delay memory\n//_YM.out_fm = [0,0,0,0,0,0,0,0];\t// INT32[8]\toutputs of working channels\t// REPLACED BY FM_CH.out\n_YM.bitmask = 0;\t//UINT32\tworking channels output bitmasking (DAC quantization)\n\nFM_SLOT.prototype.keyOn = function(x,csm) {\n\tif (!this.key&&!x.OPN.SL3.key_csm) {\n\t\tthis.phase = 0;\t/* restart Phase Generator */\n\t\tthis.ssgn = 0;\t/* reset SSG-EG inversion flag */\n\t\tif ((this.rate.ar+this.rate.ksr)<94)\t/*32+62*/\n\t\t\tthis.state = (this.volume<=_ENV.MIN_ATT_INDEX)?(this.sl===_ENV.MIN_ATT_INDEX?_EG.SUS:_EG.DEC):_EG.ATT;\n\t\telse {\n\t\t\tthis.volume = _ENV.MIN_ATT_INDEX;\t/* force attenuation level to 0 */\n\t\t\tthis.state = (this.sl===_ENV.MIN_ATT_INDEX)?_EG.SUS:_EG.DEC;\n\t\t}\n\t\t/* recalculate EG output */\n\t\tif ((this.ssg&0x08)>0&&(this.ssgn^(this.ssg&0x04))>0) this.vol_out = this.tl+((0x200-this.volume)&_ENV.MAX_ATT_INDEX);\n\t\telse this.vol_out = this.tl+(this.volume|0);\n\t}\n\tif (!csm) this.key = 1;\n};\nFM_CH.prototype.keyOn = function(x,s) {this.SLOT[s].keyOn(x,0);};\n\nFM_SLOT.prototype.keyOff = function(x,csm) {\n\tif ((csm&&!this.key)||(!csm&&this.key&&!x.OPN.SL3.key_csm)) {\n\t\tif (this.state>_EG.REL) {\n\t\t\tthis.state = _EG.REL;\t/* phase -> Release */\n\t\t\t/* SSG-EG specific update */\n\t\t\tif ((this.ssg&0x08)>0) {\n\t\t\t\t/* convert EG attenuation level */\n\t\t\t\tif ((this.ssgn^(this.ssg&0x04))>0) this.volume = (0x200-this.volume)|0;\n\t\t\t\t/* force EG attenuation level */\n\t\t\t\tif (this.volume>=0x200) {\n\t\t\t\t\tthis.volume = _ENV.MAX_ATT_INDEX;\n\t\t\t\t\tthis.state = _EG.OFF;\n\t\t\t\t}\n\t\t\t\tthis.vol_out = this.tl+(this.volume|0);\t/* recalculate EG output */\n\t\t\t}\n\t\t}\n\t}\n\tif (!csm) this.key = 0;\n};\nFM_CH.prototype.keyOff = function(x,s) {this.SLOT[s].keyOff(x,0);};\n\nFM_CH.prototype.keyOnCSM = function(x,s) {this.SLOT[s].keyOn(x,1);};\nFM_CH.prototype.keyOffCSM = function(x,s) {this.SLOT[s].keyOff(x,1);};\n\nFM_CH.prototype.keyControlCSM = function(x) {\n\tthis.keyOnCSM(_SLOT[0]);\n\tthis.keyOnCSM(_SLOT[1]);\n\tthis.keyOnCSM(_SLOT[2]);\n\tthis.keyOnCSM(_SLOT[3]);\n\tx.OPN.SL3.key_csm = 1;\n};\n\nfunction INTERNAL_TIMER_A(x) {\n\tif ((x.OPN.ST.mode&0x01)>0) {\n\t\tif (cfg.mode) x.OPN.ST.TAC -= x.OPN.ST.timer_base;\t// vb\n\t\telse --x.OPN.ST.TAC;\t// gpgx\n\t\tif (x.OPN.ST.TAC<=0) {\n\t\t\t/* set status (if enabled) */\n\t\t\tif ((x.OPN.ST.mode&0x04)>0) x.OPN.ST.status |= 0x01;\n\t\t\t/* reload the counter */\n\t\t\tif (cfg.mode&&x.OPN.ST.TAL) x.OPN.ST.TAC += x.OPN.ST.TAL;\t// vb\n\t\t\telse x.OPN.ST.TAC = x.OPN.ST.TAL;\t// gpgx\n\t\t\t/* CSM mode auto key on */\n\t\t\tif ((x.OPN.ST.mode & 0xC0)===0x80) x.CH[2].keyControlCSM();\n\t\t}\n\t}\n}\nfunction INTERNAL_TIMER_B(x, step) {\n\tif ((x.OPN.ST.mode & 0x02)>0) {\n\t\tif (cfg.mode) x.OPN.ST.TBC -= x.OPN.ST.timer_base*step;\t// vb\n\t\telse x.OPN.ST.TBC -= step;\t// gpgx\n\t\tif (x.OPN.ST.TBC <= 0) {\n\t\t\t/* set status (if enabled) */\n\t\t\tif ((x.OPN.ST.mode & 0x08)>0) x.OPN.ST.status |= 0x02;\n\t\t\t/* reload the counter */\n\t\t\tif (x.OPN.ST.TBL) x.OPN.ST.TBC += x.OPN.ST.TBL;\n\t\t\telse x.OPN.ST.TBC = x.OPN.ST.TBL;\n\t\t}\n\t}\n}\n\n/* OPN Mode Register Write */\nfunction set_timers(x,v) {\n\t/* b7 = CSM MODE */\n\t/* b6 = 3 slot mode */\n\t/* b5 = reset b */\n\t/* b4 = reset a */\n\t/* b3 = timer enable b */\n\t/* b2 = timer enable a */\n\t/* b1 = load b */\n\t/* b0 = load a */\n\tif (((x.OPN.ST.mode^v)&0xc0)>0) {\n\t\tx.CH[2].SLOT[_SLOT[0]].Incr = -1;\t// phase increment need to be recalculated\n\t\t// csm mode disabled and csm keyon active\n\t\tif (((v&0xc0)!==0x80)&&x.OPN.SL3.key_csm) {\n\t\t\t// csm mode keyoff\n\t\t\tx.CH[2].keyOffCSM(_SLOT[0]);\n\t\t\tx.CH[2].keyOffCSM(_SLOT[1]);\n\t\t\tx.CH[2].keyOffCSM(_SLOT[2]);\n\t\t\tx.CH[2].keyOffCSM(_SLOT[3]);\n\t\t\tx.OPN.SL3.key_csm = 0;\n\t\t}\n\t}\n\t// reload timers\n\tif ((v&1)&&!(x.OPN.ST.mode&1)) x.OPN.ST.TAC = x.OPN.ST.TAL;\n\tif ((v&2)&&!(x.OPN.ST.mode&2)) x.OPN.ST.TBC = x.OPN.ST.TBL;\n\t// reset timers flags\n\tx.OPN.ST.status &= ~v>>4;\n\tx.OPN.ST.mode = v;\n}\n\n/* set algorithm connection */\nFM_CH.prototype.setupConnection = function() {\n\tvar carrier = 'out';\n\tvar o = {m1:0, m2:2, c1:1, c2:3};\n\tswitch (this.ALGO) {\n\t\tcase 0:\n\t\t\t/* M1---C1---MEM---M2---C2---OUT */\n\t\t\tthis.connect[o.m1] = 'c1';\n\t\t\tthis.connect[o.c1] = 'mem';\n\t\t\tthis.connect[o.m2] = 'c2';\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'm2';\n\t\t\tthis.mem.connect = 'm2';\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\t/* M1------+-MEM---M2---C2---OUT */\n\t\t\t/*      C1-+                     */\n\t\t\tthis.connect[o.m1] = 'mem';\n\t\t\tthis.connect[o.c1] = 'mem';\n\t\t\tthis.connect[o.m2] = 'c2';\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'm2';\n\t\t\tthis.mem.connect = 'm2';\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t/* M1-----------------+-C2---OUT */\n\t\t\t/*      C1---MEM---M2-+          */\n\t\t\tthis.connect[o.m1] = 'c2';\n\t\t\tthis.connect[o.c1] = 'mem';\n\t\t\tthis.connect[o.m2] = 'c2';\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'm2';\n\t\t\tthis.mem.connect = 'm2';\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t/* M1---C1---MEM------+-C2---OUT */\n\t\t\t/*                 M2-+          */\n\t\t\tthis.connect[o.m1] = 'c1';\n\t\t\tthis.connect[o.c1] = 'mem';\n\t\t\tthis.connect[o.m2] = 'c2';\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'c2';\n\t\t\tthis.mem.connect = 'c2';\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t/* M1---C1-+-OUT */\n\t\t\t/* M2---C2-+     */\n\t\t\t/* MEM: not used */\n\t\t\tthis.connect[o.m1] = 'c1';\n\t\t\tthis.connect[o.c1] = carrier;\n\t\t\tthis.connect[o.m2] = 'c2';\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'mem';\n\t\t\tthis.mem.connect = 'mem';\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\t/*    +----C1----+     */\n\t\t\t/* M1-+-MEM---M2-+-OUT */\n\t\t\t/*    +----C2----+     */\n\t\t\tthis.connect[o.m1] = 'x';\n\t\t\tthis.connect[o.c1] = carrier;\n\t\t\tthis.connect[o.m2] = carrier;\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'm2';\n\t\t\tthis.mem.connect = 'm2';\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t/* M1---C1-+     */\n\t\t\t/*      M2-+-OUT */\n\t\t\t/*      C2-+     */\n\t\t\t/* MEM: not used */\n\t\t\tthis.connect[o.m1] = 'c1';\n\t\t\tthis.connect[o.c1] = carrier;\n\t\t\tthis.connect[o.m2] = carrier;\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'mem';\n\t\t\tthis.mem.connect = 'mem';\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\t/* M1-+     */\n\t\t\t/* C1-+-OUT */\n\t\t\t/* M2-+     */\n\t\t\t/* C2-+     */\n\t\t\t/* MEM: not used*/\n\t\t\tthis.connect[o.m1] = carrier;\n\t\t\tthis.connect[o.c1] = carrier;\n\t\t\tthis.connect[o.m2] = carrier;\n\t\t\t//if (mem!=='mem') this.connect[o[mem]] = 'mem';\n\t\t\tthis.mem.connect = 'mem';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (cfg.strict) throw new Error(\"CH::setup_connection - unsupported algorithm (\"+this.ALGO+\")\");\n\t\t\telse break;\n\t}\n\tthis.connect[3] = carrier;\n};\n\n/* set detune & multiple */\nFM_SLOT.prototype.set_det_mul = function(x,v) {\n\tthis.rate.mul = ((v&0x0f)>0)?((v&0x0f)<<1):1;\n\tthis.DT = (v>>4)&7;//x.OPN.ST.dt_tab[(v>>4)&7];\n\tthis.debug.dt1mul = v&0xff;\n\tthis.debug.dt1 = this.DT;\n\tthis.debug.mul = v&0x0f;\n};\nFM_CH.prototype.set_det_mul = function(x,s,v) {\n\tthis.SLOT[s].set_det_mul(x,v);\n\tthis.SLOT[_SLOT[0]].Incr = -1;\n};\n\n/* set total level */\nFM_SLOT.prototype.set_tl = function(v) {\n\tthis.debug.tl = (v&0x7f);\n\tthis.tl = (this.debug.tl)<<(_ENV.BITS-7);\t// 7-bit tl\n\t// recalculate eg output\n\tif ((this.ssg&0x08)>0&&((this.ssgn^(this.ssg&0x04))>0)&&this.state>_EG.REL)\n\t\tthis.vol_out = this.tl+(((0x200-this.volume)|0)&_ENV.MAX_ATT_INDEX);\n\telse\n\t\tthis.vol_out = this.tl+((this.volume)|0);\n};\nFM_CH.prototype.set_tl = function(s,v) {this.SLOT[s].set_tl(v);};\n\n/* set attack rate & key scale  */\nFM_SLOT.prototype.set_ar_ksr = function(v) {\n\tthis.debug.ksar = v&0xff;\n\tthis.debug.ks = v>>6;\n\tthis.debug.ar = v&0x1f;\n\tvar old_ksr = this.KSR|0;\n\tthis.rate.ar = ((this.debug.ar)>0)?32+((this.debug.ar)<<1):0;\n\tthis.KSR = 3-(this.debug.ks);\n\t/* Even if it seems unnecessary to do it here, it could happen that KSR and KC  */\n\t/* are modified but the resulted SLOT->ksr value (kc >> SLOT->KSR) remains unchanged. */\n\t/* In such case, Attack Rate would not be recalculated by \"refresh_fc_eg_slot\". */\n\t/* This fixes the intro of \"The Adventures of Batman & Robin\" (Eke-Eke)         */\n\tif ((this.rate.ar+this.rate.ksr)<94) {\t/*32+62*/\n\t\tvar q = (this.rate.ar+this.rate.ksr)|0;\n\t\tthis.eg.sh.ar = _EG.rate_shift[q];\n\t\tthis.eg.sel.ar = _EG.rate_select[q];\n\t}\n\telse {\t/* verified by Nemesis on real hardware (Attack phase is blocked) */\n\t\tthis.eg.sh.ar = 0;\n\t\tthis.eg.sel.ar = 18*_EG.RATE_STEPS;\n\t}\n\treturn this.KSR!==old_ksr;\n};\nFM_CH.prototype.set_ar_ksr = function(s,v) {if (this.SLOT[s].set_ar_ksr(v)) this.SLOT[_SLOT[0]].Incr = -1;};\n\n/* set decay rate */\nFM_SLOT.prototype.set_dr = function(v) {\n\tthis.debug.amd1r = v&0xff;\n\tthis.debug.am = v&0x80;\n\tthis.debug.d1r = v&0x1f;\n\tthis.rate.d1r = ((this.debug.d1r)>0)?32+((this.debug.d1r)<<1):0;\n\tvar q = (this.rate.d1r+this.rate.ksr)|0;\n\tthis.eg.sh.d1r = _EG.rate_shift[q];\n\tthis.eg.sel.d1r = _EG.rate_select[q];\n};\nFM_CH.prototype.set_dr = function(s,v) {this.SLOT[s].set_dr(v);};\n\n/* set sustain rate */\nFM_SLOT.prototype.set_sr = function(v) {\n\tthis.debug.d2r = v&0x1f;\n\tthis.rate.d2r = ((this.debug.d2r)>0)?32+((this.debug.d2r)<<1):0;\n\tvar q = (this.rate.d2r+this.rate.ksr)|0;\n\tthis.eg.sh.d2r = _EG.rate_shift[q];\n\tthis.eg.sel.d2r = _EG.rate_select[q];\n};\nFM_CH.prototype.set_sr = function(s,v) {this.SLOT[s].set_sr(v);};\n\n/* set release rate */\nFM_SLOT.prototype.set_sl_rr = function(v) {\n\tthis.debug.slrr = v&0xff;\n\tthis.debug.sl = (v>>4)&0x0f;\n\tthis.debug.rr = v&0x0f;\n\tthis.sl = _YM.sl[this.debug.sl];\n\t// check eg state changes\n\tif (this.state===_EG.DEC&&this.volume>=(this.sl|0)) this.state = _EG.SUS;\n\tthis.rate.rr = 34+((this.debug.rr)<<2);\n\tvar q = (this.rate.rr+this.rate.ksr)|0;\n\tthis.eg.sh.rr = _EG.rate_shift[q];\n\tthis.eg.sel.rr = _EG.rate_select[q];\n};\nFM_CH.prototype.set_sl_rr = function(s,v) {this.SLOT[s].set_sl_rr(v);};\n\n/* advance LFO to next sample */\nfunction advance_lfo(x) {\n\tvar _upd;\n\tif (cfg.mode) _upd = function(o) {\t// vb\n\t\twhile (o.lfo.timer>=o.lfo.timer_overflow) {\n\t\t\to.lfo.timer -= o.lfo.timer_overflow;\n\t\t\to.lfo.cnt = (o.lfo.cnt+1)&127;\t/* There are 128 LFO steps */\n\t\t\t/* triangle (inverted) */\n\t\t\t/* AM: from 126 to 0 step -2, 0 to 126 step +2 */\n\t\t\tif (o.lfo.cnt<64) o.lfo.AM = (o.lfo.cnt^63)<<1;\n\t\t\telse o.lfo.AM = (o.lfo.cnt&63)<<1;\n\t\t\to.lfo.PM = o.lfo.cnt>>2;\t/* PM works with 4 times slower clock */\n\t\t}\n\t};\n\telse _upd = function(o) {\t// gpgx\n\t\tif (o.lfo.timer>o.lfo.timer_overflow) {\n\t\t\to.lfo.timer = 0;\n\t\t\to.lfo.cnt = (o.lfo.cnt+1)&127;\t/* There are 128 LFO steps */\n\t\t\t/* triangle (inverted) */\n\t\t\t/* AM: from 126 to 0 step -2, 0 to 126 step +2 */\n\t\t\tif (o.lfo.cnt<64) o.lfo.AM = (o.lfo.cnt^63)<<1;\n\t\t\telse o.lfo.AM = (o.lfo.cnt&63)<<1;\n\t\t\to.lfo.PM = o.lfo.cnt>>2;\t/* PM works with 4 times slower clock */\n\t\t}\n\t};\n\tif (x.OPN.lfo.timer_overflow) {\t/* LFO enabled ? */\n\t\t/* increment LFO timer (every samples) */\n\t\tif (cfg.mode) x.OPN.lfo.timer += x.OPN.lfo.timer_add;\t// vb\n\t\telse ++x.OPN.lfo.timer;\t// gpgx\n\t\t/* when LFO is enabled, one level will last for 108, 77, 71, 67, 62, 44, 8 or 5 samples */\n\t\t_upd(x.OPN);\n\t}\n}\n\nFM_SLOT.prototype.advance_eg = function(eg_cnt) {\n\tswitch (this.state) {\n\t\tcase _EG.ATT:\t/* attack phase */\n\t\t\tif (!(eg_cnt&((1<<this.eg.sh.ar)-1))) {\n\t\t\t\tthis.volume += (~this.volume*(_EG.inc[this.eg.sel.ar+((eg_cnt>>this.eg.sh.ar)&7)]))>>4;\t/* update attenuation level */\n\t\t\t\t/* check phase transition*/\n\t\t\t\tif (this.volume<=_ENV.MIN_ATT_INDEX) {\n\t\t\t\t\tthis.volume = _ENV.MIN_ATT_INDEX;\n\t\t\t\t\tthis.state = (this.sl===_ENV.MIN_ATT_INDEX)?_EG.SUS:_EG.DEC;\t/* special case where SL=0 */\n\t\t\t\t}\n\t\t\t\t/* recalculate EG output */\n\t\t\t\tif ((this.ssg&0x08)>0&&(this.ssgn^(this.ssg&0x04))>0) this.vol_out = this.tl+(((0x200-this.volume)|0)&_ENV.MAX_ATT_INDEX);\t/* SSG-EG Output Inversion */\n\t\t\t\telse this.vol_out = this.tl+(this.volume|0);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase _EG.DEC:\t/* decay phase */\n\t\t\tif (!(eg_cnt&((1<<this.eg.sh.d1r)-1))) {\n\t\t\t\tif ((this.ssg&0x08)>0) {\t/* SSG EG type */\n\t\t\t\t\t/* update attenuation level */\n\t\t\t\t\tif (this.volume<0x200) {\n\t\t\t\t\t\tthis.volume += _EG.inc[this.eg.sel.d1r+((eg_cnt>>this.eg.sh.d1r)&7)]<<2;\n\t\t\t\t\t\t/* recalculate EG output */\n\t\t\t\t\t\tif ((this.ssgn^(this.ssg&0x04))>0) this.vol_out = this.tl+(((0x200-this.volume)|0)&_ENV.MAX_ATT_INDEX);\t/* SSG-EG Output Inversion */\n\t\t\t\t\t\telse this.vol_out = this.tl+(this.volume|0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.volume += (_EG.inc[this.eg.sel.d1r+((eg_cnt>>this.eg.sh.d1r)&7)]);\n\t\t\t\t\tthis.vol_out = this.tl+(this.volume|0);\t/* recalculate EG output */\n\t\t\t\t}\n\t\t\t\t/* check phase transition*/\n\t\t\t\tif (this.volume>=(this.sl|0)) this.state = _EG.SUS;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase _EG.SUS:\t/* sustain phase */\n\t\t\tif (!(eg_cnt&((1<<this.eg.sh.d2r)-1))) {\n\t\t\t\t/* SSG EG type */\n\t\t\t\tif ((this.ssg&0x08)>0) {\n\t\t\t\t\t/* update attenuation level */\n\t\t\t\t\tif (this.volume<0x200) {\n\t\t\t\t\t\tthis.volume += _EG.inc[this.eg.sel.d2r+((eg_cnt>>this.eg.sh.d2r)&7)]<<2;\n\t\t\t\t\t\t/* recalculate EG output */\n\t\t\t\t\t\tif ((this.ssgn^(this.ssg&0x04))>0) this.vol_out = this.tl+(((0x200-this.volume)|0)&_ENV.MAX_ATT_INDEX);\t/* SSG-EG Output Inversion */\n\t\t\t\t\t\telse this.vol_out = this.tl+(this.volume|0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t/* update attenuation level */\n\t\t\t\t\tthis.volume += (_EG.inc[this.eg.sel.d2r+((eg_cnt>>this.eg.sh.d2r)&7)]);\n\t\t\t\t\t/* check phase transition*/\n\t\t\t\t\tif (this.volume>=_ENV.MAX_ATT_INDEX) this.volume = _ENV.MAX_ATT_INDEX;\t/* do not change SLOT->state (verified on real chip) */\n\t\t\t\t\tthis.vol_out = this.tl+(this.volume|0);\t/* recalculate EG output */\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\tcase _EG.REL:\t/* release phase */\n\t\t\tif (!(eg_cnt&((1<<this.eg.sh.rr)-1))) {\n\t\t\t\t/* SSG EG type */\n\t\t\t\tif ((this.ssg&0x08)>0) {\n\t\t\t\t\t/* update attenuation level */\n\t\t\t\t\tif (this.volume<0x200) {\n\t\t\t\t\t\tthis.volume += _EG.inc[this.eg.sel.rr+((eg_cnt>>this.eg.sh.rr)&7)]<<2;\n\t\t\t\t\t\t/* check phase transition*/\n\t\t\t\t\t\tif (this.volume>=0x200) {\n\t\t\t\t\t\t\tthis.volume = _ENV.MAX_ATT_INDEX;\n\t\t\t\t\t\t\tthis.state = _EG.OFF;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t/* update attenuation level */\n\t\t\t\t\tthis.volume += (_EG.inc[this.eg.sel.rr+((eg_cnt>>this.eg.sh.rr)&7)]);\n\t\t\t\t\t/* check phase transition*/\n\t\t\t\t\tif (this.volume>=_ENV.MAX_ATT_INDEX) {\n\t\t\t\t\t\tthis.volume = _ENV.MAX_ATT_INDEX;\n\t\t\t\t\t\tthis.state = _EG.OFF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.vol_out = this.tl+(this.volume|0);\t/* recalculate EG output */\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (cfg.strict) throw new Error(\"FM_SLOT::advance_eg - unsupported state (\"+this.state+\")\");\n\t\t\telse break;\n\t}\n};\nFM_CH.prototype.advance_eg = function(eg_cnt) {var j = this.SLOT.length; while (--j>-1) this.SLOT[j].advance_eg(eg_cnt);};\nfunction advance_eg_channels(x, eg_cnt) {var i = x.CH.length; while (--i>-1) x.CH[i].advance_eg(eg_cnt);}\n\n/* SSG-EG update process */\n/* The behavior is based upon Nemesis tests on real hardware */\n/* This is actually executed before each samples */\nFM_SLOT.prototype.update_ssg_eg = function() {\n\t/* detect SSG-EG transition */\n\t/* this is not required during release phase as the attenuation has been forced to MAX and output invert flag is not used */\n\t/* if an Attack Phase is programmed, inversion can occur on each sample */\n\tif ((this.ssg&0x08)>0&&this.volume>=0x200&&this.state>_EG.REL) {\n\t\tif ((this.ssg&0x01)>0) {\t/* bit 0 = hold SSG-EG */\n\t\t\tif ((this.ssg&0x02)>0) this.ssgn = 4;\t/* set inversion flag */\n\t\t\tif (this.state!==_EG.ATT&&!(this.ssgn^(this.ssg&0x04))) this.volume = _ENV.MAX_ATT_INDEX;\t/* force attenuation level during decay phases */\n\t\t}\n\t\telse {\t/* loop SSG-EG */\n\t\t\t/* toggle output inversion flag or reset Phase Generator */\n\t\t\tif ((this.ssg&0x02)>0) this.ssgn ^= 4;\n\t\t\telse this.phase = 0;\n\t\t\t/* same as Key ON */\n\t\t\tif (this.state!==_EG.ATT) {\n\t\t\t\tif ((this.rate.ar+this.rate.ksr)<94)\t/*32+62*/\n\t\t\t\t\tthis.state = (this.volume<=_ENV.MIN_ATT_INDEX)?\n\t\t\t\t\t\t(this.sl===_ENV.MIN_ATT_INDEX?_EG.SUS:_EG.DEC):\n\t\t\t\t\t\t_EG.ATT;\n\t\t\t\telse {\t/* Attack Rate is maximal: directly switch to Decay or Sustain */\n\t\t\t\t\tthis.volume = _ENV.MIN_ATT_INDEX;\n\t\t\t\t\tthis.state = (this.sl===_ENV.MIN_ATT_INDEX)?_EG.SUS:_EG.DEC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* recalculate EG output */\n\t\tif ((this.ssgn^(this.ssg&0x04))>0) this.vol_out = this.tl+(((0x200-this.volume)|0)&_ENV.MAX_ATT_INDEX);\n\t\telse this.vol_out = this.tl+(this.volume|0);\n\t}\n};\nFM_CH.prototype.update_ssg_eg = function() {var j = this.SLOT.length; while (--j>-1) this.SLOT[j].update_ssg_eg();};\n//function update_ssg_eg_channels(x) {var i = x.CH.length; while (--i>-1) x.CH[i].update_ssg_eg();}\n\nFM_SLOT.prototype.update_phase_lfo = function(x, pms, block_fnum) {\n\tvar off = LFO.pm_table[(((block_fnum&0x7f0)>>4)<<8)+pms+x.OPN.lfo.PM];\n\tif (off) {\t/* LFO phase modulation active */\n\t\tif (this.DT<0) {\n\t\t\tconsole.log(\"FM_SLOT::update_phase_lfo - invalid DT\",this.DT);\n\t\t\tif (cfg.strict) throw new Error(\"FM_SLOT::update_phase_lfo - invalid DT=\"+this.DT);\n\t\t\telse return;\n\t\t}\n\t\tvar blk, kc, fc;\n\t\t/* there are 2048 FNUMs that can be generated using FNUM/BLK registers\n\t\t      but LFO works with one more bit of a precision so we really need 4096 elements */\n\t\tblock_fnum = off+(block_fnum<<1);\n\t\tblk = (block_fnum&0x7000)>>12;\n\t\tblock_fnum = block_fnum&0xfff;\n\t\tkc = (blk<<2)|OPN.fktable[block_fnum>>8];\t/* keyscale code */\n\t\t/* (frequency) phase increment counter */\n\t\tif (cfg.mode) {\t// vb\n\t\t\tfc = ((x.OPN.fn.table[block_fnum]>>(7-blk))+x.OPN.ST.dt_tab[this.DT][kc]);\n\t\t\tif (fc<0) fc += x.OPN.fn.max;\t/* (frequency) phase overflow (credits to Nemesis) */\n\t\t}\n\t\telse fc = (((block_fnum<<5)>>(7-blk))+x.OPN.ST.dt_tab[this.DT][kc])&_DT.MASK;\t// gpgx\n\t\tthis.phase +=(fc*this.rate.mul)>>1;\t/* update phase */\n\t}\n\telse this.phase += this.Incr;\t/* LFO phase modulation  = zero */\n};\nFM_SLOT.prototype.update_phase_lfo_precalc = function(x, fc, kc) {\n\tif (fc!==-1) {\n\t\tvar finc;\n\t\tif (cfg.mode) {\t// vb\n\t\t\tfinc = (fc+x.OPN.ST.dt_tab[this.DT][kc]);\n\t\t\tif (finc<0) finc += x.OPN.fn.max;\t/* (frequency) phase overflow (credits to Nemesis) */\n\t\t}\n\t\telse finc = (fc+x.OPN.ST.dt_tab[this.DT][kc])&_DT.MASK;\t// gpgx\n\t\tthis.phase += (finc*this.rate.mul)>>1;\t/* update phase */\n\t}\n\telse this.phase += this.Incr;\n};\nFM_CH.prototype.update_phase_lfo = function(x) {\n\tvar pms = this.pms, block_fnum = this.block_fnum;\n\t//var i = this.SLOT.length; while (--i>-1) this.SLOT[i].update_phase_lfo(x, pms, block_fnum);\n\tvar blk, kc, fc;\n\tvar off = LFO.pm_table[(((block_fnum&0x7f0)>>4)<<8)+pms+x.OPN.lfo.PM];\n\tif (off) {\n\t\tblock_fnum = off+(block_fnum<<1);\n\t\tblk = (block_fnum&0x7000)>>12;\n\t\tblock_fnum = block_fnum&0xfff;\n\t\tkc = (blk<<2)|OPN.fktable[block_fnum>>8];\t/* keyscale code */\n\t\tif (cfg.mode) {\t// vb\n\t\t\tfc = (x.OPN.fn.table[block_fnum]>>(7-blk));\n\t\t}\n\t\telse fc = ((block_fnum<<5)>>(7-blk));\n\t}\n\telse {\n\t\tfc = -1;\n\t}\n\tvar i = this.SLOT.length; while (--i>-1) this.SLOT[_SLOT[i]].update_phase_lfo_precalc(x, fc, kc);\n}\n\n/* update phase increment and envelope generator */\nFM_SLOT.prototype.refresh_fc_eg = function(x, fc, kc) {\n\tif (this.DT<0) {\n\t\tconsole.log(\"FM_SLOT::refresh_fc_eg - invalid DT\",this.DT);\n\t\tif (cfg.strict) throw new Error(\"FM_SLOT::refresh_fc_eg - invalid DT=\"+this.DT);\n\t\telse return;\n\t}\n\tif (cfg.debug>1) console.log(\"OPN.ST.dt_tab[\"+this.DT+\"][\"+kc+\"]\",x.OPN.ST.dt_tab[this.DT][kc]);\n\tfc += x.OPN.ST.dt_tab[this.DT][kc];\t/* add detune value */\n\t/* (frequency) phase overflow (credits to Nemesis) */\n\tif (cfg.mode) {if (fc<0) fc += x.OPN.fn.max;}\t// vb\n\telse fc &= _DT.MASK;\t// gpgx\n\tthis.Incr = (fc*this.rate.mul)>>1;\t/* (frequency) phase increment counter */\n\tkc = kc>>this.KSR;\t/* ksr */\n\tif (this.rate.ksr!==kc) {\n\t\tthis.rate.ksr = kc;\n\t\tvar q = (this.rate.ar+kc)|0;\n\t\tif ((q)<94) {\t/*32+62*/\t/* recalculate envelope generator rates */\n\t\t\tthis.eg.sh.ar = _EG.rate_shift[q];\n\t\t\tthis.eg.sel.ar = _EG.rate_select[q];\n\t\t}\n\t\telse {\t/* verified by Nemesis on real hardware (Attack phase is blocked) */\n\t\t\tthis.eg.sh.ar = 0;\n\t\t\tthis.eg.sel.ar = 18*_EG.RATE_STEPS;\n\t\t}\n\t\tq = (this.rate.d1r+kc)|0;\n\t\tthis.eg.sh.d1r = _EG.rate_shift[q];\n\t\tthis.eg.sel.d1r = _EG.rate_select[q];\n\t\tq = (this.rate.d2r+kc)|0;\n\t\tthis.eg.sh.d2r = _EG.rate_shift[q];\n\t\tthis.eg.sel.d2r = _EG.rate_select[q];\n\t\tq = (this.rate.rr+kc)|0;\n\t\tthis.eg.sh.rr = _EG.rate_shift[q];\n\t\tthis.eg.sel.rr = _EG.rate_select[q];\n\t}\n};\n/* update phase increment counters */\nFM_CH.prototype.refresh_fc_eg = function(x) {\n\tif (this.SLOT[_SLOT[0]].Incr===-1) {\n\t\tvar fc = this.fc|0, kc = this.kcode|0;\n\t\tif (cfg.debug>1) console.log(\"FM_CH::refresh_fc_eg\",fc,kc);\n\t\tvar i = this.SLOT.length; while (--i>-1) this.SLOT[_SLOT[i]].refresh_fc_eg(x, fc, kc);\n\t}\n};\n\nFM_SLOT.prototype.calcVol = function(AM){return (this.vol_out+(AM&this.AMmask))|0;};\n\nvar op_calc;\nif (cfg.mode) op_calc = function(phase, env, pm, fb) {\t// vb\n\tvar p = (env<<3)+_YM.sin[\n\t\t(((phase&~_YM.FREQ_MASK)+(fb?pm:pm<<15))>>_YM.FREQ_SH)&_SIN.MASK\n\t];\n\tif (p>=_TL.TAB_LEN) return 0;\n\treturn _TL.tab[p];\n};\nelse op_calc = function(phase, env, pm, fb) {\t// gpgx\n\tvar p = (env<<3)+_YM.sin[(fb?(phase+pm)>>_SIN.BITS:(phase>>_SIN.BITS)+(pm>>1))&_SIN.MASK];\n\tif (p>=_TL.TAB_LEN) return 0;\n\treturn _TL.tab[p];\n};\n\nFM_SLOT.prototype.calculate = function(inp, am, asFB) {\n\tvar eg_out = (this.vol_out+(am&this.AMmask))|0,//this.calcVol(am),\t// inline FM_SLOT.calcVol(am) for speed\n\t\tval = 0;\n\tif (asFB) {\n\t\tvar o = (this.out[0]+this.out[1])|0;\n\t\tthis.out[0] = this.out[1]|0;\n\t\tval = this.out[0]|0;\n\t\tif (eg_out<_ENV.QUIET) {\n\t\t\tif (!inp) o = 0;\n\t\t\tthis.out[1] = op_calc(this.phase, eg_out, (o<<inp), 1);\n\t\t}\n\t\telse this.out[1] = 0;\n\t}\n\telse if (eg_out<_ENV.QUIET) {\n\t\tthis.out[0] = op_calc(this.phase, eg_out, inp, 0);\n\t\tval = this.out[0]|0;\n\t}\n\telse val = this.out[0] = 0;\n\treturn val;\n};\nFM_CH.prototype.calculate = function(x) {\n\n\tvar AM = x.OPN.lfo.AM>>this.ams;\n\t//if (this.muted) return;\n\tvar val;\n\tvar i, outs = ['x','c1','m2','c2'];\n\tthis.outputs.m2 = 0;\n  this.outputs.c1 = 0;\n  this.outputs.c2 = 0;\n  this.outputs.mem = 0;\n  this.outputs.x = 0;\n\tthis.outputs[this.mem.connect] = this.mem.value;\t/* restore delayed sample (MEM) value to m2 or c2 */\n\t//console.log(\"CH::calculate\",this.connect,this.mem);\n\t/* SLOT 1 */\n\ti = 0; val = this.SLOT[_SLOT[i]].calculate(this.FB, AM, 1);\n\tif (val!==0) {\n\t\tif (this.connect[i]==='x') {\n      this.outputs.x = val;\n      this.outputs.mem = val;\n      this.outputs.c1 = val;\n      this.outputs.c2 = val;\t// algorithm 5\n    }\n\t\telse\n      this.outputs[this.connect[i]] += val;\n\t}\n\t/* SLOT 3 */\n\ti = 2; val = this.SLOT[_SLOT[i]].calculate(this.outputs[outs[i]], AM, 0);\n\tif (val!==0) {\n\t\tif (this.connect[i]==='x') {}\n\t\telse this.outputs[this.connect[i]] += val;\n\t}\n\t/* SLOT 2 */\n\ti = 1; val = this.SLOT[_SLOT[i]].calculate(this.outputs[outs[i]], AM, 0);\n\tif (val!==0) {\n\t\tif (this.connect[i]==='x') {}\n\t\telse this.outputs[this.connect[i]] += val;\n\t}\n\t/* SLOT 4 */\n\ti = 3; val = this.SLOT[_SLOT[i]].calculate(this.outputs[outs[i]], AM, 0);\n\tif (val!==0) {\n\t\tif (this.connect[i]==='x') {}\n\t\telse this.outputs[this.connect[i]] += val;\n\t}\n\tthis.mem.value = this.outputs.mem|0;\t/* store current MEM */\n\tif (this.pms) {\t/* update phase counters AFTER output calculations */\n\t\tif ((x.OPN.ST.mode&0xC0)>0&&this.canCSM) {\t/* add support for 3 slot mode */\n\t\t\tthis.SLOT[_SLOT[0]].update_phase_lfo(x, this.pms, x.OPN.SL3.block_fnum[1]);\n\t\t\tthis.SLOT[_SLOT[1]].update_phase_lfo(x, this.pms, x.OPN.SL3.block_fnum[2]);\n\t\t\tthis.SLOT[_SLOT[2]].update_phase_lfo(x, this.pms, x.OPN.SL3.block_fnum[0]);\n\t\t\tthis.SLOT[_SLOT[3]].update_phase_lfo(x, this.pms, this.block_fnum);\n\t\t}\n\t\telse this.update_phase_lfo(x);\n\t}\n\telse {\t/* no LFO phase modulation */\n\t\tthis.SLOT[_SLOT[0]].phase += this.SLOT[_SLOT[0]].Incr;\n\t\tthis.SLOT[_SLOT[1]].phase += this.SLOT[_SLOT[1]].Incr;\n\t\tthis.SLOT[_SLOT[2]].phase += this.SLOT[_SLOT[2]].Incr;\n\t\tthis.SLOT[_SLOT[3]].phase += this.SLOT[_SLOT[3]].Incr;\n\t}\n};\n\n/* write a OPN mode register 0x20-0x2f */\nOPN.WriteMode = function(x,r,v) {\n\tv = v&0xff;\n  // eslint-disable-next-line\n\tswitch (r) {\n\t\tcase 0x21: break;\t// test mode\n\t\tcase 0x22:\t/* LFO FREQ (YM2608/YM2610/YM2610B/ym2612) */\n\t\t\tif (v&8) {\t/* LFO enabled ? */\n\t\t\t\tif (cfg.mode) x.OPN.lfo.timer_overflow = LFO.samples_per_step[v&7]<<_YM.LFO_SH;\t// vb\n\t\t\t\telse x.OPN.lfo.timer_overflow = LFO.samples_per_step[v&7];\t// gpgx\n\t\t\t}\n\t\t\telse {\t/* hold LFO waveform in reset state */\n\t\t\t\tx.OPN.lfo.timer_overflow = 0;\n\t\t\t\tx.OPN.lfo.timer = 0;\n\t\t\t\tx.OPN.lfo.cnt = 0;\n\t\t\t\tx.OPN.lfo.AM = 126;\n\t\t\t\tx.OPN.lfo.PM = 0;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0x24:\t/* timer A High 8*/\n\t\t\tx.OPN.ST.TA = (x.OPN.ST.TA&0x03)|(((v)|0)<<2);\n\t\t\tx.OPN.ST.TAL = (1024-x.OPN.ST.TA);\n\t\t\tif (cfg.mode) x.OPN.ST.TAL <<= _YM.TIMER_SH;\t// vb\n\t\t\tbreak;\n\t\tcase 0x25:\t/* timer A Low 2*/\n\t\t\tx.OPN.ST.TA = (x.OPN.ST.TA&0x3fc)|(v&3);\n\t\t\tx.OPN.ST.TAL = (1024-x.OPN.ST.TA);\n\t\t\tif (cfg.mode) x.OPN.ST.TAL <<= _YM.TIMER_SH;\t// vb\n\t\t\tbreak;\n\t\tcase 0x26:\t/* timer B */\n\t\t\tx.OPN.ST.TB = v;\n\t\t\tif (cfg.mode) x.OPN.ST.TBL = (256-v)<<(_YM.TIMER_SH+4);\t// vb\n\t\t\telse x.OPN.ST.TBL = (256-v)<<4;\t// gpgx\n\t\t\tbreak;\n\t\tcase 0x27:\t/* mode, timer control */\n\t\t\tset_timers(x,v);\n\t\t\tbreak;\n\t\tcase 0x28:\t/* key on / off */\n\t\t\tvar c = v&0x03; if (c===3) break;\n\t\t\tif (v&0x04) c += 3;\t/* CH 4-6 */\n\t\t\t(function(ch){\n\t\t\t\tif (v&0x10) ch.keyOn(x,_SLOT[0]); else ch.keyOff(x,_SLOT[0]);\n\t\t\t\tif (v&0x20) ch.keyOn(x,_SLOT[1]); else ch.keyOff(x,_SLOT[1]);\n\t\t\t\tif (v&0x40) ch.keyOn(x,_SLOT[2]); else ch.keyOff(x,_SLOT[2]);\n\t\t\t\tif (v&0x80) ch.keyOn(x,_SLOT[3]); else ch.keyOff(x,_SLOT[3]);\n\t\t\t})(x.CH[c]);\n\t\t\tbreak;\n\n\t}\n};\n\n/* write a OPN register (0x30-0xff) */\nOPN.WriteReg = function(x,r,v) {\n\tv = v&0xff;\n\tvar c = OPN.CHAN(r),\n\t\tsl = OPN.SLOT(r);\n\tif (c>=3) {\t/* 0xX3,0xX7,0xXB,0xXF */\n\t\tif (cfg.strict) throw new Error(\"OPN_Write - unsupported channel \"+c+' or slot '+sl+' from {$'+r.toString(16)+',$'+v.toString(16)+'}');\t// 0x?3, 0x?7, 0x?B, 0x?F\n\t\telse return;\n\t}\n\tif (r>=0x100) c += 3;\n\n// eslint-disable-next-line\n\tswitch (r&0xf0) {\n\t\tcase 0x30:\t/* DET , MUL */\n\t\t\tx.CH[c].set_det_mul(x, sl, v);\n\t\t\tbreak;\n\t\tcase 0x40:\t/* TL */\n\t\t\tx.CH[c].set_tl(sl, v);\n\t\t\tbreak;\n\t\tcase 0x50:\t/* KS, AR */\n\t\t\tx.CH[c].set_ar_ksr(sl, v);\n\t\t\tbreak;\n\t\tcase 0x60:\t/* bit7 = AM ENABLE, DR */\n\t\t\tx.CH[c].set_dr(sl, v);\n\t\t\tx.CH[c].SLOT[sl].AMmask = (v&0x80)?~0:0;\n\t\t\tbreak;\n\t\tcase 0x70:\t/*     SR */\n\t\t\tx.CH[c].set_sr(sl, v);\n\t\t\tbreak;\n\t\tcase 0x80:\t/* SL, RR */\n\t\t\tx.CH[c].set_sl_rr(sl, v);\n\t\t\tbreak;\n\t\tcase 0x90:\t/* SSG-EG */\n\t\t\t(function(S){\n\t\t\t\tS.ssg = v&0x0f;\n\t\t\t\t/* recalculate EG output */\n\t\t\t\tif (S.state>_EG.REL) {\n\t\t\t\t\tif ((S.ssg&0x08)>0&&(S.ssgn^(S.ssg&0x04))>0)\n\t\t\t\t\t\tS.vol_out = S.tl+(((0x200-S.volume)|0)&_ENV.MAX_ATT_INDEX);\n\t\t\t\t\telse\n\t\t\t\t\t\tS.vol_out = S.tl+(S.volume|0);\n\t\t\t\t}\n\t\t\t})(x.CH[c].SLOT[sl]);\n\t\t\tbreak;\n\t\tcase 0xa0:\n\t\t\tvar fn, blk;\n      // eslint-disable-next-line\n\t\t\tswitch (sl) {\n\t\t\t\tcase 0:\t/* 0xa0-0xa2 : FNUM1 */\n\t\t\t\t\t//fn = ((x.OPN.ST.fn_h&7)<<8)+v;\t// old\n\t\t\t\t\t//blk = (x.OPN.ST.fn_h>>3)&0xff;\t// old\n\t\t\t\t\tfn = ((x.CH[c].fn_h&7)<<8)+v;\n\t\t\t\t\tblk = (x.CH[c].fn_h>>3)&0xff;\n\t\t\t\t\tx.CH[c].kcode = (blk<<2)|OPN.fktable[fn>>7];\t/* keyscale code */\n\t\t\t\t\t/* phase increment counter */\n\t\t\t\t\tif (cfg.mode) x.CH[c].fc = x.OPN.fn.table[fn<<1]>>(7-blk);\t// vb\n\t\t\t\t\telse x.CH[c].fc = (fn<<6)>>(7-blk);\t// gpgx\n\t\t\t\t\tx.CH[c].block_fnum = (blk<<11)|fn;\t/* store fnum in clear form for LFO PM calculations */\n\t\t\t\t\tx.CH[c].SLOT[_SLOT[0]].Incr = -1;\n\t\t\t\t\tif (cfg.debug>2) console.log('block_fnum=x',x.CH[c].block_fnum.toString(16),' kcode=',x.CH[c].kcode.toString(16),' fc=',x.CH[c].fc.toString(16));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\t/* 0xa4-0xa6 : FNUM2,BLK */\n\t\t\t\t\t//x.OPN.ST.fn_h = (v&0x3f)|0;\t// old\n\t\t\t\t\tx.CH[c].fn_h = (v&0x3f)|0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\t/* 0xa8-0xaa : 3CH FNUM1 */\n\t\t\t\t\tif (r<0x100) {\n\t\t\t\t\t\tfn = ((x.OPN.SL3.fn_h&7)<<8)+v;\n\t\t\t\t\t\tblk = x.OPN.SL3.fn_h>>3;\n\t\t\t\t\t\tx.OPN.SL3.kcode[c] = (blk<<2)|OPN.fktable[fn>>7];\t/* keyscale code */\n\t\t\t\t\t\t/* phase increment counter */\n\t\t\t\t\t\tif (cfg.mode) x.OPN.SL3.fc[c] = x.OPN.fn.table[fn<<1]>>(7-blk);\t// vb\n\t\t\t\t\t\telse x.OPN.SL3.fc[c] = (fn<<6)>>(7-blk);\t// gpgx\n\t\t\t\t\t\tx.OPN.SL3.block_fnum[c] = (blk<<11)|fn;\n\t\t\t\t\t\tx.CH[2].SLOT[_SLOT[0]].Incr = -1;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\t/* 0xac-0xae : 3CH FNUM2,BLK */\n\t\t\t\t\tif (r<0x100) x.OPN.SL3.fn_h = v&0x3f;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 0xb0:\n    // eslint-disable-next-line \n\t\t\tswitch (sl) {\n\t\t\t\tcase 0:\t/* 0xb0-0xb2 : FB,ALGO */\n\t\t\t\t\tvar fb = (v>>3)&7;\n\t\t\t\t\tx.CH[c].ALGO = v&7;\n\t\t\t\t\tif (cfg.mode) x.CH[c].FB =  fb?fb+6:0;\t// vb\n\t\t\t\t\telse x.CH[c].FB =  fb;\t// gpgx\n\t\t\t\t\t//console.log(\"C[\",c,']=',x.CH[c].ALGO,','+x.CH[c].FB);\n\t\t\t\t\tx.CH[c].setupConnection();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\t/* 0xb4-0xb6 : L , R , AMS , PMS */\n\t\t\t\t\tx.CH[c].pms = (v&7)<<5;\t /* b0-2 PMS */ /* CH->pms = PM depth * 32 (index in lfo_pm_table) */\n\t\t\t\t\tx.CH[c].ams = LFO.ams_depth_shift[(v>>4)&0x03];\t/* b4-5 AMS */\n\t\t\t\t\t/* PAN :  b7 = L, b6 = R */\n\t\t\t\t\t// TODO: merge pan[] into FM_CH\n\t\t\t\t\tx.CH[c].pan[0] = v&0x80?_YM.bitmask:0;\t// new method\n\t\t\t\t\tx.CH[c].pan[1] = v&0x40?_YM.bitmask:0;\t// new method\n\t\t\t\t\t//x.OPN.pan[(c<<1)+0] = v&0x80?_YM.bitmask:0;\t// old method\n\t\t\t\t\t//x.OPN.pan[(c<<1)+1] = v&0x40?_YM.bitmask:0;\t// old method\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\t}\n};\n\n\nfunction reset_channels(x, num) {if (num>x.CH.length) num = x.CH.length; while (--num>-1) x.CH[num].reset();}\n\n/* prescaler set (and make time tables) */\nOPN.SetPrescaler = function(x, r) {\n\tx.ratio = r||144;\n\tx.OPN.ST.scale = (x.OPN.ST.clock/x.OPN.ST.rate)/x.ratio;\n\tif (cfg.debug) console.log(\"init_timetables\",x.OPN.ST.clock,x.OPN.ST.rate,x.ratio,x.OPN.ST.scale);\n\t// init_timetables\n\tvar d, i, q;\n\tvar z = x.OPN.ST.scale*(1<<(_YM.FREQ_SH-10));\t/* -10 because chip works with 10.10 fixed point, while we use 16.16 */\t// vb\n\t/* build DETUNE table */\n\tfor (d=0; d<4; ++d) {\n\t\tfor (i=0; i<32; ++i) {\n\t\t\tq = _DT.tab[(d<<5)+i];\t// gpgx\n\t\t\tif (cfg.mode) q *= z;\t// vb\n\t\t\tx.OPN.ST.dt_tab[d][i] = q|0;\n\t\t\tx.OPN.ST.dt_tab[d+4][i] = -x.OPN.ST.dt_tab[d][i];\n\t\t}\n\t}\n\t//if (cfg.debug>2) console.log(\"init_timetables dt_tab\",ym.OPN.ST.dt_tab);\n\t/* there are 2048 FNUMs that can be generated using FNUM/BLK registers\n\t  but LFO works with one more bit of a precision so we really need 4096 elements */\n\t/* calculate fnumber -> increment counter table */\n\t/* freq table for octave 7 */\n\t/* OPN phase increment counter = 20bit */\n\t/* the correct formula is : F-Number = (144 * fnote * 2^20 / M) / 2^(B-1) */\n\t/* where sample clock is  M/144 */\n\t/* this means the increment value for one clock sample is FNUM * 2^(B-1) = FNUM * 64 for octave 7 */\n\t/* we also need to handle the ratio between the chip frequency and the emulated frequency (can be 1.0)  */\n\tq = 32.0*z;\n  i = 4096;\n  while (--i>-1) {x.OPN.fn.table[i] = (i*q)|0;}\t// vb\n\tx.OPN.fn.max = (0x20000*z)|0;\t/* maximal frequency is required for Phase overflow calculation, register size is 17 bits (Nemesis) */\t// vb\n\tx.OPN.eg.timer_add = (x.OPN.ST.scale*(1<<_YM.EG_SH))|0;\t// vb\n\tx.OPN.eg.timer_overflow = (3)*(1<<_YM.EG_SH);\t/* EG is updated every 3 samples */\t// vb\n\tx.OPN.lfo.timer_add = (x.OPN.ST.scale*(1<<_YM.LFO_SH))|0;\t/* LFO timer increment (every samples) */\t// vb\n\tx.OPN.ST.timer_base = (x.OPN.ST.scale*(1<<_YM.TIMER_SH))|0;\t/* Timers increment (every samples) */\t// vb\n};\n\n/* initialize generic tables */\nfunction init_tables(ym) {\n\tif (cfg.debug) console.log(\"init_tables\",ym.CH.length);\n\tvar d, i, x;\t// signed int\n\tvar n;\t// signed int\n\tvar o, m;\t// double\n\tvar q, z;\n\tvar PI = Math.PI, LOG = Math.log, POW = Math.pow, SIN = Math.sin;\n\t/* build Linear Power Table */\n\tvar tmp = (_ENV.STEP/32.0), sh = (1<<16), rl2 = _TL.RES_LEN<<1;\n\tfor (x=0; x<_TL.RES_LEN; ++x) {\n\t\tm = sh/POW(2, (x+1)*tmp);\n\t\t//m = m|0;\t// m = Math.floor(m);\t// extraneous, folded into next calculation +neo\n\t\t/* we never reach (1<<16) here due to the (x+1) */\n\t\t/* result fits within 16 bits at maximum */\n\t\t//n = m|0;\t/* 16 bits here */\n\t\t//n >>= 4;\t/* 12 bits here */\n\t\tn = (m|0)>>4;\n\t\tif (n&1) n = (n>>1)+1;\t/* round to nearest */\n\t\telse n = n>>1;\n\t\t/* 11 bits here (rounded) */\n\t\tn <<= 2;\t/* 13 bits here (as in real chip) */\n\t\tz = x<<1;\t/* 14 bits (with sign bit) */\n\t\t_TL.tab[z+0] = n;\n\t\t_TL.tab[z+1] = -n;\n\t\t/* one entry in the 'Power' table use the following format, xxxxxyyyyyyyys with:            */\n\t\t/*        s = sign bit                                                                      */\n\t\t/* yyyyyyyy = 8-bits decimal part (0-TL_RES_LEN)                                            */\n\t\t/* xxxxx    = 5-bits integer 'shift' value (0-31) but, since Power table output is 13 bits, */\n\t\t/*            any value above 13 (included) would be discarded.                             */\n\t\tfor (i=1; i<13; ++i) {\n\t\t\tq = (z+0+i*rl2)|0;\n\t\t\t_TL.tab[q] = _TL.tab[z]>>i;\n\t\t\t_TL.tab[q+1] = -_TL.tab[q];\n\t\t}\n\t}\n\t//console.log(\"TL_TABLE\",_TL.tab.join(\", \"));\n\t/* build Logarithmic Sinus table */\n\tq = PI/_SIN.LEN;\n  z = 8.0/LOG(2.0);\n  tmp = 2.0*4/_ENV.STEP;\n  for (i=0; i<_SIN.LEN; ++i) {\t/* non-standard sinus */\n\t\tm = SIN(((i<<1)+1.0)*q);\t/* checked against the real chip */\n\t\t/* we never reach zero here due to ((i*2)+1) */\n\t\t/* convert to 'decibels' */\n\t\tif (m>0.0) o = LOG(1.0/m)*z;\n\t\telse o = LOG(-1.0/m)*z;\n\t\t//o = o/(_ENV.STEP/4);\t// folded into next calculation +neo\n\t\tn = (o*tmp)|0; //n = (2.0*o)|0;\n\t\tif (n&1) n = (n>>1)+1;\t/* round to nearest */\n\t\telse n = n>>1;\n\t\t_YM.sin[i] = (n<<1)+(m>=0.0?0:1);\t/* 13-bits (8.5) value is formatted for above 'Power' table */\n\t}\n\t//console.log(\"SIN_TAB\",_YM.sin.join(\", \"));\n\t/* build LFO PM modulation table */\n\tfor (i=0; i<8; ++i) {\t/* 8 PM depths */\n\t\tfor (n=0; n<128; ++n) {\t/* 7 bits meaningful of F-NUMBER */\n\t\t\tfor (x=0; x<8; ++x) {\n\t\t\t\tz = 0;\n\t\t\t\tfor (o=0; o<7; ++o) {\t/* 7 bits */\n\t\t\t\t\tif ((n&(1<<o))>0) {\t/* only if bit \"bit_tmp\" is set */\n\t\t\t\t\t\tz += LFO.pm_output[(o<<3)+i][x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* 32 steps for LFO PM (sinus) */\n\t\t\t\td = (n<<8)+(i<<5);\t// fnum*32*8 + i*32\n\t\t\t\tLFO.pm_table[d+x+0] = z;\n\t\t\t\tLFO.pm_table[d+(x^7)+8] = z;\n\t\t\t\tLFO.pm_table[d+x+16] = -z;\n\t\t\t\tLFO.pm_table[d+(x^7)+24] = -z;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**** END FM DEFS ****/\n\n/**** YM2612 API based on genplus-gx ****/\n\n/* initialize ym2612 emulator */\nY.prototype.init = function(clock,rate) {\n\tif (cfg.debug) console.log(\"OPN::init(\"+clock+','+rate+\")\");\n\tif (!this.chip) this.chip = new YMX(clock, rate);\n\telse {\n    this.chip.ST.clock = clock||7670448;\n    this.chip.ST.rate = rate||44100;}\n\tthis.ratio = 144;\t/* chip is running a VCLK / 144 = MCLK / 7 / 144 */\n\tthis.interval = cfg.mode;\n\tthis.start = 0;\n\tthis.count = 0;\n\tinit_tables(this.chip);\n};\n/* reset OPN registers */\nY.prototype.reset = function() {\n\tif (cfg.debug) console.log(\"OPN::reset\");\n\t(function(x){\n\t\tvar i;\n\t\tOPN.SetPrescaler(x, 144);\t/* YM2612 prescaler is fixed to 1/6, one sample (6 mixed channels) is output for each 24 FM clocks */\n\t\tx.OPN.eg.timer = 0;\n\t\tx.OPN.eg.cnt = 0;\n\t\tx.OPN.lfo.timer_overflow = 0;\n\t\tx.OPN.lfo.timer = 0;\n\t\tx.OPN.lfo.cnt = 0;\n\t\tx.OPN.lfo.AM = 126;\n\t\tx.OPN.lfo.PM = 0;\n\t\tx.OPN.ST.TAC = 0;\n\t\tx.OPN.ST.TBC = 0;\n\t\tx.OPN.SL3.key_csm = 0;\n\t\tx.dacen = 0;\n\t\tx.dacout = 0;\n\t\tset_timers(x, 0x30);\n\t\tx.OPN.ST.TB = 0;\n\t\tx.OPN.ST.TA = 0;\n\t\tif (cfg.mode) {\t// vb\n\t\t\tx.OPN.ST.TBL = 256<<(_YM.TIMER_SH+4);\n\t\t\tx.OPN.ST.TAL = 1024<<(_YM.TIMER_SH);\n\t\t}\n\t\telse {\t// gpgx\n\t\t\tx.OPN.ST.TBL = 256<<4;\n\t\t\tx.OPN.ST.TAL = 1024;\n\t\t}\n\t\treset_channels(x, 6);\n\t\t//for (i=0; i<6; ++i) {if (i!=0) x.CH[i].muted = 1;}\n\t\ti = 0xb6; while (i>=0xb4) {\n\t\t\tif ((i&3)!==3){\n\t\t\t\tOPN.WriteReg(x, i, 0xc0);\n\t\t\t\tOPN.WriteReg(x, i|0x100, 0xc0);\n      }\n\t\t\t--i;\n\t\t}\n\t\ti = 0xb2; while (i>=30) {\n\t\t\tif ((i&3)!==3){\n\t\t\t\tOPN.WriteReg(x, i, 0);\n\t\t\t\tOPN.WriteReg(x, i|0x100, 0);\n      }\n\t\t\t--i;\n\t\t}\n\t})(this.chip);\n\tthis.start = 0;\n\tthis.count = 0;\n};\n/* ym2612 write */\nY.prototype.write = function(a,v) {\n\tif (cfg.debug>1) console.log(\"OPN::write\",a.toString(16),v.toString(16));\n\tv &= 0xff;\t/* adjust to 8 bit bus */\n\tthis.chip.OPN.ST.address = a&0x1ff;\n\t//switch (a) {\n\t//\tcase 0:\t/* address port 0 */\n\t//\t\tthis.chip.OPN.ST.address = v;\n\t//\t\tbreak;\n\t//\tcase 2:\t/* address port 1 */\n\t//\t\tthis.chip.OPN.ST.address = v|0x100;\n\t//\t\tbreak;\n\t//\tdefault:\t/* data port */\n\t\t\tvar addr = this.chip.OPN.ST.address;\t/* verified by Nemesis on real YM2612 */\n\t\t\tswitch (addr&0x1f0) {\n\t\t\t\tcase 0x20:\t/* 0x20-0x2f Mode */\n\t\t\t\t\tswitch (addr) {\n\t\t\t\t\t\tcase 0x2a:\t/* DAC data (ym2612) */\n\t\t\t\t\t\t\tthis.chip.dacout = ((v-0x80)|0)<<6;\t/* convert to 14-bit output */\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 0x2b:\t/* DAC Sel  (ym2612) */\n\t\t\t\t\t\t\tthis.chip.dacen = !!(v&0x80);\t/* b7 = dac enable */\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\t/* OPN section */\n\t\t\t\t\t\t\tOPN.WriteMode(this.chip, addr, v);\t/* write register */\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\t/* 0x30-0xff OPN section */\n\t\t\t\t\tOPN.WriteReg(this.chip, addr, v);\t/* write register */\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//break;\n\t//}\n};\nY.prototype.read = function(x){return this.chip.OPN.ST.status&0xff;};\n\n/* Generate samples for ym2612 */\nY.prototype.update = function(len) {\n\t//// update length is given in samples\n\t//// but needs to calculate in chip cycles,\n\t//// adjust afterwards +neo\n\tvar num = len*this.ratio;\t// num cycles\n\tif(cfg.debug) console.log(\"==== YM::update\",\"samples=\"+len,\"cycles=\"+num);\n\tvar buf = [[],[]], j, lt, rt;\n\tvar is_csm = !!(this.chip.OPN.ST.mode&0xc0), dis_csm;\n\tvar i = -1; while (++i<this.chip.CH.length) {\n\t\tif (!is_csm) this.chip.CH[i].refresh_fc_eg(this.chip);\n\t\telse if (this.chip.CH[i].canCSM) {\t/* 3SLOT MODE (operator order is 0,1,3,2) */\n\t\t\tif (this.chip.CH[i].SLOT[_SLOT[0]].Incr===-1) {\n\t\t\t\tthis.chip.CH[i].SLOT[_SLOT[0]].refresh_fc_eg(this.chip, this.chip.OPN.SL3.fc[1], this.chip.OPN.SL3.kcode[1]);\n\t\t\t\tthis.chip.CH[i].SLOT[_SLOT[1]].refresh_fc_eg(this.chip, this.chip.OPN.SL3.fc[2], this.chip.OPN.SL3.kcode[2]);\n\t\t\t\tthis.chip.CH[i].SLOT[_SLOT[2]].refresh_fc_eg(this.chip, this.chip.OPN.SL3.fc[0], this.chip.OPN.SL3.kcode[0]);\n\t\t\t\tthis.chip.CH[i].SLOT[_SLOT[3]].refresh_fc_eg(this.chip, this.chip.CH[i].fc, this.chip.CH[i].kcode);\n\t\t\t}\n\t\t}\n\t}\n\t//var msg = [];\n\t//var z = 1.0*this.chip.OPN.ST.scale, q = (len*z+0.5)|0;//(len*this.chip.OPN.ST.scale+0.5)|0;\t// len;\n\tcfg.debugArr.length = 0;\n\tvar didDac, CL = this.chip.CH.length;\n\t/* buffering */\n\ti = -1; while (++i<len) {\n\t\tlt = 0;\n    rt = 0;\n    dis_csm = !!(this.chip.OPN.SL3.key_csm&2);\n\t\tdidDac = false;\t// one DAC for now\n\t\tj = -1; while (++j<CL) {\n\t\t\t//if (j===0&&i<10) cfg.maxcalc = 10;\n\t\t\t//else cfg.maxcalc = 0;\n\t\t\tthis.chip.CH[j].outputs.out = 0;\t/* clear outputs */\n\t\t\tthis.chip.CH[j].update_ssg_eg();\t/* update SSG-EG output */\n\t\t\tif (this.chip.dacen&&this.chip.CH[j].canDAC&&!didDac){\n\t\t\t\tthis.chip.CH[j].outputs.out += this.chip.dacout;\n        didDac = true;\t/* DAC Mode */\n      }\n\t\t\telse this.chip.CH[j].calculate(this.chip);\t/* calculate FM */\n\t\t\t//if (j===0&&(cfg.debugLocal>0)) cfg.debugArr[cfg.debugArr.length] = this.chip.CH[j].outputs.out, --cfg.debugLocal;\n\t\t\t/* 14-bit accumulator channels outputs (range is -8192;+8192) */\n\t\t\tif (this.chip.CH[j].outputs.out>8192) this.chip.CH[j].outputs.out = 8192;\n\t\t\telse if (this.chip.CH[j].outputs.out<-8192) this.chip.CH[j].outputs.out = -8192;\n\t\t\t/* stereo DAC channels outputs mixing  */\n\t\t\t//if (j===0) msg[i] = (this.chip.CH[j].out&this.chip.OPN.pan[(j<<1)+0]);\n\t\t\t//lt += this.chip.CH[j].out&this.chip.OPN.pan[(j<<1)+0];\t// old method\n\t\t\t//rt += this.chip.CH[j].out&this.chip.OPN.pan[(j<<1)+1];\t// old method\n\t\t\tif (!this.chip.CH[j].muted){\n\t\t\t\tlt += (this.chip.CH[j].outputs.out&this.chip.CH[j].pan[0])|0;\n\t\t\t\trt += (this.chip.CH[j].outputs.out&this.chip.CH[j].pan[1])|0;\n      }\n\t\t\tif (dis_csm&&this.chip.CH[j].canCSM) {\t/* CSM Mode Key ON still disabled */\n\t\t\t\t/* CSM Mode Key OFF (verified by Nemesis on real hardware) */\n\t\t\t\tthis.chip.CH[j].keyOffCSM(this.chip, _SLOT[0]);\n\t\t\t\tthis.chip.CH[j].keyOffCSM(this.chip, _SLOT[1]);\n\t\t\t\tthis.chip.CH[j].keyOffCSM(this.chip, _SLOT[2]);\n\t\t\t\tthis.chip.CH[j].keyOffCSM(this.chip, _SLOT[3]);\n\t\t\t}\n\t\t}\n\t\t/* advance LFO */\n\t\tadvance_lfo(this.chip);\n\t\t/* EG is updated every 3 samples */\n\t\tif (cfg.mode) {\t// vb\n\t\t\tthis.chip.OPN.eg.timer += this.chip.OPN.eg.timer_add;\t/* advance envelope generator */\n\t\t\twhile (this.chip.OPN.eg.timer>=this.chip.OPN.eg.timer_overflow) {\n\t\t\t\tthis.chip.OPN.eg.timer -= this.chip.OPN.eg.timer_overflow;\n\t\t\t\t++this.chip.OPN.eg.cnt;\n\t\t\t\tadvance_eg_channels(this.chip, this.chip.OPN.eg.cnt);\n\t\t\t}\n\t\t}\n\t\telse {\t// gpgx\n\t\t\t++this.chip.OPN.eg.timer;\t/* advance envelope generator */\n\t\t\tif (this.chip.OPN.eg.timer>=3) {\n\t\t\t\tthis.chip.OPN.eg.timer = 0;\n\t\t\t\t++this.chip.OPN.eg.cnt;\n\t\t\t\tadvance_eg_channels(this.chip, this.chip.OPN.eg.cnt);\n\t\t\t}\n\t\t}\n\t\t/* buffering */\n\t\tbuf[0][i] = lt;\n\t\tbuf[1][i] = rt;\n\t\t/* CSM mode: if CSM Key ON has occured, CSM Key OFF need to be sent       */\n\t\t/* only if Timer A does not overflow again (i.e CSM Key ON not set again) */\n\t\tthis.chip.OPN.SL3.key_csm <<= 1;\n\t\tINTERNAL_TIMER_A(this.chip);\t/* timer A control */\n\t\tif (dis_csm) {\t/* CSM Mode Key ON still disabled */\n\t\t\tthis.chip.OPN.SL3.key_csm = 0;\t/* CSM Mode Key OFF (verified by Nemesis on real hardware) */\n\t\t}\n\t}\n\t/* timer B control */\n\tINTERNAL_TIMER_B(this.chip, len);\n\t//if (cfg.debug>1) console.log(\"YM::update\",msg);\n\t//// post-update adjustments +neo\n\t//this.count += num;\n\t//var time = this.start;\t/* FM frame initial timestamp */\n\t//var out = [[],[]];\n\t//i = 0; j = 0;\n\t//do {\n\t//\tout[0][i] = buf[0][j|0];\t/* left channel */\n\t//\tout[1][i] = buf[1][j|0];\t/* right channel */\n\t//\tj += (z), ++i;\n\t\t//time += this.ratio, ++i;\t/* increment time counter */\n\t//} while (i<len);\n\t//this.count = time-num, this.start = time-num;\n\t//this.count = this.start = this.count-num;\n\tif (cfg.debugArr.length>0) console.log(cfg.debugArr.join(\", \"));\n\treturn buf;\n};\n\n/* DAC precision (normally 9-bit on real hardware, implemented through simple 14-bit channel output bitmasking) */\nY.prototype.config = function(bits) {\n\t_YM.bitmask = ~((1<<(_TL.BITS-bits))-1);\n\t/* update L/R panning bitmasks */\n\t/*var i = -1; while (++i<12) {\t// 2out*6ch, ORIGINAL METHOD\n\t\tif (this.chip.OPN.pan[i]) this.chip.OPN.pan[i] = _YM.bitmask;\n\t}*/\n\tvar i = this.chip.CH.length; while (--i>-1) {\t// 6ch*2out, NEW PER-CHANNEL PAN\n\t\tif (this.chip.CH[i].pan[0]) this.chip.CH[i].pan[0] = _YM.bitmask;\n\t\tif (this.chip.CH[i].pan[1]) this.chip.CH[i].pan[1] = _YM.bitmask;\n\t}\n};\n\n/* Toggle channel muting +neo */\nY.prototype.toggle = function(ch,m) {\n\tif (ch<6) this.chip.CH[ch].muted = !m;\n}\n\n/* debug output +neo */\nY.prototype.toString = function(){return this.chip.toString();};\n\nY.prototype.load = function(state){};\nY.prototype.save = function(state){};\n})(YM2612);\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\nimport Pizzicato from 'pizzicato'\nimport YM2612 from './utils/ym2612'\nimport AudioKeys from 'audiokeys'\n\nimport { FaVolume,\n         FaVolumeSlash\n        } from 'react-icons/fa'\n\n//todo: unregister keyboard events\n//todo: load keyboard even without emulator\n//todo: update for all 6 channels\n//todo: unload properly\n\nconst ym = new YM2612()\nym.init(7670448, 44100);\t// call this if the clock and/or output sample rate ever need to change\nconst kb = new AudioKeys({polyphony: 1,rows: 1,priority: 'last'})\n\n\nclass Emulator extends React.Component {\n  static contextType = CV2612Context\n  fm = null\n\n  constructor(props) {\n    super(props)\n    this.state = {soundOn: false}\n  }\n\n  componentDidMount(){\n    //todo: unload previos kb dom events\n    this.notes = []\n    ym.config(9)\n    ym.reset()\n    ym.write(0x28,0x00)\n    this.context.emulator = this\n  }\n\n\n  startIfNeeded(){\n    if (this.fm!==null) return\n\n\n    // load all patch params\n    this.context.sendParameters(this.context.params)\n\n\n    kb.down(this.onKeyDown)\n    kb.up(this.onKeyUp)\n    this.fm = new Pizzicato.Sound({\n        source: 'script',\n        options: {\n            audioFunction: (e) => {\n                var buffer = ym.update(1024);\n                var output = e.outputBuffer.getChannelData(0);\n                for (var i = 0; i < e.outputBuffer.length; i++)\n                    output[i] = buffer[0][i]/32768;\n            },\n            bufferSize: 1024\n        }\n    })\n\n    this.delay = new Pizzicato.Effects.Delay({\n        feedback: 0.5,\n        time: 0.5,\n        mix: 0.5\n    })\n\n    //this.fm.addEffect(this.delay)\n\n\n  }\n\n\n  noteOn = (note) => {\n    const f = ( Math.pow(2, ( note-69 ) / 12) ) * 440.0\n    this.onKeyDown({note:note,frequency:f})\n  }\n\n  noteOff = (note) => {\n    this.onKeyUp({note:note})\n  }\n\n  onKeyDown = (note) => {\n    if(this.notes.indexOf(note.note)===-1)\n      this.notes.push(note.note)\n\n    let f = note.frequency\n    let block = 2\n    while (f >= 2048) {\n      f /= 2\n      block++\n    }\n    const freq = parseInt(f)\n    ym.write(0xA4, ((freq >> 8) & 0x07) | ( ( block & 0x07 ) << 3))\n    ym.write(0xA0, freq&0xFF)\n\n    if(this.notes.length===1)\n      ym.write(0x28, 0xF0)\n  }\n\n  onKeyUp = (note) => {\n    for( let i = 0; i < this.notes.length; i++){\n       if ( this.notes[i] === note.note)\n         this.notes.splice(i, 1)\n    }\n\n    if(this.notes.length===0)\n      ym.write(0x28, 0x00)\n  }\n\n  componentWillUnmount(){\n    if(this.fm!==null){\n      this.fm.stop()\n      this.fm = null\n    }\n  }\n\n  update = (ch,op,param,value,params) =>{\n    const mask = (key,size,shift) =>{\n      return (params[`${ch}_${op}_${key}`] & (Math.pow(2,size)-1))<<shift\n    }\n\n    if(param==='lfo' ){\n      //todo: enable lfo\n      ym.write(0x22, value & 0x07);\n    }\n    else if(param==='det' || param==='mul' ){\n      const v = mask('det',3,4)|mask('mul',4,0)\n      ym.write(0x30+4*op, v)\n    }\n    else if(param==='tl'){\n      const v = mask('tl',7,0)\n      ym.write(0x40+4*op, v)\n    }\n    else if(param==='rs' || param==='ar' ){\n      const v = mask('rs',2,6)|mask('ar',5,0)\n      ym.write(0x50+4*op, v)\n    }\n    else if(param==='am' || param==='d1' ){\n      const v = mask('am',1,7)|mask('d1',5,0)\n      ym.write(0x60+4*op, v)\n    }\n    else if(param==='d2' ){\n      const v = mask('d2',5,0)\n      ym.write(0x70+4*op, v)\n    }\n    else if(param==='sl' || param==='rr' ){\n      const v = mask('sl',4,4)|mask('rr',4,0)\n      ym.write(0x80+4*op, v)\n    }\n    else if(param==='al' || param==='fb' ){\n      const v = mask('fb',3,3)|mask('al',3,0)\n      ym.write(0xB0, v)\n    }\n    else if(param==='st' || param==='ams'|| param==='fms' ){\n      const v = mask('st',2,6)|mask('ams',2,4)|mask('fms',3,0)\n      ym.write(0xB4, v)\n    }\n\n\n    if(this.delay && param==='dly' )\n      this.delay.mix = (value/255.0)\n    if(this.delay && param==='dlyt' )\n      this.delay.time = (value/255.0)\n    if(this.delay && param==='dlyf' )\n      this.delay.feedback = (value/255.0)\n\n\n/*\n    this.delay = new Pizzicato.Effects.Delay({\n        feedback: 0.5,\n        time: 0.5,\n        mix: 0.5\n    })\n*/\n\n\n  }\n\n  onToggleSoundClick = (e) => {\n    e.preventDefault()\n    if(this.state.soundOn){\n      this.fm.pause()\n    }else{\n      this.startIfNeeded()\n      this.fm.play()\n    }\n    this.setState({soundOn: !this.state.soundOn})\n  }\n\n  render() {\n    return (\n      <a href=\"/\" title=\"Toggles Sound\" onClick={this.onToggleSoundClick}>{this.state.soundOn ?<FaVolume/>:<FaVolumeSlash/>}</a>\n    )\n  }\n\n}\n\nexport default Emulator;\n\n\n\n/*\n\n\n\n\n\n\n\n\n\n\n// YM2612 Test code\nym.write(0x22, 0x00); // LFO off\nym.write(0x27, 0x00); // Note off (channel 0)\nym.write(0x28, 0x01); // Note off (channel 1)\nym.write(0x28, 0x02); // Note off (channel 2)\nym.write(0x28, 0x04); // Note off (channel 3)\nym.write(0x28, 0x05); // Note off (channel 4)\nym.write(0x28, 0x06); // Note off (channel 5)\nym.write(0x2B, 0x00); // DAC off\nym.write(0x30, 0x71); //\nym.write(0x34, 0x0D); //\nym.write(0x38, 0x33); //\nym.write(0x3C, 0x01); // DT1/MUL\nym.write(0x40, 0x23); //\nym.write(0x44, 0x2D); //\nym.write(0x48, 0x26); //\nym.write(0x4C, 0x00); // Total level\nym.write(0x50, 0x5F); //\nym.write(0x54, 0x99); //\nym.write(0x58, 0x5F); //\nym.write(0x5C, 0x94); // RS/AR\nym.write(0x60, 0x05); //\nym.write(0x64, 0x05); //\nym.write(0x68, 0x05); //\nym.write(0x6C, 0x07); // AM/D1R\nym.write(0x70, 0x02); //\nym.write(0x74, 0x02); //\nym.write(0x78, 0x02); //\nym.write(0x7C, 0x02); // D2R\nym.write(0x80, 0x11); //\nym.write(0x84, 0x11); //\nym.write(0x88, 0x11); //\nym.write(0x8C, 0xA6); // D1L/RR\nym.write(0x90, 0x00); //\nym.write(0x94, 0x00); //\nym.write(0x98, 0x00); //\nym.write(0x9C, 0x00); // Proprietary\nym.write(0xB0, 0x32); // Feedback/algorithm\nym.write(0xB4, 0xC0); // Both speakers on\nym.write(0x28, 0x00); // Key off\nym.write(0xA4, 0x22);\t//\nym.write(0xA0, 0x69); // Set frequency\n\n\n\n\n\n\n\n\nfrom http://www.smspower.org/maxim/Documents/YM2612#reg27\n\nPart I memory map\n=================\n\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| REG  | D7              | D6  | D5               | D4      | D3         | D2             | D1           | D0     |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 22H  |                 |     |                  |         | LFO enable | LFO frequency  |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 24H  | Timer A MSBs    |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 25H  |                 |     |                  |         |            |                | Timer A LSBs |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 26H  | Timer B         |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 27H  | Ch3 mode        |     | Reset B          | Reset A | Enable B   | Enable A       | Load B       | Load A |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 28H  | Operator        |     |                  |         |            | Channel        |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 29H  |                 |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 2AH  | DAC             |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 2BH  | DAC en          |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n|      |                 |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 30H+ |                 | DT1 |                  |         | MUL        |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 40H+ |                 | TL  |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 50H+ | RS              |     |                  | AR      |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 60H+ | AM              |     |                  | D1R     |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 70H+ |                 |     |                  | D2R     |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 80H+ | D1L             |     |                  |         | RR         |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| 90H+ |                 |     |                  |         | SSG-EG     |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n|      |                 |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| A0H+ | Freq. LSB       |     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| A4H+ |                 |     | Block            |         |            | Freq. MSB      |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| A8H+ | Ch3 suppl. freq.|     |                  |         |            |                |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| ACH+ |                 |     | Ch3 suppl. block |         |            | Ch3 suppl freq |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| B0H+ |                 |     | Feedback         |         |            | Algorithm      |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n| B4H+ | L               | R   | AMS              |         |            | FMS            |              |        |\n+------+-----------------+-----+------------------+---------+------------+----------------+--------------+--------+\n\n\n*/\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\nimport {reactLocalStorage} from 'reactjs-localstorage'\nimport Emulator from './emulator'\nimport { FaSlidersH,\n         FaTrash,\n         FaGhost\n        } from 'react-icons/fa'\n\n\n//todo: move midi stuff to midi-utils.js\n//warning: this component cannot be unmounted\nclass Midi extends React.Component {\n  static contextType = CV2612Context\n\n  midiInId = ''\n  midiOutId = ''\n  midiAccess= null\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      midiIns: [],\n      midiOuts: [],\n    }\n\n  }\n\n  componentDidMount(){\n    navigator.requestMIDIAccess( { sysex: true }).then(\n      (ma)=>{\n        this.midiAccess = ma\n        this.refreshMidiPorts()\n        ma.onstatechange = this.onMIDIStateChange\n      },()=>console.log('Could not access your MIDI devices.'))\n\n    this.context.midi = this\n  }\n\n\n  onChangeMidiIn = (ev) => {\n    this.setMidiIn(ev.target.value)\n  }\n\n  onChangeMidiOut = (ev) => {\n    this.setMidiOut(ev.target.value)\n  }\n\n  setMidiOut(id){\n    this.midiOutId = id\n    this.setState({midiOutId: id})\n    reactLocalStorage.set('midiOutId',id)\n    this.sendHandshake()\n  }\n\n  setMidiIn(id){\n    this.midiInId = id\n    this.setState({midiInId: id})\n    reactLocalStorage.set('midiInId',id)\n    const midiIn = this.midiAccess.inputs.get(id)\n    if(midiIn){\n      midiIn.onmidimessage = this.onMIDIMessage\n    }else{\n      console.log('Midi In error')\n    }\n  }\n\n  sendHandshake(){\n    // device ID request\n    const msg = [0xF0, 0x7E, 0x7F, 0x06, 0x01, 0xF7]\n    this.sendSysex(msg)\n\n  }\n\n  sendSysex = (data) => {\n    this.sendMidi(data)\n  }\n\n  sendSysexSet = (addr,value) => {\n    // send data header\n    const msg = [0xF0, 0x41, 0x26, 0x12, 0x12]\n    // part 6 is a three bytes address\n    // part 7 is the data itself, in this case, a single 7-bit\n    // part 8 is the cheksum , 0x7F - the sum of address and value\n    const chksum = 0x7F - ((addr[0]+addr[1]+addr[2]+value)%0x7F)\n    msg.push(addr[0])\n    msg.push(addr[1])\n    msg.push(addr[2])\n    msg.push(value)\n    msg.push(chksum)\n    // part 9  is the end byte\n    msg.push(0xF7)\n    this.sendSysex(msg)\n  }\n\n  sendMidi = (data) => {\n    const ma = this.midiAccess\n    if(ma===null){\n      console.log('Null midi Access')\n      return\n    }\n    const midiOut = ma.outputs.get(this.midiOutId)\n    if(midiOut){\n      midiOut.send(data)\n    }else{\n      console.log('No Midi Out')\n    }\n  }\n\n  onMIDIStateChange = (e) => {\n    // Print information about the (dis)connected MIDI controller\n    console.log(e.port.name, e.port.manufacturer, e.port.state, e.port.type)\n    this.refreshMidiPorts()\n  }\n\n  refreshMidiPorts() {\n    const ma = this.midiAccess\n    const inputs = Array.from(ma.inputs.values())\n    const outputs = Array.from(ma.outputs.values())\n    this.setState({midiIns:inputs, midiOuts:outputs})\n\n    if(inputs.length){\n      let id = reactLocalStorage.get('midiInId')\n      // is last id still available??\n      if( !inputs.map(i=>i.id).includes(id) ){\n        id = inputs[0].id\n      }\n      if(id !== this.midiInId)\n        this.setMidiIn(id)\n    }\n    if(outputs.length){\n      let id = reactLocalStorage.get('midiOutId')\n      // is last id still available??\n      if( !outputs.map(o=>o.id).includes(id) ){\n        id = outputs[0].id\n      }\n      if(id !== this.midiOutId)\n        this.setMidiOut(id)\n    }\n  }\n\n  onMIDIMessage = (msg) => {\n\n    if(msg.target.id !== this.midiInId)\n      return\n\n    const data = Array.from(msg.data)\n    const type = data[0] & 0xf0\n\n    if(type===0xF0){ // sysex\n      const idReply = [0xF0, 0x7E, 0x00, 0x06, 0x02,  //identity reply\n          0x26, 0x26, 0x12, 0x00, 0x00, // ID - family code - model number\n          0x01, 0x00, 0x00, 0x00, 0xF7] //version - end\n      if(JSON.stringify(data) === JSON.stringify(idReply)){\n        this.setState({lastMsg: `CV2612 found!` })\n      }\n      return\n    }\n\n    if(type === 0xB0){\n      const ch = data[0] & 0x0f\n      const cc = data[1] & 0x7f\n      const val = data[2] & 0x7f\n      this.context.handleCC(ch,cc, val)\n      this.setState({lastMsg: `${type},${ch},${cc},${val}` })\n    }\n\n    // resend noteon/off events\n    if(type === 0x80 || type === 0x90){\n      this.sendMidi(data)\n      if(type === 0x90){\n        this.context.emulator.noteOn(data[1])\n      }else{\n        this.context.emulator.noteOff(data[1])\n      }\n    }\n\n  }\n\n  onLearnClick = (e) => {\n    e.preventDefault()\n    this.context.toggleLearning()\n  }\n\n  onPanicClick = (e) => {\n    e.preventDefault()\n    this.context.midi.sendSysexSet([0x06,0x04,0x10],0x00)\n  }\n\n  onClearClick = (e) => {\n    e.preventDefault()\n    this.context.midi.sendSysexSet([0x06,0x04,0x11],0x00)\n  }\n\n  //the navigation here came handy...\n  onToggleSoundClick = (e) => {\n    e.preventDefault()\n    this.context.toggleSound()\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"midi\">\n          <span>In</span>\n          <select value={this.state.midiInId} onChange={this.onChangeMidiIn}>\n            {this.state.midiIns.map((i) =><option key={i.id} value={i.id}>{i.name}</option>)}\n          </select>\n          <span>Out</span>\n          <select value={this.state.midiOutId} onChange={this.onChangeMidiOut}>\n            {this.state.midiOuts.map((o) =><option key={o.id} value={o.id}>{o.name}</option>)}\n          </select>\n          <a className={this.context.learning ? 'learning':''} href=\"/\" title=\"Click to Learn\" onClick={this.onLearnClick}><FaSlidersH/></a>\n          <a href=\"/\" title=\"Click if panic\" onClick={this.onPanicClick}><FaGhost/></a>\n          <a href=\"/\" title=\"Click to clear midi mapping\" onClick={this.onClearClick}><FaTrash/></a>\n          <Emulator />\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Midi;\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\n\nlet seqTimeOut\nlet seqNote = 0\nlet seqNoteOn = false\n\nclass Sequencer extends React.Component {\n  static contextType = CV2612Context\n\n  constructor(props){\n    super(props);\n    this.state = {\n      sequencerOn: false,\n    }\n  }\n\n  componentWillUnmount() {\n    this.sequencerStop()\n  }\n\n\n  onClick = (e) => {\n    e.preventDefault()\n    this.setState({sequencerOn: !this.state.sequencerOn})\n  }\n\n  sequencerStop() {\n    clearTimeout(seqTimeOut)\n    if(seqNoteOn){\n      this.context.midi.sendMidi([0x80,seqNote,0x00])\n      seqNoteOn = false\n    }\n  }\n\n  sequencerTick() {\n    if(seqNoteOn){\n      this.context.midi.sendMidi([0x80,seqNote,0x00])\n      seqNoteOn = false\n    }\n    else{\n      //sets a random note\n      seqNote = [0,3,5,7,10].sort(() => Math.random() - 0.5)[0]\n                     + (3+Math.floor(Math.random()*5))*12\n      this.context.midi.sendMidi([0x90,seqNote,100])\n      seqNoteOn = true\n    }\n\n    if(this.state.sequencerOn){\n      const duration = 500/Math.pow(2,Math.floor(Math.random()*5))\n      seqTimeOut = setTimeout(()=> this.sequencerTick(), duration)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.sequencerOn !== this.state.sequencerOn){\n      if(this.state.sequencerOn){\n        this.sequencerTick()\n      }else{\n        this.sequencerStop()\n      }\n    }\n  }\n\n  render() {\n    //todo: fixme\n    return null\n    return (\n      <button onClick={this.onClick}>{this.state.sequencerOn ? 'Stop Seq':'Start Seq'}</button>\n    )\n  }\n}\n\n\nexport default Sequencer\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\nimport {dmp2patch, emptyParams} from \"./utils/patches-utils\"\n\nimport {reactLocalStorage} from 'reactjs-localstorage'\nimport { FaPlus,\n         FaBackspace,\n         FaCaretLeft,\n         FaCaretRight,\n         FaBomb,\n         FaSave,\n         FaUpload\n        } from 'react-icons/fa'\n\n\nclass Patches extends React.Component {\n  static contextType = CV2612Context\n\n  constructor(props){\n    super(props)\n    this.state = {\n      patches: [{name: 'empty', params: emptyParams()}],\n      current: 0,\n    }\n  }\n\n  componentDidMount(){\n    const patches = reactLocalStorage.getObject('patches',[])\n    if(patches.length===0 || Object.keys(patches).length===0){\n      this.loadDefaultPatches()\n    }else{\n      this.setState({patches:patches})\n    }\n  }\n\n  save(patches){\n    reactLocalStorage.setObject('patches',patches)\n    this.setState({patches:patches})\n  }\n\n  loadDefaultPatches(){\n    //empty previous patches\n    this.save([])\n\n    const r = new XMLHttpRequest()\n    r.onreadystatechange = (ev) => {\n      if(r.readyState === 4 && r.status === 200) {\n        const insts = r.responseText.split(/\\r?\\n/).filter( x => x.length>1)\n        for(const i of insts){\n          const r = new XMLHttpRequest()\n          r.responseType = 'arraybuffer'\n          r.onreadystatechange = (ev) => {\n            if(r.readyState === 4 && r.status === 200) {\n              const d = new Int8Array(r.response)\n              this.addDmpPatch(i,d)\n            }\n          }\n          r.open('GET',encodeURI(`/cv2612/instruments/${i}`))\n          r.send(null)\n        }\n      }\n    }\n    r.open('GET', '/cv2612/instruments/index.txt')\n    r.send(null)\n  }\n\n  //todo: load to all voices or current voice\n  componentDidUpdate(prevProps, prevState) {\n    //fixme: if i delete a patch, current doesnt change...\n    if(prevState.current !== this.state.current){\n      const i = parseInt(this.state.current)\n      const patch = this.state.patches[i]\n      if(patch)\n        this.context.updateParams(patch.params)\n    }\n\n    if(prevState.patches.length !== this.state.patches.length){\n      this.setState({current:0})\n      const patch = this.state.patches[0]\n      if(patch)\n        this.context.updateParams(patch.params)\n    }\n\n  }\n\n\n  addDmpPatch = (name, d) => {\n    const patch = dmp2patch(name,d)\n    if(patch !== null){\n      //is there any risk here?\n      const patches = this.state.patches\n      patches.push(patch)\n      this.save(patches)\n    }\n  }\n\n  onChangeHandler = (ev) => {\n    for(const f of ev.target.files){\n      const fr = new FileReader()\n      fr.onload = () =>{\n        const d = new Int8Array(fr.result)\n        this.addDmpPatch(f.name,d)\n      }\n      fr.readAsArrayBuffer(f)\n    }\n  }\n\n  onChange = (ev) => {\n    this.setState({current: ev.target.value})\n    ev.target.blur()\n  }\n\n  onSave = (e) => {\n    e.preventDefault()\n    if(this.state.patches.length===0)\n      return\n\n    const patches = this.state.patches\n    const i = parseInt(this.state.current)\n    patches[i].params = this.context.params\n    this.save(patches)\n\n  }\n\n  onCreate = (e) => {\n    e.preventDefault()\n    let patch = prompt(\"Name your patch\")\n    if (patch !== null && patch !== \"\") {\n      const patches = this.state.patches\n      patches.push({name:patch, params: this.context.params})\n      this.save(patches)\n    }\n  }\n\n  onDelete = (e) => {\n    e.preventDefault()\n    if(this.state.patches.length<=1)\n      return\n\n    const patches = this.state.patches.filter( (p,i) => i!==parseInt(this.state.current))\n    this.save(patches)\n  }\n\n  onLoadDefaults = (e) => {\n    e.preventDefault()\n    this.loadDefaultPatches()\n  }\n\n  onLeftClick = (e) => {\n    e.preventDefault()\n    const i = parseInt(this.state.current)\n    if(i>0){\n      this.setState({current:i-1})\n    }\n  }\n\n  onRightClick = (e) => {\n    e.preventDefault()\n    const i = parseInt(this.state.current)\n    if(i<this.state.patches.length-1){\n      this.setState({current:i+1})\n    }\n  }\n\n  onUploadClick = (e) => {\n    e.preventDefault()\n    this.refs.file.click()\n  }\n\n  render() {\n    return (\n      <nav>\n        <a href=\"/\" title=\"Previous Patch\" onClick={this.onLeftClick}><FaCaretLeft/></a>\n        <select value={this.state.current} onChange={this.onChange}>\n          {this.state.patches.map((p,i) =><option key={i} value={i}>{p.name}</option>)}\n        </select>\n        <a href=\"/\" title=\"Next Patch\" onClick={this.onRightClick}><FaCaretRight/></a>\n        <a href=\"/\" title=\"Save this Patch\" onClick={this.onSave}><FaSave/></a>\n        <a href=\"/\" title=\"Create new Patch\" onClick={this.onCreate}><FaPlus/></a>\n        <a href=\"/\" title=\"Upload Patches\" onClick={this.onUploadClick}><FaUpload/></a>\n        <a href=\"/\" title=\"Delete this Patch\" onClick={this.onDelete}><FaBackspace/></a>\n        <a href=\"/\" title=\"Load default Patches\" onClick={this.onLoadDefaults}><FaBomb/></a>\n        <input style={{display:'none'}} ref=\"file\" type=\"file\" accept=\".dmp\" multiple onChange={this.onChangeHandler} / >\n\n      </nav>\n    )\n  }\n}\n\n\nexport default Patches;\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\n\nclass Envelope extends React.Component {\n  static contextType = CV2612Context\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.code = `${props.ch}_${props.op}`\n  }\n\n  render() {\n    return (\n      <div className=\"envelope\">\n        <svg height=\"100\" width=\"400\" viewBox=\"0 0 400 100\" xmlns=\"http://www.w3.org/2000/svg\">\n          <polyline points={this.context.envelopes[this.code]} />\n        </svg>\n      </div>\n    )\n  }\n}\n\nEnvelope.defaultProps = {\n  ch: 6,\n  op: 4\n};\n\n\nexport default Envelope;\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\n\nclass Slider extends React.Component {\n  static contextType = CV2612Context\n  constructor(props) {\n    super(props)\n    this.code = `${props.ch}_${props.op}_${props.name}`\n    this.state = {}\n  }\n\n  componentWillMount(){\n    const map =this.context.mapping[this.code]\n    this.max = Math.pow(2,map.bits)-1\n  }\n\n  onChange = (ev) =>{\n    ev.preventDefault()\n    this.context.updateParam(this.code,parseInt(ev.target.value))\n    this.context.setActiveParameter(this.code)\n  }\n\n  onClick = (ev) =>{\n    ev.preventDefault()\n    this.context.setActiveParameter(this.code)\n  }\n\n  render() {\n    const m = this.context.mapping[this.code]\n    const mapped = ( (m.ch && m.cc)!==null)\n    let className = 'slider'\n    if(this.context.learning) className += ' learn'\n    if(this.context.activeParameter === this.code) className += ' active'\n    if(mapped) className += ' mapped'\n\n    return (\n      <div className={className} onClick={this.onClick} >\n        <label>{this.props.name}</label>\n        <input type=\"range\" step={1} min={0} max={this.max} value={this.context.params[this.code]}\n         onChange={this.onChange} />\n        <span>\n          {this.context.params[this.code] + (this.context.learning ? (mapped ? ` - ${m.ch}:${m.cc}` : ' - n/a'): '') }\n        </span>\n      </div>\n    )\n  }\n}\n\nSlider.defaultProps = {\n  env: false,\n  ch: 6,\n  op: 4\n}\n\nexport default Slider\n","import React from 'react'\nimport Envelope from \"./envelope\"\nimport Slider from \"./slider\"\nimport {CV2612Context} from \"./context\"\n\nclass Operator extends React.Component {\n  static contextType = CV2612Context\n\n  render() {\n    return (\n      <div className=\"operator\">\n        <h5>Op {this.props.op+1}</h5>\n        <Slider name=\"ar\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"d1\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"sl\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"d2\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"rr\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"tl\" ch={this.props.ch} op={this.props.op} />\n        <Envelope ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"mul\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"det\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"rs\" ch={this.props.ch} op={this.props.op} />\n        <Slider name=\"am\" ch={this.props.ch} op={this.props.op} />\n      </div>\n    )\n  }\n}\n\n\nOperator.defaultProps = {\n  ch: 6\n};\n\n\nexport default Operator;\n","import React from 'react'\nimport Operator from \"./operator\"\nimport Slider from \"./slider\"\nimport {CV2612Context} from \"./context\"\nimport algorithmAscii from \"./utils/algorithmAscii\"\n\nclass Channel extends React.Component {\n  static contextType = CV2612Context\n\n  render() {\n    return (\n      <div className=\"channel\">\n        <table>\n          <tbody>\n            <tr>\n              <td><Slider name=\"lfo\" /></td>\n              <td></td>\n              <td><Slider name=\"al\" ch={this.props.ch} /></td>\n              <td>\n                <pre className=\"algorithm\">\n                  {algorithmAscii(this.context.params[`${this.props.ch}_4_al`])}\n                </pre>\n              </td>\n            </tr>\n            <tr>\n              <td><Slider name=\"fb\"  ch={this.props.ch} /></td>\n              <td><Slider name=\"ams\" ch={this.props.ch} /></td>\n              <td><Slider name=\"fms\" ch={this.props.ch} /></td>\n              <td><Slider name=\"st\"  ch={this.props.ch} /></td>\n              <td></td>\n            </tr>\n            <tr>\n              <td><Operator ch={this.props.ch} op={0} /></td>\n              <td><Operator ch={this.props.ch} op={1} /></td>\n              <td><Operator ch={this.props.ch} op={2} /></td>\n              <td><Operator ch={this.props.ch} op={3} /></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nChannel.defaultProps = {\n  ch: 6\n}\n\nexport default Channel\n","export default function algorithmAscii(algorithm){\n  switch(algorithm) {\n    case 0:\n      return `\n\n\n\n╔═╗ ╔═╗ ╔═╗ ╔═╗\n║1╠═╣2╠═╣3╠═╣4╠══\n╚═╝ ╚═╝ ╚═╝ ╚═╝\n\n\n\n`\n    case 1:\n    return `\n\n╔═╗\n║1╠═╗\n╚═╝ ║  ╔═╗  ╔═╗\n    ╠══╣3╠══╣4╠══\n╔═╗ ║  ╚═╝  ╚═╝\n║2╠═╝\n╚═╝\n\n`\n    case 2:\n    return `\n\n     ╔═╗\n     ║1╠═╗\n     ╚═╝ ║  ╔═╗\n         ╠══╣4╠══\n╔═╗  ╔═╗ ║  ╚═╝\n║2╠══╣3╠═╝\n╚═╝  ╚═╝\n\n`\n    case 3:\n    return `\n\n╔═╗  ╔═╗\n║1╠══╣2╠═╗\n╚═╝  ╚═╝ ║  ╔═╗\n         ╠══╣4╠══\n     ╔═╗ ║  ╚═╝\n     ║3╠═╝\n     ╚═╝\n\n`\n    case 4:\n    return `\n\n╔═╗  ╔═╗\n║1╠══╣2╠═╗\n╚═╝  ╚═╝ ║\n         ╠══\n╔═╗  ╔═╗ ║\n║3╠══╣4╠═╝\n╚═╝  ╚═╝\n\n`\n    case 5:\n    return `\n      ╔═╗\n    ╔═╣2╠══╗\n    ║ ╚═╝  ║\n╔═╗ ║ ╔═╗  ║\n║1╠═╬═╣3╠══╬══\n╚═╝ ║ ╚═╝  ║\n    ║ ╔═╗  ║\n    ╚═╣4╠══╝\n      ╚═╝\n`\n    case 6:\n    return `\n ╔═╗  ╔═╗\n ║1╠══╣2╠══╗\n ╚═╝  ╚═╝  ║\n      ╔═╗  ║\n      ║3╠══╬══\n      ╚═╝  ║\n      ╔═╗  ║\n      ║4╠══╝\n      ╚═╝\n`\n    case 7:\n    return `\n\n\n╔═╗ ╔═╗ ╔═╗ ╔═╗\n║1║ ║2║ ║3║ ║4║\n╚╦╝ ╚╦╝ ╚╦╝ ╚╦╝\n ╚═══╩═╦═╩═══╝\n       ║\n       ╚══\n\n`\n  default:\n      return 'no algorithm'\n  }\n}\n","import React from 'react'\nimport {CV2612Context} from \"./context\"\nimport Channel from \"./channel\"\n\nclass Channels extends React.Component {\n  static contextType = CV2612Context\n\n  onFilterChannel= (ev) => {\n    ev.preventDefault()\n    const ch = parseInt(ev.target.attributes.ch.value)\n    this.context.filterChannel(ch)\n  }\n\n  render() {\n    const f = this.context.filters\n    return (\n        <>\n          <nav>\n            <a href=\"/\" className={f.ch === 6 ? 'active':'' } ch={6} onClick={this.onFilterChannel} title=\"Show only Omni channel\">Omni Channel</a>\n            {[0,1,2,3,4,5].map(i => <a href=\"/\" className={f.ch === i ? 'active':'' } key={i} ch={i} onClick={this.onFilterChannel} title={\"Show only channel \"+(i+1)}>{i+1}</a>)}\n          </nav>\n          {[0,1,2,3,4,5,6].map(i => (f.ch === i) && <Channel key={i} ch={i} />)}\n        </>\n    )\n  }\n\n}\n\nexport default Channels\n","\nimport React from \"react\"\nimport CV2612Provider from \"./context\"\nimport Midi from \"./midi\"\nimport Sequencer from \"./sequencer\"\nimport Patches from \"./patches\"\nimport Channels from \"./channels\"\n\nclass Device extends React.Component {\n\n  render() {\n    return (\n        <CV2612Provider>\n          <Midi />\n          <Sequencer />\n          <Patches />\n          <Channels />\n        </CV2612Provider>\n    )\n  }\n}\n\nexport default Device\n","import React from \"react\"\nimport Layout from \"../layouts/cv2612\"\nimport SEO from \"../components/seo\"\nimport Device from \"../components/cv2612/device\"\n\n\nclass CV2612Index extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location} >\n        <SEO title=\"cv2612\" />\n        <Device />\n      </Layout>\n    )\n  }\n}\n\nexport default CV2612Index\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from 'prop-types'\n\nconst swaps = [['i','1'],['e','3'],['o','0'],['g','6'],['a','4']]\n\nclass Brand extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {title: props.title}\n  }\n\n  getDiff(){\n    let diff = 0\n    for(let i=0;i<this.props.title.length;i++){\n      diff += (this.state.title[i]===this.props.title[i]) ? 0 : 1\n    }\n    return diff\n  }\n\n  timer() {\n    let i = Math.floor(Math.random()*swaps.length)\n    let from = Math.round(Math.random())\n    if(this.getDiff()>3) from = 1\n    let to = from ? 0 : 1\n    if(Math.random()<0.5){\n      this.setState({\n        title: this.state.title.replace(swaps[i][from],swaps[i][to])\n      })\n    }\n  }\n\n  componentDidMount(){\n    this.intervalId = setInterval(this.timer.bind(this), 100);\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return (\n        <h1>\n          <Link to={`/`}>{this.state.title}</Link>\n        </h1>\n    )\n  }\n\n}\n\n\n\nBrand.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n\nexport default Brand\n"],"sourceRoot":""}